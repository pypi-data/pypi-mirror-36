Metadata-Version: 1.1
Name: flat-api
Version: 0.7.0
Summary: Flat API Client
Home-page: https://github.com/FlatIO/api-client-python
Author: The Flat Team (https://flat.io)
Author-email: developers@flat.io
License: Apache
Description: Python Client for the Flat REST API
        ===================================
        
        |Build Status|
        
        The Flat API allows you to easily extend the abilities of the `Flat
        Platform <https://flat.io>`__, with a wide range of use cases including
        the following: - Creating and importing new music scores using MusicXML
        or MIDI files - Browsing, updating, copying, exporting the userâ€™s scores
        (for example in MP3, WAV or MIDI) - Managing educational resources with
        Flat for Education: creating & updating the organization accounts, the
        classes, rosters and assignments.
        
        You can find the API reference including code samples and our OpenAPI
        Specification at the following url:
        https://flat.io/developers/api/reference.
        
        To request some API credentials, please visit
        https://flat.io/developers.
        
        This Python package is automatically generated by the `Swagger
        Codegen <https://github.com/swagger-api/swagger-codegen>`__ project.
        
        Requirements.
        -------------
        
        Python 2.7 and 3.4+
        
        Installation & Usage
        --------------------
        
        pip install
        ~~~~~~~~~~~
        
        .. code:: sh
        
            pip install flat_api
        
        .. code:: sh
        
            pip install git+https://github.com/FlatIO/api-client-python.git
        
        Then import the package:
        
        .. code:: python
        
            import flat_api
        
        Setuptools
        ~~~~~~~~~~
        
        Install via `Setuptools <http://pypi.python.org/pypi/setuptools>`__.
        
        .. code:: sh
        
            python setup.py install --user
        
        (or ``sudo python setup.py install`` to install the package for all
        users)
        
        Then import the package:
        
        .. code:: python
        
            import flat_api
        
        Getting Started
        ---------------
        
        Please follow the installation procedure above and then run the
        following:
        
        .. code:: python
        
            from __future__ import print_function
            import time
            import flat_api
            from flat_api.rest import ApiException
            from pprint import pprint
        
            configuration = flat_api.Configuration()
            # Configure your personal access token or OAuth2 access token
            configuration.access_token = 'YOUR_ACCESS_TOKEN'
            flat_api_client = flat_api.ApiClient(configuration)
        
            # create an instance of the API class
            api_instance = flat_api.AccountApi(flat_api_client)
        
            try:
                # Get current user profile
                api_response = api_instance.get_authenticated_user()
                pprint(api_response)
            except ApiException as e:
                print("Exception when calling AccountApi->get_authenticated_user: %s\n" % e)
        
        .. |Build Status| image:: https://travis-ci.org/FlatIO/api-client-python.svg?branch=master
           :target: https://travis-ci.org/FlatIO/api-client-python
        
Keywords: Flat API,MusicXML,Music Notation,MIDI
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Education
Classifier: Intended Audience :: System Administrators
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Operating System :: MacOS
Classifier: Operating System :: POSIX
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Topic :: Artistic Software
Classifier: Topic :: Education
Classifier: Topic :: Multimedia :: Sound/Audio
