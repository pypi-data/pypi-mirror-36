"""
Adapt an index generated by XeLaTeX so that it sorts words containing diacritics correctly

The ways how the *dx files are generated varies between different versions of TexLive
"""

import re, sys
from asciify import ASCIITRANS, REPLACEMENTS, is_ascii, asciify
from delatex import dediacriticize

# the LaTeX index entries consist of the string to be displayed (after the "@")
# and the string used for sorting (before the "@"). 
p = re.compile(r"\\indexentry \{(.*?)@")

   
def processline(s): 
  """Conform the input string to the index requirements and return the conformed string
  
  To conform the string, first LaTex diacritics like {\'{e}} are removed. Then, Unicode 
  is translated to ASCII  
    
  Args: 
    s (str): the input string
    
  Returns:
    str:  the output string
    
  Example: 
    >>> print(processline("\v{C}{\'{e}}pl\"o, SlavomÃ­r")
    Ceplo, Slavomir
  """
    
  if s.strip() == '':
    return s  
  #find the substring used for sorting
  m = p.match(s) 
  sortstring = ''
  try:
    sortstring = m.groups(1)[0] 
  except AttributeError:
    print("%s could not be parsed" % repr(s))    
  tmpstring = dediacriticize(sortstring)
  tmpstring = asciify(tmpstring) 
  if sortstring == tmpstring:    
    return s
  else:
    print("%s => %s"%(sortstring,tmpstring))
    return s.replace("%s@"%sortstring,"%s@"%tmpstring) 
  
def processfile(filename): 
  """Read a file and write the fixed output to another file with "mod" appended to its name
  
  Args: 
    filename (str): the path to the file
    
  Returns:
    None
    
  """
  print("Reading", filename)  
  with open(filename) as indexfile:
    lines = indexfile.readlines()
  print("Found %i lines" % len(lines))
  #read all lines, process them and write them to output file
  processedlines = list(map(processline, lines))
  with open(filename.replace('.','mod.'),'w') as out:
    out.write(''.join(processedlines))

if __name__ == '__main__':
  """
  Transform a file main._dx into mainmod._dx, where the underscore represents an index type given in the argument.

  Index types are:
  a: author index 
  s: subject index 
  l: language index

  Examples: 
  > python3 fixindex.py 
  fixes the author index only. Read: main.adx. Write: mainmod.adx
  > python3 fixindex.py a
  fixes the author index only. Read: main.adx. Write: mainmod.adx
  > python3 fixindex.py l
  fixes the language index only. Read: main.ldx. Write: mainmod.ldx
  > python3 fixindex.py lsa
  fixes all three index types. Read: main.adx, main.ldx, main.sdx. Write: mainmod.adx, mainmod.ldx, mainmod.sdx
  """
  indextypes = 'a'  
  try:
      indextypes = sys.argv[1]
  except IndexError:
      pass
  for indextype in indextypes:
      processfile("main.%sdx" % indextype)
  
  