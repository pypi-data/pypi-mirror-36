Metadata-Version: 2.1
Name: odoo_connector
Version: 1.0.1
Summary: This is a library that allow an easy and friendly connection with an Odoo ERP instance on Pyhton 2.x
Home-page: https://github.com/franklintiel/odoo-connector/wiki
Author: Franklin Sarmiento
Author-email: franklinitiel@gmail.com
License: MIT
Project-URL: Source, https://github.com/franklintiel/odoo-connector
Project-URL: Documentation, https://github.com/franklintiel/odoo-connector/
Project-URL: Tracker, https://github.com/franklintiel/odoo-connector/issues
Description: # Easy Connector with Odoo ERP!
        This is a library that allow an easy and friendly connection with an Odoo ERP instance on Pyhton 2.x
        
        ## Installation using PIP command
        - Use the command
        ```shell
        $ pip install odoo_connector
        ```
        
        ## How to use connect
        ```python
        from odoo.connectors import OdooConnector
        odoo = OdooConnector(endpoint='your-odoo-endpoint', dbname='your-odoo-dbname', username='your-odoo-user', password='your-odoo-password')
        uid = odoo.connect()
        ```
        ### Hot to add, edit and delete ( using the method write() )
        ```python
        from odoo.connectors import OdooConnector
        odoo = OdooConnector(endpoint='your-odoo-endpoint', dbname='your-odoo-dbname', username='your-odoo-user', password='your-odoo-password')
        uid = odoo.connect()
        # create a new partner
        data = [{'name': 'Test User', 'email': 'test@domain.com'}]
        result = odoo.write(uid=uid, model='res.partner', action='create', data=data)
        
        # edit partner
        id = 1 # change the value for the any do you want
        data = [[id], {'name': 'Test User', 'email': 'test@domain.com'}]
        result = odoo.write(uid=uid, model='res.partner', action='write', data=data)
        
        # delete partner
        id = 1 # change the value for the any do you want
        data = [id]
        result = odoo.write(uid=uid, model='res.partner', action='unlink', data=data)
        
        # create a new user
        data = [{'login': 'test@domain.com', 'name': 'Test User', 'password': '123456'}]
        result = odoo.write(uid=uid, model='res.users', action='signup', data=data)
        ```
        
        ### Hot to search, search_read and read ( using the method search() )
        ```python
        from odoo.connectors import OdooConnector
        odoo = OdooConnector(endpoint='your-odoo-endpoint', dbname='your-odoo-dbname', username='your-odoo-user', password='your-odoo-password')
        uid = odoo.connect()
        
        query = [[['is_company', '=', True], ['customer', '=', True]]]
        fields = ['name', 'email', 'country_id']
        
        # using the search method
        result = odoo.search(uid=uid, model='res.partner', action='search', queries=query, parameters=None)
        
         # using the search with pagination
        parameters = {'offset': 5, 'limit': 10}
        result = odoo.search(uid=uid, model='res.partner', action='search', queries=query, parameters=parameters)
        
        # using the search_count
        odoo.search(uid=uid, model='res.partner', action='search_count', queries=query)
        
        # using the read method
        ids = odoo.search(uid=uid, model='res.partner', action='search', queries=query, parameters={'limit': 1})
        if len(ids) > 0:
            result = self.odoo.search(
                        uid=uid, model='res.partner', action='read', queries=ids, parameters={'fields': fields}  formatted=True)
        
        # The "formatted" attribute allow format the result in a JSON object, this is a boolean attribute by default is False
        
        # using the search_read method with parameters.
        result = odoo.search(
                    uid=uid, model='res.partner', action='search_read', queries=query, parameters={'fields': fields, 'limit': 2}, formatted=True)
        ```
        
        The search and write methods were tested with all methods allowed on the External API Documentation from Odoo website
        and the write() and search() methods can work with any methods from any models existing on Odoo instance
        
Keywords: odoo connector connect interface connection odoo_connection odoo_connect odoo_connector odoo_interface odoo_protocol
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 2.7
Requires-Python: >=2.*
Description-Content-Type: text/markdown
