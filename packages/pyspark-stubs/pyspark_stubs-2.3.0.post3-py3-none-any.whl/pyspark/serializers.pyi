# Stubs for pyspark.serializers (Python 3.5)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional

class SpecialLengths:
    END_OF_DATA_SECTION = ...  # type: int
    PYTHON_EXCEPTION_THROWN = ...  # type: int
    TIMING_DATA = ...  # type: int
    END_OF_STREAM = ...  # type: int
    NULL = ...  # type: int

class Serializer:
    def dump_stream(self, iterator, stream): ...
    def load_stream(self, stream): ...
    def __eq__(self, other): ...
    def __ne__(self, other): ...
    def __hash__(self): ...

class FramedSerializer(Serializer):
    def __init__(self) -> None: ...
    def dump_stream(self, iterator, stream): ...
    def load_stream(self, stream): ...
    def dumps(self, obj): ...
    def loads(self, obj): ...

class BatchedSerializer(Serializer):
    UNLIMITED_BATCH_SIZE = ...  # type: int
    UNKNOWN_BATCH_SIZE = ...  # type: int
    serializer = ...  # type: Any
    batchSize = ...  # type: Any
    def __init__(self, serializer, batchSize: Any = ...) -> None: ...
    def dump_stream(self, iterator, stream): ...
    def load_stream(self, stream): ...

class FlattenedValuesSerializer(BatchedSerializer):
    def __init__(self, serializer, batchSize: int = ...) -> None: ...
    def load_stream(self, stream): ...

class AutoBatchedSerializer(BatchedSerializer):
    bestSize = ...  # type: Any
    def __init__(self, serializer, bestSize: Any = ...) -> None: ...
    def dump_stream(self, iterator, stream): ...

class CartesianDeserializer(Serializer):
    key_ser = ...  # type: Any
    val_ser = ...  # type: Any
    def __init__(self, key_ser, val_ser) -> None: ...
    def load_stream(self, stream): ...

class PairDeserializer(Serializer):
    key_ser = ...  # type: Any
    val_ser = ...  # type: Any
    def __init__(self, key_ser, val_ser) -> None: ...
    def load_stream(self, stream): ...

class NoOpSerializer(FramedSerializer):
    def loads(self, obj): ...
    def dumps(self, obj): ...

class PickleSerializer(FramedSerializer):
    def dumps(self, obj): ...
    def loads(self, obj, encoding: str = ...): ...

class CloudPickleSerializer(PickleSerializer):
    def dumps(self, obj): ...

class MarshalSerializer(FramedSerializer):
    def dumps(self, obj): ...
    def loads(self, obj): ...

class AutoSerializer(FramedSerializer):
    def __init__(self) -> None: ...
    def dumps(self, obj): ...
    def loads(self, obj): ...

class CompressedSerializer(FramedSerializer):
    serializer = ...  # type: Any
    def __init__(self, serializer) -> None: ...
    def dumps(self, obj): ...
    def loads(self, obj): ...

class UTF8Deserializer(Serializer):
    use_unicode = ...  # type: Any
    def __init__(self, use_unicode: bool = ...) -> None: ...
    def loads(self, stream): ...
    def load_stream(self, stream): ...
