# -*- coding: utf-8 -*-
from distutils.core import setup

packages = \
['fistro']

package_data = \
{'': ['*']}

setup_kwargs = {
    'name': 'fistro',
    'version': '0.2.1',
    'description': 'A fixture generator based on type annotations.',
    'long_description': 'Fistro\n======\n\n.. image:: https://img.shields.io/pypi/v/fistro.svg\n    :target: https://pypi.org/project/fistro/\n\n.. image:: https://img.shields.io/pypi/pyversions/fistro.svg\n    :target: https://pypi.org/project/fistro/\n\n.. image:: https://img.shields.io/circleci/project/github/kingoodie/fistro.svg\n    :target: https://circleci.com/gh/kingoodie/fistro\n\n.. image:: https://codecov.io/gh/kingoodie/fistro/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/kingoodie/fistro\n\nA fixture generator based on type annotations.\n\nExamples\n--------\n\n>>> from dataclasses import dataclass\n>>> from datetime import datetime, date\n>>> from typing import List\n>>>\n>>> from fistro.fistro import generate\n>>>\n>>>\n>>> @dataclass\n>>> class Employee:\n>>>    id: int\n>>>    birthday: date\n>>>    last_access: datetime\n>>>    password: str\n>>>    number_plates: List[int]\n>>>    name: str = \'Carlos SÃ¡nchez\'\n>>>\n>>>\n>>> employee = generate(Employee)()\n>>> print(employee)\n\nIt will show something like this:\n\n>>> Employee(id=5809893100, birthday=datetime.date(559, 3, 6), last_access=datetime.datetime(1053, 8, 29, 19, 11, 14), password="iFZ>?)V0\'", number_plates=[85863115, 3528889142, 2818728907, 6043092538, 4985672707], name=\'Carlos SÃ¡nchez\')\n\nAnother useful functions are `generate_from_json` and `get_class_body_from_annotations`:\n\n>>> from json import loads\n>>>\n>>> from fistro.fistro import generate_from_json, get_class_body_from_annotations\n>>>\n>>> specific_str = """{\n>>>             "_id": "5ae09b3947467b00111e7bf6",\n>>>             "localExposure": 0,\n>>>             "answer": "mitigate",\n>>>             "idRisk": "5ae09b3947467b00111e7bf6",\n>>>             "version": 4,\n>>>             "country": "BR",\n>>>             "company": "0185",\n>>>             "currency": "BRL",\n>>>             "zone": "DIRT8",\n>>>             "internalRef": "RSP-BR-0185-DIRT8-105",\n>>>             "creationDate": "2017-12-13T23:00:00.000Z",\n>>>             "title": "TributÃ¡rio: ContribuiÃ§Ãµes PrevidenciÃ¡rias sobre Plano de Stock Options",\n>>>             "riskCategory": {\n>>>                 "es": "22. Contingencias tributarias",\n>>>                 "en": "22. Tax contingencies",\n>>>                 "pt": "22. ContingÃªncias Fiscais"\n>>>             },\n>>>             "evaluationType": "quantitative",\n>>>             "basicRef": "26376309-2cc2-4a0d-9c6a-373e0a7d9043",\n>>>             "localQUANTITATIVENetCASHFLOW": 0,\n>>>             "euroQUANTITATIVENetCASHFLOW": 0,\n>>>             "localQUANTITATIVEGrossCASHFLOW": 241000000,\n>>>             "euroQUANTITATIVEGrossCASHFLOW": 57324742,\n>>>             "probability": "veryPossible",\n>>>             "status": "open",\n>>>             "commissionApproval": false,\n>>>             "companyRegistry": true,\n>>>             "companyCode": "0185",\n>>>             "IDNotification": "0aa0370e-e6d6-405c-a619-a47da0602dee",\n>>>             "localQUANTITATIVEGrossOIBDA": 241000000,\n>>>             "localQUANTITATIVEGrossCAPEX": 0,\n>>>             "localQUANTITATIVENetOIBDA": 0,\n>>>             "localQUANTITATIVENetCAPEX": 0,\n>>>             "euroQUANTITATIVEGrossOIBDA": 57324742,\n>>>             "euroQUANTITATIVEGrossCAPEX": 0,\n>>>             "euroQUANTITATIVENetOIBDA": 0,\n>>>             "euroQUANTITATIVENetCAPEX": 0,\n>>>             "hierarchy": "principal",\n>>>             "hierarchySubsidiaries": [],\n>>>             "owner": "Vasco Gruber"\n>>>         }"""\n>>>\n>>> specific_json = loads(specific_str)\n>>>\n>>> the_class = generate_from_json(specific_json)\n>>> print(get_class_body_from_annotations(the_class.__annotations__))\n\nIt will print:\n\n>>> _id: str\n>>> localExposure: int\n>>> answer: str\n>>> idRisk: str\n>>> version: int\n>>> country: str\n>>> company: str\n>>> currency: str\n>>> zone: str\n>>> internalRef: str\n>>> creationDate: str\n>>> title: str\n>>> riskCategory: typing.Dict[str, str]\n>>> evaluationType: str\n>>> basicRef: str\n>>> localQUANTITATIVENetCASHFLOW: int\n>>> euroQUANTITATIVENetCASHFLOW: int\n>>> localQUANTITATIVEGrossCASHFLOW: int\n>>> euroQUANTITATIVEGrossCASHFLOW: int\n>>> probability: str\n>>> status: str\n>>> commissionApproval: bool\n>>> companyRegistry: bool\n>>> companyCode: str\n>>> IDNotification: str\n>>> localQUANTITATIVEGrossOIBDA: int\n>>> localQUANTITATIVEGrossCAPEX: int\n>>> localQUANTITATIVENetOIBDA: int\n>>> localQUANTITATIVENetCAPEX: int\n>>> euroQUANTITATIVEGrossOIBDA: int\n>>> euroQUANTITATIVEGrossCAPEX: int\n>>> euroQUANTITATIVENetOIBDA: int\n>>> euroQUANTITATIVENetCAPEX: int\n>>> hierarchy: str\n>>> hierarchySubsidiaries: typing.List[typing.Any]\n>>> owner: str\n\nInstallation\n------------\n\n>>> pip install fistro\n\n\nCredits\n--------\nIn memoriam of `Chiquito de la Calzada <https://es.wikipedia.org/wiki/Chiquito_de_la_Calzada>`_.',
    'author': 'Pablo Cabezas',
    'author_email': 'pabcabsal@gmail.com',
    'url': 'https://github.com/kingoodie/fistro',
    'packages': packages,
    'package_data': package_data,
    'python_requires': '>=3.7.0,<3.8.0',
}


setup(**setup_kwargs)
