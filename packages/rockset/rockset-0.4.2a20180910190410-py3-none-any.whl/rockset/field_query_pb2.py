# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: rockset/field_query.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from rockset import value_pb2 as rockset_dot_value__pb2
from rockset import regex_pb2 as rockset_dot_regex__pb2
from rockset import query_field_path_pb2 as rockset_dot_query__field__path__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='rockset/field_query.proto',
  package='rockset',
  syntax='proto3',
  serialized_pb=_b('\n\x19rockset/field_query.proto\x12\x07rockset\x1a\x13rockset/value.proto\x1a\x13rockset/regex.proto\x1a\x1erockset/query_field_path.proto\"\x87\x01\n\x08\x42inaryOp\x12$\n\x04\x63ode\x18\x01 \x01(\x0e\x32\x16.rockset.BinaryOp.Code\x12\x1d\n\x05other\x18\x02 \x01(\x0b\x32\x0e.rockset.Value\"6\n\x04\x43ode\x12\x06\n\x02\x45Q\x10\x00\x12\x06\n\x02NE\x10\x01\x12\x06\n\x02LT\x10\x02\x12\x06\n\x02LE\x10\x03\x12\x06\n\x02GT\x10\x04\x12\x06\n\x02GE\x10\x05\"~\n\nRangeBound\x12\r\n\x03low\x18\x01 \x01(\rH\x00\x12\x1f\n\x05value\x18\x02 \x01(\x0b\x32\x0e.rockset.ValueH\x00\x12\x0e\n\x04high\x18\x03 \x01(\rH\x00\x12!\n\x07highest\x18\x04 \x01(\x0b\x32\x0e.rockset.EmptyH\x00\x42\r\n\x0b\x62ound_union\"\x82\x01\n\nRangeQuery\x12\"\n\x05\x62\x65gin\x18\x01 \x01(\x0b\x32\x13.rockset.RangeBound\x12 \n\x03\x65nd\x18\x02 \x01(\x0b\x32\x13.rockset.RangeBound\x12\x17\n\x0f\x62\x65gin_inclusive\x18\x03 \x01(\x08\x12\x15\n\rend_inclusive\x18\x04 \x01(\x08\"\x85\x04\n\nFieldQuery\x12&\n\x05\x66ield\x18\x0b \x01(\x0b\x32\x17.rockset.QueryFieldPath\x12#\n\x06\x62inary\x18\x02 \x01(\x0b\x32\x11.rockset.BinaryOpH\x00\x12\x30\n\x05unary\x18\x03 \x01(\x0e\x32\x1f.rockset.FieldQuery.UnaryOpCodeH\x00\x12\x0e\n\x04term\x18\x04 \x01(\tH\x00\x12\x15\n\x0bterm_prefix\x18\x05 \x01(\tH\x00\x12$\n\nterm_regex\x18\x06 \x01(\x0b\x32\x0e.rockset.RegexH\x00\x12\x17\n\rstring_prefix\x18\x07 \x01(\tH\x00\x12&\n\x0cstring_regex\x18\x08 \x01(\x0b\x32\x0e.rockset.RegexH\x00\x12\x15\n\x0b\x63ustom_type\x18\t \x01(\rH\x00\"\xbd\x01\n\x0bUnaryOpCode\x12\x0e\n\nIS_DEFINED\x10\x00\x12\x0f\n\x0bIS_NOT_NULL\x10\x01\x12\x0b\n\x07IS_NULL\x10\x02\x12\n\n\x06IS_INT\x10\x03\x12\x0c\n\x08IS_FLOAT\x10\x04\x12\x0b\n\x07IS_BOOL\x10\x05\x12\r\n\tIS_STRING\x10\x06\x12\x0c\n\x08IS_BYTES\x10\x07\x12\r\n\tIS_OBJECT\x10\x08\x12\x0c\n\x08IS_ARRAY\x10\t\x12\r\n\tIS_CUSTOM\x10\n\x12\x10\n\x0cIS_FLOAT_NAN\x10\x0b\x42\x13\n\x11\x66ield_query_unionB\x14\n\x10io.rockset.protoP\x00\x62\x06proto3')
  ,
  dependencies=[rockset_dot_value__pb2.DESCRIPTOR,rockset_dot_regex__pb2.DESCRIPTOR,rockset_dot_query__field__path__pb2.DESCRIPTOR,])



_BINARYOP_CODE = _descriptor.EnumDescriptor(
  name='Code',
  full_name='rockset.BinaryOp.Code',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='EQ', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NE', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LT', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LE', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GT', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GE', index=5, number=5,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=194,
  serialized_end=248,
)
_sym_db.RegisterEnumDescriptor(_BINARYOP_CODE)

_FIELDQUERY_UNARYOPCODE = _descriptor.EnumDescriptor(
  name='UnaryOpCode',
  full_name='rockset.FieldQuery.UnaryOpCode',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='IS_DEFINED', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IS_NOT_NULL', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IS_NULL', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IS_INT', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IS_FLOAT', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IS_BOOL', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IS_STRING', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IS_BYTES', index=7, number=7,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IS_OBJECT', index=8, number=8,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IS_ARRAY', index=9, number=9,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IS_CUSTOM', index=10, number=10,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IS_FLOAT_NAN', index=11, number=11,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=819,
  serialized_end=1008,
)
_sym_db.RegisterEnumDescriptor(_FIELDQUERY_UNARYOPCODE)


_BINARYOP = _descriptor.Descriptor(
  name='BinaryOp',
  full_name='rockset.BinaryOp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='code', full_name='rockset.BinaryOp.code', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='other', full_name='rockset.BinaryOp.other', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _BINARYOP_CODE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=113,
  serialized_end=248,
)


_RANGEBOUND = _descriptor.Descriptor(
  name='RangeBound',
  full_name='rockset.RangeBound',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='low', full_name='rockset.RangeBound.low', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='rockset.RangeBound.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='high', full_name='rockset.RangeBound.high', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='highest', full_name='rockset.RangeBound.highest', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='bound_union', full_name='rockset.RangeBound.bound_union',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=250,
  serialized_end=376,
)


_RANGEQUERY = _descriptor.Descriptor(
  name='RangeQuery',
  full_name='rockset.RangeQuery',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='begin', full_name='rockset.RangeQuery.begin', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='end', full_name='rockset.RangeQuery.end', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='begin_inclusive', full_name='rockset.RangeQuery.begin_inclusive', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='end_inclusive', full_name='rockset.RangeQuery.end_inclusive', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=379,
  serialized_end=509,
)


_FIELDQUERY = _descriptor.Descriptor(
  name='FieldQuery',
  full_name='rockset.FieldQuery',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='field', full_name='rockset.FieldQuery.field', index=0,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='binary', full_name='rockset.FieldQuery.binary', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='unary', full_name='rockset.FieldQuery.unary', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='term', full_name='rockset.FieldQuery.term', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='term_prefix', full_name='rockset.FieldQuery.term_prefix', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='term_regex', full_name='rockset.FieldQuery.term_regex', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='string_prefix', full_name='rockset.FieldQuery.string_prefix', index=6,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='string_regex', full_name='rockset.FieldQuery.string_regex', index=7,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='custom_type', full_name='rockset.FieldQuery.custom_type', index=8,
      number=9, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _FIELDQUERY_UNARYOPCODE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='field_query_union', full_name='rockset.FieldQuery.field_query_union',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=512,
  serialized_end=1029,
)

_BINARYOP.fields_by_name['code'].enum_type = _BINARYOP_CODE
_BINARYOP.fields_by_name['other'].message_type = rockset_dot_value__pb2._VALUE
_BINARYOP_CODE.containing_type = _BINARYOP
_RANGEBOUND.fields_by_name['value'].message_type = rockset_dot_value__pb2._VALUE
_RANGEBOUND.fields_by_name['highest'].message_type = rockset_dot_value__pb2._EMPTY
_RANGEBOUND.oneofs_by_name['bound_union'].fields.append(
  _RANGEBOUND.fields_by_name['low'])
_RANGEBOUND.fields_by_name['low'].containing_oneof = _RANGEBOUND.oneofs_by_name['bound_union']
_RANGEBOUND.oneofs_by_name['bound_union'].fields.append(
  _RANGEBOUND.fields_by_name['value'])
_RANGEBOUND.fields_by_name['value'].containing_oneof = _RANGEBOUND.oneofs_by_name['bound_union']
_RANGEBOUND.oneofs_by_name['bound_union'].fields.append(
  _RANGEBOUND.fields_by_name['high'])
_RANGEBOUND.fields_by_name['high'].containing_oneof = _RANGEBOUND.oneofs_by_name['bound_union']
_RANGEBOUND.oneofs_by_name['bound_union'].fields.append(
  _RANGEBOUND.fields_by_name['highest'])
_RANGEBOUND.fields_by_name['highest'].containing_oneof = _RANGEBOUND.oneofs_by_name['bound_union']
_RANGEQUERY.fields_by_name['begin'].message_type = _RANGEBOUND
_RANGEQUERY.fields_by_name['end'].message_type = _RANGEBOUND
_FIELDQUERY.fields_by_name['field'].message_type = rockset_dot_query__field__path__pb2._QUERYFIELDPATH
_FIELDQUERY.fields_by_name['binary'].message_type = _BINARYOP
_FIELDQUERY.fields_by_name['unary'].enum_type = _FIELDQUERY_UNARYOPCODE
_FIELDQUERY.fields_by_name['term_regex'].message_type = rockset_dot_regex__pb2._REGEX
_FIELDQUERY.fields_by_name['string_regex'].message_type = rockset_dot_regex__pb2._REGEX
_FIELDQUERY_UNARYOPCODE.containing_type = _FIELDQUERY
_FIELDQUERY.oneofs_by_name['field_query_union'].fields.append(
  _FIELDQUERY.fields_by_name['binary'])
_FIELDQUERY.fields_by_name['binary'].containing_oneof = _FIELDQUERY.oneofs_by_name['field_query_union']
_FIELDQUERY.oneofs_by_name['field_query_union'].fields.append(
  _FIELDQUERY.fields_by_name['unary'])
_FIELDQUERY.fields_by_name['unary'].containing_oneof = _FIELDQUERY.oneofs_by_name['field_query_union']
_FIELDQUERY.oneofs_by_name['field_query_union'].fields.append(
  _FIELDQUERY.fields_by_name['term'])
_FIELDQUERY.fields_by_name['term'].containing_oneof = _FIELDQUERY.oneofs_by_name['field_query_union']
_FIELDQUERY.oneofs_by_name['field_query_union'].fields.append(
  _FIELDQUERY.fields_by_name['term_prefix'])
_FIELDQUERY.fields_by_name['term_prefix'].containing_oneof = _FIELDQUERY.oneofs_by_name['field_query_union']
_FIELDQUERY.oneofs_by_name['field_query_union'].fields.append(
  _FIELDQUERY.fields_by_name['term_regex'])
_FIELDQUERY.fields_by_name['term_regex'].containing_oneof = _FIELDQUERY.oneofs_by_name['field_query_union']
_FIELDQUERY.oneofs_by_name['field_query_union'].fields.append(
  _FIELDQUERY.fields_by_name['string_prefix'])
_FIELDQUERY.fields_by_name['string_prefix'].containing_oneof = _FIELDQUERY.oneofs_by_name['field_query_union']
_FIELDQUERY.oneofs_by_name['field_query_union'].fields.append(
  _FIELDQUERY.fields_by_name['string_regex'])
_FIELDQUERY.fields_by_name['string_regex'].containing_oneof = _FIELDQUERY.oneofs_by_name['field_query_union']
_FIELDQUERY.oneofs_by_name['field_query_union'].fields.append(
  _FIELDQUERY.fields_by_name['custom_type'])
_FIELDQUERY.fields_by_name['custom_type'].containing_oneof = _FIELDQUERY.oneofs_by_name['field_query_union']
DESCRIPTOR.message_types_by_name['BinaryOp'] = _BINARYOP
DESCRIPTOR.message_types_by_name['RangeBound'] = _RANGEBOUND
DESCRIPTOR.message_types_by_name['RangeQuery'] = _RANGEQUERY
DESCRIPTOR.message_types_by_name['FieldQuery'] = _FIELDQUERY
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

BinaryOp = _reflection.GeneratedProtocolMessageType('BinaryOp', (_message.Message,), dict(
  DESCRIPTOR = _BINARYOP,
  __module__ = 'rockset.field_query_pb2'
  # @@protoc_insertion_point(class_scope:rockset.BinaryOp)
  ))
_sym_db.RegisterMessage(BinaryOp)

RangeBound = _reflection.GeneratedProtocolMessageType('RangeBound', (_message.Message,), dict(
  DESCRIPTOR = _RANGEBOUND,
  __module__ = 'rockset.field_query_pb2'
  # @@protoc_insertion_point(class_scope:rockset.RangeBound)
  ))
_sym_db.RegisterMessage(RangeBound)

RangeQuery = _reflection.GeneratedProtocolMessageType('RangeQuery', (_message.Message,), dict(
  DESCRIPTOR = _RANGEQUERY,
  __module__ = 'rockset.field_query_pb2'
  # @@protoc_insertion_point(class_scope:rockset.RangeQuery)
  ))
_sym_db.RegisterMessage(RangeQuery)

FieldQuery = _reflection.GeneratedProtocolMessageType('FieldQuery', (_message.Message,), dict(
  DESCRIPTOR = _FIELDQUERY,
  __module__ = 'rockset.field_query_pb2'
  # @@protoc_insertion_point(class_scope:rockset.FieldQuery)
  ))
_sym_db.RegisterMessage(FieldQuery)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\020io.rockset.protoP\000'))
# @@protoc_insertion_point(module_scope)
