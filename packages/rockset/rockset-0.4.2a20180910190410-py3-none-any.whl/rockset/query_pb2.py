# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: rockset/query.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from rockset import field_query_pb2 as rockset_dot_field__query__pb2
from rockset import query_field_path_pb2 as rockset_dot_query__field__path__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='rockset/query.proto',
  package='rockset',
  syntax='proto3',
  serialized_pb=_b('\n\x13rockset/query.proto\x12\x07rockset\x1a\x19rockset/field_query.proto\x1a\x1erockset/query_field_path.proto\",\n\x08\x41ndQuery\x12 \n\x08\x63hildren\x18\x01 \x03(\x0b\x32\x0e.rockset.Query\"+\n\x07OrQuery\x12 \n\x08\x63hildren\x18\x01 \x03(\x0b\x32\x0e.rockset.Query\"p\n\nApplyQuery\x12)\n\x08to_field\x18\x03 \x01(\x0b\x32\x17.rockset.QueryFieldPath\x12\x1d\n\x05\x63hild\x18\x02 \x01(\x0b\x32\x0e.rockset.Query\x12\x18\n\x10\x63hild_collection\x18\x04 \x01(\t\"\xad\x01\n\x0bLookupQuery\x12*\n\tnew_field\x18\x01 \x01(\x0b\x32\x17.rockset.QueryFieldPath\x12$\n\x0ctarget_query\x18\x02 \x01(\x0b\x32\x0e.rockset.Query\x12-\n\x0clookup_field\x18\x03 \x01(\x0b\x32\x17.rockset.QueryFieldPath\x12\x1d\n\x05\x63hild\x18\x04 \x01(\x0b\x32\x0e.rockset.Query\"S\n\x0f\x44ifferenceQuery\x12\x1c\n\x04\x62\x61se\x18\x01 \x01(\x0b\x32\x0e.rockset.Query\x12\"\n\ndiminisher\x18\x02 \x01(\x0b\x32\x0e.rockset.Query\"\n\n\x08\x41llQuery\")\n\x08NotQuery\x12\x1d\n\x05\x63hild\x18\x01 \x01(\x0b\x32\x0e.rockset.Query\"y\n\x0e\x41ggregateField\x12\r\n\x05\x61lias\x18\x01 \x01(\t\x12\x30\n\x08\x66unction\x18\x02 \x01(\x0e\x32\x1e.rockset.AggregateFunctionEnum\x12&\n\x05\x66ield\x18\x04 \x01(\x0b\x32\x17.rockset.QueryFieldPath\"\x95\x01\n\x0e\x41ggregateQuery\x12\x31\n\x10\x64imension_fields\x18\x04 \x03(\x0b\x32\x17.rockset.QueryFieldPath\x12\x31\n\x10\x61ggregate_fields\x18\x02 \x03(\x0b\x32\x17.rockset.AggregateField\x12\x1d\n\x05\x63hild\x18\x03 \x01(\x0b\x32\x0e.rockset.Query\"\x87\x01\n\tSortQuery\x12$\n\x04mode\x18\x01 \x01(\x0e\x32\x16.rockset.SortQueryMode\x12\'\n\x06\x66ields\x18\x02 \x03(\x0b\x32\x17.rockset.QueryFieldPath\x12\x1d\n\x05\x63hild\x18\x03 \x01(\x0b\x32\x0e.rockset.Query\x12\x0c\n\x04scan\x18\x04 \x01(\x08\"Q\n\x0bSelectField\x12%\n\x04name\x18\x01 \x01(\x0b\x32\x17.rockset.QueryFieldPath\x12\x0c\n\x04type\x18\x02 \x01(\r\x12\r\n\x05\x61lias\x18\x03 \x01(\t\"f\n\x0bSelectQuery\x12\x1d\n\x05\x63hild\x18\x04 \x01(\x0b\x32\x0e.rockset.Query\x12$\n\x06\x66ields\x18\x02 \x03(\x0b\x32\x14.rockset.SelectField\x12\x12\n\nalways_add\x18\x05 \x01(\x08\"N\n\nLimitQuery\x12\x13\n\x0bmax_results\x18\x01 \x01(\x05\x12\x0c\n\x04skip\x18\x02 \x01(\x05\x12\x1d\n\x05\x63hild\x18\x03 \x01(\x0b\x32\x0e.rockset.Query\";\n\x0bSampleQuery\x12\r\n\x05ratio\x18\x01 \x01(\x01\x12\x1d\n\x05\x63hild\x18\x02 \x01(\x0b\x32\x0e.rockset.Query\"*\n\x0b\x42oostedTerm\x12\x0c\n\x04term\x18\x01 \x01(\t\x12\r\n\x05\x62oost\x18\x02 \x01(\x01\"?\n\x10\x41lternativeTerms\x12+\n\rboosted_terms\x18\x01 \x03(\x0b\x32\x14.rockset.BoostedTerm\"n\n\x0eProximityQuery\x12&\n\x05\x66ield\x18\x01 \x01(\x0b\x32\x17.rockset.QueryFieldPath\x12\x34\n\x11\x61lternative_terms\x18\x02 \x03(\x0b\x32\x19.rockset.AlternativeTerms\"V\n\x0bSearchQuery\x12\'\n\x0fscored_children\x18\x01 \x03(\x0b\x32\x0e.rockset.Query\x12\x1e\n\x06\x66ilter\x18\x02 \x01(\x0b\x32\x0e.rockset.Query\"T\n\x0bNestedQuery\x12&\n\x05\x66ield\x18\x01 \x01(\x0b\x32\x17.rockset.QueryFieldPath\x12\x1d\n\x05\x63hild\x18\x02 \x01(\x0b\x32\x0e.rockset.Query\":\n\nBoostQuery\x12\r\n\x05\x62oost\x18\x01 \x01(\x01\x12\x1d\n\x05\x63hild\x18\x02 \x01(\x0b\x32\x0e.rockset.Query\"\x18\n\tInfoQuery\x12\x0b\n\x03key\x18\x01 \x01(\t\"X\n\nScoreQuery\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0c\n\x04\x63ode\x18\x02 \x01(\t\x12\x0f\n\x07\x63ontext\x18\x03 \x01(\t\x12\x1d\n\x05\x63hild\x18\x04 \x01(\x0b\x32\x0e.rockset.Query\"L\n\x0b\x46ilterQuery\x12\x1e\n\x06\x66ilter\x18\x01 \x01(\x0b\x32\x0e.rockset.Query\x12\x1d\n\x05\x63hild\x18\x02 \x01(\x0b\x32\x0e.rockset.Query\"\x90\x01\n\x0bUnnestQuery\x12-\n\x0csource_field\x18\x01 \x01(\x0b\x32\x17.rockset.QueryFieldPath\x12\x33\n\x12target_field_alias\x18\x02 \x01(\x0b\x32\x17.rockset.QueryFieldPath\x12\x1d\n\x05\x63hild\x18\x03 \x01(\x0b\x32\x0e.rockset.Query\"L\n\x12LiftAggregateQuery\x12\x17\n\x0f\x63omponent_count\x18\x01 \x01(\r\x12\x1d\n\x05\x63hild\x18\x02 \x01(\x0b\x32\x0e.rockset.Query\"R\n\tNestQuery\x12&\n\x05\x66ield\x18\x01 \x01(\x0b\x32\x17.rockset.QueryFieldPath\x12\x1d\n\x05\x63hild\x18\x02 \x01(\x0b\x32\x0e.rockset.Query\"\x11\n\x0f\x46ieldTypesQuery\"\xe2\x08\n\x05Query\x12&\n\tand_query\x18\x02 \x01(\x0b\x32\x11.rockset.AndQueryH\x00\x12$\n\x08or_query\x18\x03 \x01(\x0b\x32\x10.rockset.OrQueryH\x00\x12*\n\x0b\x61pply_query\x18\x04 \x01(\x0b\x32\x13.rockset.ApplyQueryH\x00\x12\x34\n\x10\x64ifference_query\x18\x05 \x01(\x0b\x32\x18.rockset.DifferenceQueryH\x00\x12&\n\tall_query\x18\x06 \x01(\x0b\x32\x11.rockset.AllQueryH\x00\x12*\n\x0b\x66ield_query\x18\t \x01(\x0b\x32\x13.rockset.FieldQueryH\x00\x12&\n\tnot_query\x18\n \x01(\x0b\x32\x11.rockset.NotQueryH\x00\x12\x32\n\x0f\x61ggregate_query\x18\x0b \x01(\x0b\x32\x17.rockset.AggregateQueryH\x00\x12(\n\nsort_query\x18\x0c \x01(\x0b\x32\x12.rockset.SortQueryH\x00\x12,\n\x0cselect_query\x18\r \x01(\x0b\x32\x14.rockset.SelectQueryH\x00\x12*\n\x0blimit_query\x18\x0e \x01(\x0b\x32\x13.rockset.LimitQueryH\x00\x12,\n\x0clookup_query\x18\x0f \x01(\x0b\x32\x14.rockset.LookupQueryH\x00\x12,\n\x0csample_query\x18\x10 \x01(\x0b\x32\x14.rockset.SampleQueryH\x00\x12,\n\x0csearch_query\x18\x11 \x01(\x0b\x32\x14.rockset.SearchQueryH\x00\x12,\n\x0cnested_query\x18\x12 \x01(\x0b\x32\x14.rockset.NestedQueryH\x00\x12\x32\n\x0fproximity_query\x18\x13 \x01(\x0b\x32\x17.rockset.ProximityQueryH\x00\x12*\n\x0b\x62oost_query\x18\x14 \x01(\x0b\x32\x13.rockset.BoostQueryH\x00\x12(\n\ninfo_query\x18\x15 \x01(\x0b\x32\x12.rockset.InfoQueryH\x00\x12*\n\x0bscore_query\x18\x16 \x01(\x0b\x32\x13.rockset.ScoreQueryH\x00\x12,\n\x0c\x66ilter_query\x18\x17 \x01(\x0b\x32\x14.rockset.FilterQueryH\x00\x12,\n\x0cunnest_query\x18\x18 \x01(\x0b\x32\x14.rockset.UnnestQueryH\x00\x12\x35\n\x11\x66ield_types_query\x18\x19 \x01(\x0b\x32\x18.rockset.FieldTypesQueryH\x00\x12;\n\x14lift_aggregate_query\x18\x1a \x01(\x0b\x32\x1b.rockset.LiftAggregateQueryH\x00\x12(\n\nnest_query\x18\x1b \x01(\x0b\x32\x12.rockset.NestQueryH\x00\x42\r\n\x0bquery_union*\x84\x01\n\x15\x41ggregateFunctionEnum\x12\x07\n\x03MAX\x10\x00\x12\x07\n\x03MIN\x10\x01\x12\x07\n\x03\x41VG\x10\x02\x12\t\n\x05\x43OUNT\x10\x03\x12\x11\n\rCOUNTDISTINCT\x10\x04\x12\x07\n\x03SUM\x10\x05\x12\x1c\n\x18\x41PPROXIMATECOUNTDISTINCT\x10\x06\x12\x0b\n\x07\x43OLLECT\x10\x07*\"\n\rSortQueryMode\x12\x07\n\x03\x41SC\x10\x00\x12\x08\n\x04\x44\x45SC\x10\x01\x42\x14\n\x10io.rockset.protoP\x00\x62\x06proto3')
  ,
  dependencies=[rockset_dot_field__query__pb2.DESCRIPTOR,rockset_dot_query__field__path__pb2.DESCRIPTOR,])

_AGGREGATEFUNCTIONENUM = _descriptor.EnumDescriptor(
  name='AggregateFunctionEnum',
  full_name='rockset.AggregateFunctionEnum',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='MAX', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MIN', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AVG', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='COUNT', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='COUNTDISTINCT', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SUM', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='APPROXIMATECOUNTDISTINCT', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='COLLECT', index=7, number=7,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=3456,
  serialized_end=3588,
)
_sym_db.RegisterEnumDescriptor(_AGGREGATEFUNCTIONENUM)

AggregateFunctionEnum = enum_type_wrapper.EnumTypeWrapper(_AGGREGATEFUNCTIONENUM)
_SORTQUERYMODE = _descriptor.EnumDescriptor(
  name='SortQueryMode',
  full_name='rockset.SortQueryMode',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ASC', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DESC', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=3590,
  serialized_end=3624,
)
_sym_db.RegisterEnumDescriptor(_SORTQUERYMODE)

SortQueryMode = enum_type_wrapper.EnumTypeWrapper(_SORTQUERYMODE)
MAX = 0
MIN = 1
AVG = 2
COUNT = 3
COUNTDISTINCT = 4
SUM = 5
APPROXIMATECOUNTDISTINCT = 6
COLLECT = 7
ASC = 0
DESC = 1



_ANDQUERY = _descriptor.Descriptor(
  name='AndQuery',
  full_name='rockset.AndQuery',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='children', full_name='rockset.AndQuery.children', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=91,
  serialized_end=135,
)


_ORQUERY = _descriptor.Descriptor(
  name='OrQuery',
  full_name='rockset.OrQuery',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='children', full_name='rockset.OrQuery.children', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=137,
  serialized_end=180,
)


_APPLYQUERY = _descriptor.Descriptor(
  name='ApplyQuery',
  full_name='rockset.ApplyQuery',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='to_field', full_name='rockset.ApplyQuery.to_field', index=0,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='child', full_name='rockset.ApplyQuery.child', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='child_collection', full_name='rockset.ApplyQuery.child_collection', index=2,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=182,
  serialized_end=294,
)


_LOOKUPQUERY = _descriptor.Descriptor(
  name='LookupQuery',
  full_name='rockset.LookupQuery',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='new_field', full_name='rockset.LookupQuery.new_field', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='target_query', full_name='rockset.LookupQuery.target_query', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='lookup_field', full_name='rockset.LookupQuery.lookup_field', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='child', full_name='rockset.LookupQuery.child', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=297,
  serialized_end=470,
)


_DIFFERENCEQUERY = _descriptor.Descriptor(
  name='DifferenceQuery',
  full_name='rockset.DifferenceQuery',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='base', full_name='rockset.DifferenceQuery.base', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='diminisher', full_name='rockset.DifferenceQuery.diminisher', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=472,
  serialized_end=555,
)


_ALLQUERY = _descriptor.Descriptor(
  name='AllQuery',
  full_name='rockset.AllQuery',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=557,
  serialized_end=567,
)


_NOTQUERY = _descriptor.Descriptor(
  name='NotQuery',
  full_name='rockset.NotQuery',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='child', full_name='rockset.NotQuery.child', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=569,
  serialized_end=610,
)


_AGGREGATEFIELD = _descriptor.Descriptor(
  name='AggregateField',
  full_name='rockset.AggregateField',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='alias', full_name='rockset.AggregateField.alias', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='function', full_name='rockset.AggregateField.function', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='field', full_name='rockset.AggregateField.field', index=2,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=612,
  serialized_end=733,
)


_AGGREGATEQUERY = _descriptor.Descriptor(
  name='AggregateQuery',
  full_name='rockset.AggregateQuery',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='dimension_fields', full_name='rockset.AggregateQuery.dimension_fields', index=0,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='aggregate_fields', full_name='rockset.AggregateQuery.aggregate_fields', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='child', full_name='rockset.AggregateQuery.child', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=736,
  serialized_end=885,
)


_SORTQUERY = _descriptor.Descriptor(
  name='SortQuery',
  full_name='rockset.SortQuery',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='mode', full_name='rockset.SortQuery.mode', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='fields', full_name='rockset.SortQuery.fields', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='child', full_name='rockset.SortQuery.child', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='scan', full_name='rockset.SortQuery.scan', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=888,
  serialized_end=1023,
)


_SELECTFIELD = _descriptor.Descriptor(
  name='SelectField',
  full_name='rockset.SelectField',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='rockset.SelectField.name', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='type', full_name='rockset.SelectField.type', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='alias', full_name='rockset.SelectField.alias', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1025,
  serialized_end=1106,
)


_SELECTQUERY = _descriptor.Descriptor(
  name='SelectQuery',
  full_name='rockset.SelectQuery',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='child', full_name='rockset.SelectQuery.child', index=0,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='fields', full_name='rockset.SelectQuery.fields', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='always_add', full_name='rockset.SelectQuery.always_add', index=2,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1108,
  serialized_end=1210,
)


_LIMITQUERY = _descriptor.Descriptor(
  name='LimitQuery',
  full_name='rockset.LimitQuery',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='max_results', full_name='rockset.LimitQuery.max_results', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='skip', full_name='rockset.LimitQuery.skip', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='child', full_name='rockset.LimitQuery.child', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1212,
  serialized_end=1290,
)


_SAMPLEQUERY = _descriptor.Descriptor(
  name='SampleQuery',
  full_name='rockset.SampleQuery',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ratio', full_name='rockset.SampleQuery.ratio', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='child', full_name='rockset.SampleQuery.child', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1292,
  serialized_end=1351,
)


_BOOSTEDTERM = _descriptor.Descriptor(
  name='BoostedTerm',
  full_name='rockset.BoostedTerm',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='term', full_name='rockset.BoostedTerm.term', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='boost', full_name='rockset.BoostedTerm.boost', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1353,
  serialized_end=1395,
)


_ALTERNATIVETERMS = _descriptor.Descriptor(
  name='AlternativeTerms',
  full_name='rockset.AlternativeTerms',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='boosted_terms', full_name='rockset.AlternativeTerms.boosted_terms', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1397,
  serialized_end=1460,
)


_PROXIMITYQUERY = _descriptor.Descriptor(
  name='ProximityQuery',
  full_name='rockset.ProximityQuery',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='field', full_name='rockset.ProximityQuery.field', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='alternative_terms', full_name='rockset.ProximityQuery.alternative_terms', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1462,
  serialized_end=1572,
)


_SEARCHQUERY = _descriptor.Descriptor(
  name='SearchQuery',
  full_name='rockset.SearchQuery',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='scored_children', full_name='rockset.SearchQuery.scored_children', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='filter', full_name='rockset.SearchQuery.filter', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1574,
  serialized_end=1660,
)


_NESTEDQUERY = _descriptor.Descriptor(
  name='NestedQuery',
  full_name='rockset.NestedQuery',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='field', full_name='rockset.NestedQuery.field', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='child', full_name='rockset.NestedQuery.child', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1662,
  serialized_end=1746,
)


_BOOSTQUERY = _descriptor.Descriptor(
  name='BoostQuery',
  full_name='rockset.BoostQuery',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='boost', full_name='rockset.BoostQuery.boost', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='child', full_name='rockset.BoostQuery.child', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1748,
  serialized_end=1806,
)


_INFOQUERY = _descriptor.Descriptor(
  name='InfoQuery',
  full_name='rockset.InfoQuery',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='rockset.InfoQuery.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1808,
  serialized_end=1832,
)


_SCOREQUERY = _descriptor.Descriptor(
  name='ScoreQuery',
  full_name='rockset.ScoreQuery',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='rockset.ScoreQuery.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='code', full_name='rockset.ScoreQuery.code', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='context', full_name='rockset.ScoreQuery.context', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='child', full_name='rockset.ScoreQuery.child', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1834,
  serialized_end=1922,
)


_FILTERQUERY = _descriptor.Descriptor(
  name='FilterQuery',
  full_name='rockset.FilterQuery',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='filter', full_name='rockset.FilterQuery.filter', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='child', full_name='rockset.FilterQuery.child', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1924,
  serialized_end=2000,
)


_UNNESTQUERY = _descriptor.Descriptor(
  name='UnnestQuery',
  full_name='rockset.UnnestQuery',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='source_field', full_name='rockset.UnnestQuery.source_field', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='target_field_alias', full_name='rockset.UnnestQuery.target_field_alias', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='child', full_name='rockset.UnnestQuery.child', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2003,
  serialized_end=2147,
)


_LIFTAGGREGATEQUERY = _descriptor.Descriptor(
  name='LiftAggregateQuery',
  full_name='rockset.LiftAggregateQuery',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='component_count', full_name='rockset.LiftAggregateQuery.component_count', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='child', full_name='rockset.LiftAggregateQuery.child', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2149,
  serialized_end=2225,
)


_NESTQUERY = _descriptor.Descriptor(
  name='NestQuery',
  full_name='rockset.NestQuery',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='field', full_name='rockset.NestQuery.field', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='child', full_name='rockset.NestQuery.child', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2227,
  serialized_end=2309,
)


_FIELDTYPESQUERY = _descriptor.Descriptor(
  name='FieldTypesQuery',
  full_name='rockset.FieldTypesQuery',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2311,
  serialized_end=2328,
)


_QUERY = _descriptor.Descriptor(
  name='Query',
  full_name='rockset.Query',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='and_query', full_name='rockset.Query.and_query', index=0,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='or_query', full_name='rockset.Query.or_query', index=1,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='apply_query', full_name='rockset.Query.apply_query', index=2,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='difference_query', full_name='rockset.Query.difference_query', index=3,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='all_query', full_name='rockset.Query.all_query', index=4,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='field_query', full_name='rockset.Query.field_query', index=5,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='not_query', full_name='rockset.Query.not_query', index=6,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='aggregate_query', full_name='rockset.Query.aggregate_query', index=7,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sort_query', full_name='rockset.Query.sort_query', index=8,
      number=12, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='select_query', full_name='rockset.Query.select_query', index=9,
      number=13, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='limit_query', full_name='rockset.Query.limit_query', index=10,
      number=14, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='lookup_query', full_name='rockset.Query.lookup_query', index=11,
      number=15, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sample_query', full_name='rockset.Query.sample_query', index=12,
      number=16, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='search_query', full_name='rockset.Query.search_query', index=13,
      number=17, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='nested_query', full_name='rockset.Query.nested_query', index=14,
      number=18, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='proximity_query', full_name='rockset.Query.proximity_query', index=15,
      number=19, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='boost_query', full_name='rockset.Query.boost_query', index=16,
      number=20, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='info_query', full_name='rockset.Query.info_query', index=17,
      number=21, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='score_query', full_name='rockset.Query.score_query', index=18,
      number=22, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='filter_query', full_name='rockset.Query.filter_query', index=19,
      number=23, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='unnest_query', full_name='rockset.Query.unnest_query', index=20,
      number=24, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='field_types_query', full_name='rockset.Query.field_types_query', index=21,
      number=25, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='lift_aggregate_query', full_name='rockset.Query.lift_aggregate_query', index=22,
      number=26, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='nest_query', full_name='rockset.Query.nest_query', index=23,
      number=27, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='query_union', full_name='rockset.Query.query_union',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=2331,
  serialized_end=3453,
)

_ANDQUERY.fields_by_name['children'].message_type = _QUERY
_ORQUERY.fields_by_name['children'].message_type = _QUERY
_APPLYQUERY.fields_by_name['to_field'].message_type = rockset_dot_query__field__path__pb2._QUERYFIELDPATH
_APPLYQUERY.fields_by_name['child'].message_type = _QUERY
_LOOKUPQUERY.fields_by_name['new_field'].message_type = rockset_dot_query__field__path__pb2._QUERYFIELDPATH
_LOOKUPQUERY.fields_by_name['target_query'].message_type = _QUERY
_LOOKUPQUERY.fields_by_name['lookup_field'].message_type = rockset_dot_query__field__path__pb2._QUERYFIELDPATH
_LOOKUPQUERY.fields_by_name['child'].message_type = _QUERY
_DIFFERENCEQUERY.fields_by_name['base'].message_type = _QUERY
_DIFFERENCEQUERY.fields_by_name['diminisher'].message_type = _QUERY
_NOTQUERY.fields_by_name['child'].message_type = _QUERY
_AGGREGATEFIELD.fields_by_name['function'].enum_type = _AGGREGATEFUNCTIONENUM
_AGGREGATEFIELD.fields_by_name['field'].message_type = rockset_dot_query__field__path__pb2._QUERYFIELDPATH
_AGGREGATEQUERY.fields_by_name['dimension_fields'].message_type = rockset_dot_query__field__path__pb2._QUERYFIELDPATH
_AGGREGATEQUERY.fields_by_name['aggregate_fields'].message_type = _AGGREGATEFIELD
_AGGREGATEQUERY.fields_by_name['child'].message_type = _QUERY
_SORTQUERY.fields_by_name['mode'].enum_type = _SORTQUERYMODE
_SORTQUERY.fields_by_name['fields'].message_type = rockset_dot_query__field__path__pb2._QUERYFIELDPATH
_SORTQUERY.fields_by_name['child'].message_type = _QUERY
_SELECTFIELD.fields_by_name['name'].message_type = rockset_dot_query__field__path__pb2._QUERYFIELDPATH
_SELECTQUERY.fields_by_name['child'].message_type = _QUERY
_SELECTQUERY.fields_by_name['fields'].message_type = _SELECTFIELD
_LIMITQUERY.fields_by_name['child'].message_type = _QUERY
_SAMPLEQUERY.fields_by_name['child'].message_type = _QUERY
_ALTERNATIVETERMS.fields_by_name['boosted_terms'].message_type = _BOOSTEDTERM
_PROXIMITYQUERY.fields_by_name['field'].message_type = rockset_dot_query__field__path__pb2._QUERYFIELDPATH
_PROXIMITYQUERY.fields_by_name['alternative_terms'].message_type = _ALTERNATIVETERMS
_SEARCHQUERY.fields_by_name['scored_children'].message_type = _QUERY
_SEARCHQUERY.fields_by_name['filter'].message_type = _QUERY
_NESTEDQUERY.fields_by_name['field'].message_type = rockset_dot_query__field__path__pb2._QUERYFIELDPATH
_NESTEDQUERY.fields_by_name['child'].message_type = _QUERY
_BOOSTQUERY.fields_by_name['child'].message_type = _QUERY
_SCOREQUERY.fields_by_name['child'].message_type = _QUERY
_FILTERQUERY.fields_by_name['filter'].message_type = _QUERY
_FILTERQUERY.fields_by_name['child'].message_type = _QUERY
_UNNESTQUERY.fields_by_name['source_field'].message_type = rockset_dot_query__field__path__pb2._QUERYFIELDPATH
_UNNESTQUERY.fields_by_name['target_field_alias'].message_type = rockset_dot_query__field__path__pb2._QUERYFIELDPATH
_UNNESTQUERY.fields_by_name['child'].message_type = _QUERY
_LIFTAGGREGATEQUERY.fields_by_name['child'].message_type = _QUERY
_NESTQUERY.fields_by_name['field'].message_type = rockset_dot_query__field__path__pb2._QUERYFIELDPATH
_NESTQUERY.fields_by_name['child'].message_type = _QUERY
_QUERY.fields_by_name['and_query'].message_type = _ANDQUERY
_QUERY.fields_by_name['or_query'].message_type = _ORQUERY
_QUERY.fields_by_name['apply_query'].message_type = _APPLYQUERY
_QUERY.fields_by_name['difference_query'].message_type = _DIFFERENCEQUERY
_QUERY.fields_by_name['all_query'].message_type = _ALLQUERY
_QUERY.fields_by_name['field_query'].message_type = rockset_dot_field__query__pb2._FIELDQUERY
_QUERY.fields_by_name['not_query'].message_type = _NOTQUERY
_QUERY.fields_by_name['aggregate_query'].message_type = _AGGREGATEQUERY
_QUERY.fields_by_name['sort_query'].message_type = _SORTQUERY
_QUERY.fields_by_name['select_query'].message_type = _SELECTQUERY
_QUERY.fields_by_name['limit_query'].message_type = _LIMITQUERY
_QUERY.fields_by_name['lookup_query'].message_type = _LOOKUPQUERY
_QUERY.fields_by_name['sample_query'].message_type = _SAMPLEQUERY
_QUERY.fields_by_name['search_query'].message_type = _SEARCHQUERY
_QUERY.fields_by_name['nested_query'].message_type = _NESTEDQUERY
_QUERY.fields_by_name['proximity_query'].message_type = _PROXIMITYQUERY
_QUERY.fields_by_name['boost_query'].message_type = _BOOSTQUERY
_QUERY.fields_by_name['info_query'].message_type = _INFOQUERY
_QUERY.fields_by_name['score_query'].message_type = _SCOREQUERY
_QUERY.fields_by_name['filter_query'].message_type = _FILTERQUERY
_QUERY.fields_by_name['unnest_query'].message_type = _UNNESTQUERY
_QUERY.fields_by_name['field_types_query'].message_type = _FIELDTYPESQUERY
_QUERY.fields_by_name['lift_aggregate_query'].message_type = _LIFTAGGREGATEQUERY
_QUERY.fields_by_name['nest_query'].message_type = _NESTQUERY
_QUERY.oneofs_by_name['query_union'].fields.append(
  _QUERY.fields_by_name['and_query'])
_QUERY.fields_by_name['and_query'].containing_oneof = _QUERY.oneofs_by_name['query_union']
_QUERY.oneofs_by_name['query_union'].fields.append(
  _QUERY.fields_by_name['or_query'])
_QUERY.fields_by_name['or_query'].containing_oneof = _QUERY.oneofs_by_name['query_union']
_QUERY.oneofs_by_name['query_union'].fields.append(
  _QUERY.fields_by_name['apply_query'])
_QUERY.fields_by_name['apply_query'].containing_oneof = _QUERY.oneofs_by_name['query_union']
_QUERY.oneofs_by_name['query_union'].fields.append(
  _QUERY.fields_by_name['difference_query'])
_QUERY.fields_by_name['difference_query'].containing_oneof = _QUERY.oneofs_by_name['query_union']
_QUERY.oneofs_by_name['query_union'].fields.append(
  _QUERY.fields_by_name['all_query'])
_QUERY.fields_by_name['all_query'].containing_oneof = _QUERY.oneofs_by_name['query_union']
_QUERY.oneofs_by_name['query_union'].fields.append(
  _QUERY.fields_by_name['field_query'])
_QUERY.fields_by_name['field_query'].containing_oneof = _QUERY.oneofs_by_name['query_union']
_QUERY.oneofs_by_name['query_union'].fields.append(
  _QUERY.fields_by_name['not_query'])
_QUERY.fields_by_name['not_query'].containing_oneof = _QUERY.oneofs_by_name['query_union']
_QUERY.oneofs_by_name['query_union'].fields.append(
  _QUERY.fields_by_name['aggregate_query'])
_QUERY.fields_by_name['aggregate_query'].containing_oneof = _QUERY.oneofs_by_name['query_union']
_QUERY.oneofs_by_name['query_union'].fields.append(
  _QUERY.fields_by_name['sort_query'])
_QUERY.fields_by_name['sort_query'].containing_oneof = _QUERY.oneofs_by_name['query_union']
_QUERY.oneofs_by_name['query_union'].fields.append(
  _QUERY.fields_by_name['select_query'])
_QUERY.fields_by_name['select_query'].containing_oneof = _QUERY.oneofs_by_name['query_union']
_QUERY.oneofs_by_name['query_union'].fields.append(
  _QUERY.fields_by_name['limit_query'])
_QUERY.fields_by_name['limit_query'].containing_oneof = _QUERY.oneofs_by_name['query_union']
_QUERY.oneofs_by_name['query_union'].fields.append(
  _QUERY.fields_by_name['lookup_query'])
_QUERY.fields_by_name['lookup_query'].containing_oneof = _QUERY.oneofs_by_name['query_union']
_QUERY.oneofs_by_name['query_union'].fields.append(
  _QUERY.fields_by_name['sample_query'])
_QUERY.fields_by_name['sample_query'].containing_oneof = _QUERY.oneofs_by_name['query_union']
_QUERY.oneofs_by_name['query_union'].fields.append(
  _QUERY.fields_by_name['search_query'])
_QUERY.fields_by_name['search_query'].containing_oneof = _QUERY.oneofs_by_name['query_union']
_QUERY.oneofs_by_name['query_union'].fields.append(
  _QUERY.fields_by_name['nested_query'])
_QUERY.fields_by_name['nested_query'].containing_oneof = _QUERY.oneofs_by_name['query_union']
_QUERY.oneofs_by_name['query_union'].fields.append(
  _QUERY.fields_by_name['proximity_query'])
_QUERY.fields_by_name['proximity_query'].containing_oneof = _QUERY.oneofs_by_name['query_union']
_QUERY.oneofs_by_name['query_union'].fields.append(
  _QUERY.fields_by_name['boost_query'])
_QUERY.fields_by_name['boost_query'].containing_oneof = _QUERY.oneofs_by_name['query_union']
_QUERY.oneofs_by_name['query_union'].fields.append(
  _QUERY.fields_by_name['info_query'])
_QUERY.fields_by_name['info_query'].containing_oneof = _QUERY.oneofs_by_name['query_union']
_QUERY.oneofs_by_name['query_union'].fields.append(
  _QUERY.fields_by_name['score_query'])
_QUERY.fields_by_name['score_query'].containing_oneof = _QUERY.oneofs_by_name['query_union']
_QUERY.oneofs_by_name['query_union'].fields.append(
  _QUERY.fields_by_name['filter_query'])
_QUERY.fields_by_name['filter_query'].containing_oneof = _QUERY.oneofs_by_name['query_union']
_QUERY.oneofs_by_name['query_union'].fields.append(
  _QUERY.fields_by_name['unnest_query'])
_QUERY.fields_by_name['unnest_query'].containing_oneof = _QUERY.oneofs_by_name['query_union']
_QUERY.oneofs_by_name['query_union'].fields.append(
  _QUERY.fields_by_name['field_types_query'])
_QUERY.fields_by_name['field_types_query'].containing_oneof = _QUERY.oneofs_by_name['query_union']
_QUERY.oneofs_by_name['query_union'].fields.append(
  _QUERY.fields_by_name['lift_aggregate_query'])
_QUERY.fields_by_name['lift_aggregate_query'].containing_oneof = _QUERY.oneofs_by_name['query_union']
_QUERY.oneofs_by_name['query_union'].fields.append(
  _QUERY.fields_by_name['nest_query'])
_QUERY.fields_by_name['nest_query'].containing_oneof = _QUERY.oneofs_by_name['query_union']
DESCRIPTOR.message_types_by_name['AndQuery'] = _ANDQUERY
DESCRIPTOR.message_types_by_name['OrQuery'] = _ORQUERY
DESCRIPTOR.message_types_by_name['ApplyQuery'] = _APPLYQUERY
DESCRIPTOR.message_types_by_name['LookupQuery'] = _LOOKUPQUERY
DESCRIPTOR.message_types_by_name['DifferenceQuery'] = _DIFFERENCEQUERY
DESCRIPTOR.message_types_by_name['AllQuery'] = _ALLQUERY
DESCRIPTOR.message_types_by_name['NotQuery'] = _NOTQUERY
DESCRIPTOR.message_types_by_name['AggregateField'] = _AGGREGATEFIELD
DESCRIPTOR.message_types_by_name['AggregateQuery'] = _AGGREGATEQUERY
DESCRIPTOR.message_types_by_name['SortQuery'] = _SORTQUERY
DESCRIPTOR.message_types_by_name['SelectField'] = _SELECTFIELD
DESCRIPTOR.message_types_by_name['SelectQuery'] = _SELECTQUERY
DESCRIPTOR.message_types_by_name['LimitQuery'] = _LIMITQUERY
DESCRIPTOR.message_types_by_name['SampleQuery'] = _SAMPLEQUERY
DESCRIPTOR.message_types_by_name['BoostedTerm'] = _BOOSTEDTERM
DESCRIPTOR.message_types_by_name['AlternativeTerms'] = _ALTERNATIVETERMS
DESCRIPTOR.message_types_by_name['ProximityQuery'] = _PROXIMITYQUERY
DESCRIPTOR.message_types_by_name['SearchQuery'] = _SEARCHQUERY
DESCRIPTOR.message_types_by_name['NestedQuery'] = _NESTEDQUERY
DESCRIPTOR.message_types_by_name['BoostQuery'] = _BOOSTQUERY
DESCRIPTOR.message_types_by_name['InfoQuery'] = _INFOQUERY
DESCRIPTOR.message_types_by_name['ScoreQuery'] = _SCOREQUERY
DESCRIPTOR.message_types_by_name['FilterQuery'] = _FILTERQUERY
DESCRIPTOR.message_types_by_name['UnnestQuery'] = _UNNESTQUERY
DESCRIPTOR.message_types_by_name['LiftAggregateQuery'] = _LIFTAGGREGATEQUERY
DESCRIPTOR.message_types_by_name['NestQuery'] = _NESTQUERY
DESCRIPTOR.message_types_by_name['FieldTypesQuery'] = _FIELDTYPESQUERY
DESCRIPTOR.message_types_by_name['Query'] = _QUERY
DESCRIPTOR.enum_types_by_name['AggregateFunctionEnum'] = _AGGREGATEFUNCTIONENUM
DESCRIPTOR.enum_types_by_name['SortQueryMode'] = _SORTQUERYMODE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

AndQuery = _reflection.GeneratedProtocolMessageType('AndQuery', (_message.Message,), dict(
  DESCRIPTOR = _ANDQUERY,
  __module__ = 'rockset.query_pb2'
  # @@protoc_insertion_point(class_scope:rockset.AndQuery)
  ))
_sym_db.RegisterMessage(AndQuery)

OrQuery = _reflection.GeneratedProtocolMessageType('OrQuery', (_message.Message,), dict(
  DESCRIPTOR = _ORQUERY,
  __module__ = 'rockset.query_pb2'
  # @@protoc_insertion_point(class_scope:rockset.OrQuery)
  ))
_sym_db.RegisterMessage(OrQuery)

ApplyQuery = _reflection.GeneratedProtocolMessageType('ApplyQuery', (_message.Message,), dict(
  DESCRIPTOR = _APPLYQUERY,
  __module__ = 'rockset.query_pb2'
  # @@protoc_insertion_point(class_scope:rockset.ApplyQuery)
  ))
_sym_db.RegisterMessage(ApplyQuery)

LookupQuery = _reflection.GeneratedProtocolMessageType('LookupQuery', (_message.Message,), dict(
  DESCRIPTOR = _LOOKUPQUERY,
  __module__ = 'rockset.query_pb2'
  # @@protoc_insertion_point(class_scope:rockset.LookupQuery)
  ))
_sym_db.RegisterMessage(LookupQuery)

DifferenceQuery = _reflection.GeneratedProtocolMessageType('DifferenceQuery', (_message.Message,), dict(
  DESCRIPTOR = _DIFFERENCEQUERY,
  __module__ = 'rockset.query_pb2'
  # @@protoc_insertion_point(class_scope:rockset.DifferenceQuery)
  ))
_sym_db.RegisterMessage(DifferenceQuery)

AllQuery = _reflection.GeneratedProtocolMessageType('AllQuery', (_message.Message,), dict(
  DESCRIPTOR = _ALLQUERY,
  __module__ = 'rockset.query_pb2'
  # @@protoc_insertion_point(class_scope:rockset.AllQuery)
  ))
_sym_db.RegisterMessage(AllQuery)

NotQuery = _reflection.GeneratedProtocolMessageType('NotQuery', (_message.Message,), dict(
  DESCRIPTOR = _NOTQUERY,
  __module__ = 'rockset.query_pb2'
  # @@protoc_insertion_point(class_scope:rockset.NotQuery)
  ))
_sym_db.RegisterMessage(NotQuery)

AggregateField = _reflection.GeneratedProtocolMessageType('AggregateField', (_message.Message,), dict(
  DESCRIPTOR = _AGGREGATEFIELD,
  __module__ = 'rockset.query_pb2'
  # @@protoc_insertion_point(class_scope:rockset.AggregateField)
  ))
_sym_db.RegisterMessage(AggregateField)

AggregateQuery = _reflection.GeneratedProtocolMessageType('AggregateQuery', (_message.Message,), dict(
  DESCRIPTOR = _AGGREGATEQUERY,
  __module__ = 'rockset.query_pb2'
  # @@protoc_insertion_point(class_scope:rockset.AggregateQuery)
  ))
_sym_db.RegisterMessage(AggregateQuery)

SortQuery = _reflection.GeneratedProtocolMessageType('SortQuery', (_message.Message,), dict(
  DESCRIPTOR = _SORTQUERY,
  __module__ = 'rockset.query_pb2'
  # @@protoc_insertion_point(class_scope:rockset.SortQuery)
  ))
_sym_db.RegisterMessage(SortQuery)

SelectField = _reflection.GeneratedProtocolMessageType('SelectField', (_message.Message,), dict(
  DESCRIPTOR = _SELECTFIELD,
  __module__ = 'rockset.query_pb2'
  # @@protoc_insertion_point(class_scope:rockset.SelectField)
  ))
_sym_db.RegisterMessage(SelectField)

SelectQuery = _reflection.GeneratedProtocolMessageType('SelectQuery', (_message.Message,), dict(
  DESCRIPTOR = _SELECTQUERY,
  __module__ = 'rockset.query_pb2'
  # @@protoc_insertion_point(class_scope:rockset.SelectQuery)
  ))
_sym_db.RegisterMessage(SelectQuery)

LimitQuery = _reflection.GeneratedProtocolMessageType('LimitQuery', (_message.Message,), dict(
  DESCRIPTOR = _LIMITQUERY,
  __module__ = 'rockset.query_pb2'
  # @@protoc_insertion_point(class_scope:rockset.LimitQuery)
  ))
_sym_db.RegisterMessage(LimitQuery)

SampleQuery = _reflection.GeneratedProtocolMessageType('SampleQuery', (_message.Message,), dict(
  DESCRIPTOR = _SAMPLEQUERY,
  __module__ = 'rockset.query_pb2'
  # @@protoc_insertion_point(class_scope:rockset.SampleQuery)
  ))
_sym_db.RegisterMessage(SampleQuery)

BoostedTerm = _reflection.GeneratedProtocolMessageType('BoostedTerm', (_message.Message,), dict(
  DESCRIPTOR = _BOOSTEDTERM,
  __module__ = 'rockset.query_pb2'
  # @@protoc_insertion_point(class_scope:rockset.BoostedTerm)
  ))
_sym_db.RegisterMessage(BoostedTerm)

AlternativeTerms = _reflection.GeneratedProtocolMessageType('AlternativeTerms', (_message.Message,), dict(
  DESCRIPTOR = _ALTERNATIVETERMS,
  __module__ = 'rockset.query_pb2'
  # @@protoc_insertion_point(class_scope:rockset.AlternativeTerms)
  ))
_sym_db.RegisterMessage(AlternativeTerms)

ProximityQuery = _reflection.GeneratedProtocolMessageType('ProximityQuery', (_message.Message,), dict(
  DESCRIPTOR = _PROXIMITYQUERY,
  __module__ = 'rockset.query_pb2'
  # @@protoc_insertion_point(class_scope:rockset.ProximityQuery)
  ))
_sym_db.RegisterMessage(ProximityQuery)

SearchQuery = _reflection.GeneratedProtocolMessageType('SearchQuery', (_message.Message,), dict(
  DESCRIPTOR = _SEARCHQUERY,
  __module__ = 'rockset.query_pb2'
  # @@protoc_insertion_point(class_scope:rockset.SearchQuery)
  ))
_sym_db.RegisterMessage(SearchQuery)

NestedQuery = _reflection.GeneratedProtocolMessageType('NestedQuery', (_message.Message,), dict(
  DESCRIPTOR = _NESTEDQUERY,
  __module__ = 'rockset.query_pb2'
  # @@protoc_insertion_point(class_scope:rockset.NestedQuery)
  ))
_sym_db.RegisterMessage(NestedQuery)

BoostQuery = _reflection.GeneratedProtocolMessageType('BoostQuery', (_message.Message,), dict(
  DESCRIPTOR = _BOOSTQUERY,
  __module__ = 'rockset.query_pb2'
  # @@protoc_insertion_point(class_scope:rockset.BoostQuery)
  ))
_sym_db.RegisterMessage(BoostQuery)

InfoQuery = _reflection.GeneratedProtocolMessageType('InfoQuery', (_message.Message,), dict(
  DESCRIPTOR = _INFOQUERY,
  __module__ = 'rockset.query_pb2'
  # @@protoc_insertion_point(class_scope:rockset.InfoQuery)
  ))
_sym_db.RegisterMessage(InfoQuery)

ScoreQuery = _reflection.GeneratedProtocolMessageType('ScoreQuery', (_message.Message,), dict(
  DESCRIPTOR = _SCOREQUERY,
  __module__ = 'rockset.query_pb2'
  # @@protoc_insertion_point(class_scope:rockset.ScoreQuery)
  ))
_sym_db.RegisterMessage(ScoreQuery)

FilterQuery = _reflection.GeneratedProtocolMessageType('FilterQuery', (_message.Message,), dict(
  DESCRIPTOR = _FILTERQUERY,
  __module__ = 'rockset.query_pb2'
  # @@protoc_insertion_point(class_scope:rockset.FilterQuery)
  ))
_sym_db.RegisterMessage(FilterQuery)

UnnestQuery = _reflection.GeneratedProtocolMessageType('UnnestQuery', (_message.Message,), dict(
  DESCRIPTOR = _UNNESTQUERY,
  __module__ = 'rockset.query_pb2'
  # @@protoc_insertion_point(class_scope:rockset.UnnestQuery)
  ))
_sym_db.RegisterMessage(UnnestQuery)

LiftAggregateQuery = _reflection.GeneratedProtocolMessageType('LiftAggregateQuery', (_message.Message,), dict(
  DESCRIPTOR = _LIFTAGGREGATEQUERY,
  __module__ = 'rockset.query_pb2'
  # @@protoc_insertion_point(class_scope:rockset.LiftAggregateQuery)
  ))
_sym_db.RegisterMessage(LiftAggregateQuery)

NestQuery = _reflection.GeneratedProtocolMessageType('NestQuery', (_message.Message,), dict(
  DESCRIPTOR = _NESTQUERY,
  __module__ = 'rockset.query_pb2'
  # @@protoc_insertion_point(class_scope:rockset.NestQuery)
  ))
_sym_db.RegisterMessage(NestQuery)

FieldTypesQuery = _reflection.GeneratedProtocolMessageType('FieldTypesQuery', (_message.Message,), dict(
  DESCRIPTOR = _FIELDTYPESQUERY,
  __module__ = 'rockset.query_pb2'
  # @@protoc_insertion_point(class_scope:rockset.FieldTypesQuery)
  ))
_sym_db.RegisterMessage(FieldTypesQuery)

Query = _reflection.GeneratedProtocolMessageType('Query', (_message.Message,), dict(
  DESCRIPTOR = _QUERY,
  __module__ = 'rockset.query_pb2'
  # @@protoc_insertion_point(class_scope:rockset.Query)
  ))
_sym_db.RegisterMessage(Query)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\020io.rockset.protoP\000'))
# @@protoc_insertion_point(module_scope)
