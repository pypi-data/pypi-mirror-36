Metadata-Version: 2.1
Name: guillotina
Version: 4.2.1
Summary: asyncio REST API Resource database
Home-page: https://github.com/plone/guillotina
Author: Ramon Navarro Bosch & Nathan Van Gheem
Author-email: ramon@plone.org
License: BSD
Keywords: asyncio,REST,Framework,transactional
Platform: UNKNOWN
Classifier: License :: OSI Approved :: BSD License
Classifier: Intended Audience :: Developers
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Provides-Extra: test
Provides-Extra: docs
Requires-Dist: aiohttp (<4.0.0,>=3.0.0)
Requires-Dist: jsonschema
Requires-Dist: python-dateutil
Requires-Dist: pycryptodome
Requires-Dist: setuptools
Requires-Dist: ujson
Requires-Dist: zope.interface
Requires-Dist: aioconsole
Requires-Dist: pyjwt
Requires-Dist: asyncpg
Requires-Dist: cffi
Requires-Dist: PyYAML
Requires-Dist: aiotask-context
Provides-Extra: docs
Requires-Dist: sphinx; extra == 'docs'
Requires-Dist: recommonmark; extra == 'docs'
Requires-Dist: sphinxcontrib-httpdomain; extra == 'docs'
Requires-Dist: sphinxcontrib-httpexample; extra == 'docs'
Requires-Dist: sphinx-guillotina-theme; extra == 'docs'
Requires-Dist: sphinx-autodoc-typehints; extra == 'docs'
Provides-Extra: test
Requires-Dist: pytest (<=3.1.0); extra == 'test'
Requires-Dist: docker; extra == 'test'
Requires-Dist: backoff; extra == 'test'
Requires-Dist: psycopg2; extra == 'test'
Requires-Dist: pytest-asyncio (>=0.8.0); extra == 'test'
Requires-Dist: pytest-cov; extra == 'test'
Requires-Dist: coverage (>=4.0.3); extra == 'test'
Requires-Dist: pytest-docker-fixtures; extra == 'test'

Introduction
============

.. image:: https://img.shields.io/badge/docs-latest-brightgreen.svg?style=flat
   :target: http://guillotina.readthedocs.io/en/latest/

.. image:: https://travis-ci.org/plone/guillotina.svg?branch=master
   :target: https://travis-ci.org/plone/guillotina

.. image:: https://codecov.io/gh/plone/guillotina/branch/master/graph/badge.svg
   :target: https://codecov.io/gh/plone/guillotina/branch/master
   :alt: Test Coverage

.. image:: https://img.shields.io/pypi/pyversions/guillotina.svg
   :target: https://pypi.python.org/pypi/guillotina/
   :alt: Python Versions

.. image:: https://img.shields.io/pypi/v/guillotina.svg
   :target: https://pypi.python.org/pypi/guillotina

.. image:: https://img.shields.io/pypi/l/guillotina.svg
   :target: https://pypi.python.org/pypi/guillotina/
   :alt: License

.. image:: https://badges.gitter.im/plone/guillotina.png
   :target: https://gitter.im/plone/guillotina
   :alt: Chat

Please `read the detailed docs <http://guillotina.readthedocs.io/en/latest/>`_


This is the working project of the next generation Guillotina server based on asyncio.


Dependencies
------------

* python >= 3.6
* postgresql >= 9.6


Quickstart
----------

We use pip::

  pip install guillotina


Run postgresql
--------------

If you don't have a postgresql server to play with, you can run one easily
with docker.

Download and start the docker container by running::

  make run-postgres



Run the server
--------------

To run the server::

    g


Then...

    curl http://localhost:8080


Or, better yet, use postman to start playing with API.

You can also navigate in your Guillotina server with its built-in web admin interface by visiting http://localhost:8080/+admin/.

Getting started with development
--------------------------------

Using pip::

  ./bin/pip install requirements.txt
  ./bin/pip install -e .[test]


Run tests
---------

We're using pytest::

    ./bin/pytest guillotina

and for test coverage::

    ./bin/pytest --cov=guillotina guillotina/

With file watcher...

    ./bin/ptw guillotina --runner=./bin/py.test


To run tests with cockroach db::

   USE_COCKROACH=true ./bin/pytest guillotina

Default
-------

Default root access can be done with AUTHORIZATION header : Basic root:root


Docker
------

You can also run Guillotina with Docker!


First, run postgresql::

    docker run --rm \
        -e POSTGRES_DB=guillotina \
        -e POSTGRES_USER=guillotina \
        -p 127.0.0.1:5432:5432 \
        --name postgres \
        postgres:9.6

Then, run guillotina::

    docker run --rm -it \
        --link=postgres -p 127.0.0.1:8080:8080 \
        guillotina/guillotina:latest \
        g -c '{"databases": [{"db": {"storage": "postgresql", "dsn": "postgres://guillotina:@postgres/guillotina"}}], "root_user": {"password": "root"}}'


This assumes you have a config.yaml in your current working directory


Chat
----

Join us to talk about Guillotina at https://gitter.im/plone/guillotina


4.2.1 (2018-09-25)
------------------

- Adding logging and renew token endpoint
  [bloodbare]


4.2.0 (2018-09-23)
------------------

- Add new events:
    - IApplicationCleanupEvent
    - IApplicationConfiguredEvent
    - IApplicationInitializedEvent
    - IDatabaseInitializedEvent
    - ITraversalMissEvent
    - ITraversalResourceMissEvent
    - ITraversalRouteMissEvent
    - ITraversalViewMissEvent

- upgrade shipped asyncpg version
  [vangheem]

- Add events for application configuration, request traversal misses
  and database itialization.
  [vangheem]

- Add `@resolveuid` endpoint
  [vangheem]

- Change `@ids` endpoint permission to `guillotina.Manage`
  [vangheem]

- Change `@items` endpoint permission to `guillotina.Manage`
  [vangheem]

- Add `guillotina.Manage` permission which only `guillotina.Managers` roles
  have by default.
  [vangheem]


4.1.12 (2018-09-20)
-------------------

- Fix file handling to properly provide 404 responses when no value is set
  [vangheem]

- Move static guillotina assets into python package so they can be
  referenced from python dotted paths with `guillotina:static/assets`
  [vangheem]

- Be able to configure behavior directly against a schema instead
  of needing to define concret behavior
  [vangheem]

4.1.11 (2018-09-19)
-------------------

- Fixing serialization bug
  [bloodbare]


4.1.10 (2018-09-19)
-------------------

- Fixing Bug on Serialize Schema
  [bloodbare]

- Adding static behaviors on REST serialize
  [bloodbare]

- Fix cookiecutter application template
  [vangheem]


4.1.9 (2018-09-17)
------------------

- Adding annotation support on registry object
  [bloodbare]

- Fix IJSONToValue adapter for IPatchField
  [masipcat]


4.1.8 (2018-09-14)
------------------

- Be able to override configuration values with `--override` parameter
  [vangheem]


4.1.7 (2018-09-12)
------------------

- Provide more flexibility for traversal sub-routes
  [vangheem]

- Make sure ApplicationRoot knows about the loop it is used with
  [vangheem]

4.1.6 (2018-08-31)
------------------

- On PUT, completely delete existing existing behavior objects
  [vangheem]


4.1.5 (2018-08-30)
------------------

- Allow PUT in CORS policy
  [ebrehault]

- Update admin interface:

  - Use PUT to edit
  - Preserve path when logging in

  [ebrehault]

4.1.4 (2018-08-29)
------------------

- Implement default PUT method to be able to replace content
  [vangheem]

- Fix error on invalid CORS ch
  [vangheem]

- Option to disable inheritance on role permission relation
  [bloodbare]

- Add get_behavior utility
  [vangheem]

- IBeforeFieldModified event to hook before setting a field
  [bloodbare]

- Added PatchField for ints to be used as counters [lferran]

4.1.3 (2018-08-08)
------------------

- Split sharing function to be reusable
  [bloodbare]


4.1.2 (2018-08-06)
------------------

- Binding fields to objecst on deserialize to make sure vocabulary is enabled
  [bloodbare]

- Enabling uploading files with a JSON payload
  [bloodbare]


4.1.1 (2018-07-30)
------------------

- Adding decorator for vocabulary definition
  [bloodbare]

- Adding tests on cookiecutter
  [bloodbare]

- Add 'Navigator' utility, that provides a path-based index to the already
  loaded objects.
  [cdevienne]


4.1.0 (2018-07-23)
------------------

- Various doc improvements including security section rewrite
  [WnP]

- Allow DELETE with params on url.
  [jordic]

- Add admin interface as static JS app on http://localhost:8080/+admin/
  [mathilde-pellerin, ebrehault]

4.0.7 (2018-07-21)
------------------

- Improve and fix docs
  [vangheem]

- Fix interface for layers
  [bloodbare]

- Updating requirements for py3.7
  [bloodbare]


4.0.6 (2018-07-20)
------------------

- Provide IIDGenerator interface to customize generating new ids
  [bloodbare]

- Fix applying cors when errors on traversal
  [bloodbare]


4.0.5 (2018-07-19)
------------------

- Fix run_app args when access_log_format is None
  [vangheem]


4.0.4 (2018-07-19)
------------------

- Use guillotina response exceptions everywhere so we
  use built-in CORS

- Serialize if a content is folderish
  [bloodbare]

- Serialize the schema with the full behavior name
  [bloodbare]

- Upgrade to aiohttp > 3 < 4.
  Notable aiohttp changes:
    - Response.write is now a coroutine
    - Response.write should explicitly use write_eof
    - Websockets send_str is now a coroutine
  [vangheem]

- Dublin core should not be required
  [bloodbare]
...

You are seeing a truncated changelog.

You can read the `changelog file <https://github.com/plone/guillotina/blob/master/CHANGELOG.rst>`_
for a complete list.



