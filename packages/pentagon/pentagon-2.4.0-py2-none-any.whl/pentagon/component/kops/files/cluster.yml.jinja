apiVersion: kops/v1alpha2
kind: Cluster
metadata:
  name: {{ cluster_name }}
spec:
  {%- if additional_policies %}
  additionalPolicies:
   {{ additional_policies|indent(4) }}
  {%- endif %}
  api:
    loadBalancer:
      type: Public
  authorization:
    {{ authorization|indent(2) }}
  channel: stable
  cloudProvider: aws
  configBase: s3://{{ kops_state_store_bucket }}/{{ cluster_name }}
  dnsZone: {{ cluster_dns }}
  etcdClusters:
  - etcdMembers:
    {%- for az in master_availability_zones %}
    - instanceGroup: master-{{ az }}
      name: {{ az }}
    {%- endfor %}
    name: main
  - etcdMembers:
    {%- for az in master_availability_zones %}
    - instanceGroup: master-{{ az }}
      name: {{ az }}
    {%- endfor %}
    name: events
  kubernetesApiAccess:
  - 0.0.0.0/0
  kubernetesVersion: {{ kubernetes_version }}
  masterPublicName: api.{{ cluster_name }}
  networkCIDR: {{ network_cidr }}
  {%- if vpc_id %}
  networkID: {{ vpc_id }}
  {%- endif %}
  networking:
    {{ networking|indent(2) }}
  nonMasqueradeCIDR: 100.64.0.0/10
  sshAccess:
  - 0.0.0.0/0
  subnets:
  {%- for az in availability_zones %}
  - cidr: {{ network_cidr_base|string + "." + ((third_octet|int) + (loop.index - 1) * third_octet_increment)|string + ".0/" + network_mask|string }}
    name: {{ az }}
    type: Private
    zone: {{ az }}
    {%- if nat_gateways %}
    egress: {{ nat_gateways[loop.index-1] }}
    {%- endif %}
  {%- endfor -%}
  {%- for az in availability_zones %}
  - cidr: {{ network_cidr_base|string + "." + ((third_octet|int + 4 * third_octet_increment) + (loop.index - 1) * third_octet_increment)|string + ".0/" + network_mask|string }}
    name: utility-{{ az }}
    type: Utility
    zone: {{ az }}
  {%- endfor %}
  topology:
    dns:
      type: Public
    masters: private
    nodes: private
