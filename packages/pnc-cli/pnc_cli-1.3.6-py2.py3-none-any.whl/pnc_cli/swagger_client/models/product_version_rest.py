# coding: utf-8

"""
Copyright 2015 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from datetime import datetime
from pprint import pformat
from six import iteritems


class ProductVersionRest(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        ProductVersionRest - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'id': 'int',
            'version': 'str',
            'product_id': 'int',
            'product_name': 'str',
            'current_product_milestone_id': 'int',
            'product_milestones': 'list[ProductMilestoneRest]',
            'product_releases': 'list[ProductReleaseRest]',
            'build_configuration_sets': 'list[BuildConfigurationSetRest]',
            'build_configurations': 'list[BuildConfigurationRest]',
            'attributes': 'dict(str, str)'
        }

        self.attribute_map = {
            'id': 'id',
            'version': 'version',
            'product_id': 'productId',
            'product_name': 'productName',
            'current_product_milestone_id': 'currentProductMilestoneId',
            'product_milestones': 'productMilestones',
            'product_releases': 'productReleases',
            'build_configuration_sets': 'buildConfigurationSets',
            'build_configurations': 'buildConfigurations',
            'attributes': 'attributes'
        }

        self._id = None
        self._version = None
        self._product_id = None
        self._product_name = None
        self._current_product_milestone_id = None
        self._product_milestones = None
        self._product_releases = None
        self._build_configuration_sets = None
        self._build_configurations = None
        self._attributes = None

    @property
    def id(self):
        """
        Gets the id of this ProductVersionRest.


        :return: The id of this ProductVersionRest.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this ProductVersionRest.


        :param id: The id of this ProductVersionRest.
        :type: int
        """
        self._id = id

    @property
    def version(self):
        """
        Gets the version of this ProductVersionRest.


        :return: The version of this ProductVersionRest.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """
        Sets the version of this ProductVersionRest.


        :param version: The version of this ProductVersionRest.
        :type: str
        """
        self._version = version

    @property
    def product_id(self):
        """
        Gets the product_id of this ProductVersionRest.


        :return: The product_id of this ProductVersionRest.
        :rtype: int
        """
        return self._product_id

    @product_id.setter
    def product_id(self, product_id):
        """
        Sets the product_id of this ProductVersionRest.


        :param product_id: The product_id of this ProductVersionRest.
        :type: int
        """
        self._product_id = product_id

    @property
    def product_name(self):
        """
        Gets the product_name of this ProductVersionRest.


        :return: The product_name of this ProductVersionRest.
        :rtype: str
        """
        return self._product_name

    @product_name.setter
    def product_name(self, product_name):
        """
        Sets the product_name of this ProductVersionRest.


        :param product_name: The product_name of this ProductVersionRest.
        :type: str
        """
        self._product_name = product_name

    @property
    def current_product_milestone_id(self):
        """
        Gets the current_product_milestone_id of this ProductVersionRest.


        :return: The current_product_milestone_id of this ProductVersionRest.
        :rtype: int
        """
        return self._current_product_milestone_id

    @current_product_milestone_id.setter
    def current_product_milestone_id(self, current_product_milestone_id):
        """
        Sets the current_product_milestone_id of this ProductVersionRest.


        :param current_product_milestone_id: The current_product_milestone_id of this ProductVersionRest.
        :type: int
        """
        self._current_product_milestone_id = current_product_milestone_id

    @property
    def product_milestones(self):
        """
        Gets the product_milestones of this ProductVersionRest.


        :return: The product_milestones of this ProductVersionRest.
        :rtype: list[ProductMilestoneRest]
        """
        return self._product_milestones

    @product_milestones.setter
    def product_milestones(self, product_milestones):
        """
        Sets the product_milestones of this ProductVersionRest.


        :param product_milestones: The product_milestones of this ProductVersionRest.
        :type: list[ProductMilestoneRest]
        """
        self._product_milestones = product_milestones

    @property
    def product_releases(self):
        """
        Gets the product_releases of this ProductVersionRest.


        :return: The product_releases of this ProductVersionRest.
        :rtype: list[ProductReleaseRest]
        """
        return self._product_releases

    @product_releases.setter
    def product_releases(self, product_releases):
        """
        Sets the product_releases of this ProductVersionRest.


        :param product_releases: The product_releases of this ProductVersionRest.
        :type: list[ProductReleaseRest]
        """
        self._product_releases = product_releases

    @property
    def build_configuration_sets(self):
        """
        Gets the build_configuration_sets of this ProductVersionRest.


        :return: The build_configuration_sets of this ProductVersionRest.
        :rtype: list[BuildConfigurationSetRest]
        """
        return self._build_configuration_sets

    @build_configuration_sets.setter
    def build_configuration_sets(self, build_configuration_sets):
        """
        Sets the build_configuration_sets of this ProductVersionRest.


        :param build_configuration_sets: The build_configuration_sets of this ProductVersionRest.
        :type: list[BuildConfigurationSetRest]
        """
        self._build_configuration_sets = build_configuration_sets

    @property
    def build_configurations(self):
        """
        Gets the build_configurations of this ProductVersionRest.


        :return: The build_configurations of this ProductVersionRest.
        :rtype: list[BuildConfigurationRest]
        """
        return self._build_configurations

    @build_configurations.setter
    def build_configurations(self, build_configurations):
        """
        Sets the build_configurations of this ProductVersionRest.


        :param build_configurations: The build_configurations of this ProductVersionRest.
        :type: list[BuildConfigurationRest]
        """
        self._build_configurations = build_configurations

    @property
    def attributes(self):
        """
        Gets the attributes of this ProductVersionRest.


        :return: The attributes of this ProductVersionRest.
        :rtype: dict(str, str)
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """
        Sets the attributes of this ProductVersionRest.


        :param attributes: The attributes of this ProductVersionRest.
        :type: dict(str, str)
        """
        self._attributes = attributes

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
	    elif isinstance(value, datetime):
		result[attr] = str(value.date())
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()
