# coding: utf-8

"""
Copyright 2015 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from datetime import datetime
from pprint import pformat
from six import iteritems


class ProductMilestoneReleaseRest(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        ProductMilestoneReleaseRest - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'id': 'int',
            'status': 'str',
            'log': 'str',
            'end_date': 'datetime',
            'starting_date': 'datetime'
        }

        self.attribute_map = {
            'id': 'id',
            'status': 'status',
            'log': 'log',
            'end_date': 'endDate',
            'starting_date': 'startingDate'
        }

        self._id = None
        self._status = None
        self._log = None
        self._end_date = None
        self._starting_date = None

    @property
    def id(self):
        """
        Gets the id of this ProductMilestoneReleaseRest.


        :return: The id of this ProductMilestoneReleaseRest.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this ProductMilestoneReleaseRest.


        :param id: The id of this ProductMilestoneReleaseRest.
        :type: int
        """
        self._id = id

    @property
    def status(self):
        """
        Gets the status of this ProductMilestoneReleaseRest.


        :return: The status of this ProductMilestoneReleaseRest.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """
        Sets the status of this ProductMilestoneReleaseRest.


        :param status: The status of this ProductMilestoneReleaseRest.
        :type: str
        """
        allowed_values = ["IN_PROGRESS", "FAILED", "SUCCEEDED", "CANCELED", "SYSTEM_ERROR"]
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status`, must be one of {0}"
                .format(allowed_values)
            )
        self._status = status

    @property
    def log(self):
        """
        Gets the log of this ProductMilestoneReleaseRest.


        :return: The log of this ProductMilestoneReleaseRest.
        :rtype: str
        """
        return self._log

    @log.setter
    def log(self, log):
        """
        Sets the log of this ProductMilestoneReleaseRest.


        :param log: The log of this ProductMilestoneReleaseRest.
        :type: str
        """
        self._log = log

    @property
    def end_date(self):
        """
        Gets the end_date of this ProductMilestoneReleaseRest.


        :return: The end_date of this ProductMilestoneReleaseRest.
        :rtype: datetime
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """
        Sets the end_date of this ProductMilestoneReleaseRest.


        :param end_date: The end_date of this ProductMilestoneReleaseRest.
        :type: datetime
        """
        self._end_date = end_date

    @property
    def starting_date(self):
        """
        Gets the starting_date of this ProductMilestoneReleaseRest.


        :return: The starting_date of this ProductMilestoneReleaseRest.
        :rtype: datetime
        """
        return self._starting_date

    @starting_date.setter
    def starting_date(self, starting_date):
        """
        Sets the starting_date of this ProductMilestoneReleaseRest.


        :param starting_date: The starting_date of this ProductMilestoneReleaseRest.
        :type: datetime
        """
        self._starting_date = starting_date

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
	    elif isinstance(value, datetime):
		result[attr] = str(value.date())
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()
