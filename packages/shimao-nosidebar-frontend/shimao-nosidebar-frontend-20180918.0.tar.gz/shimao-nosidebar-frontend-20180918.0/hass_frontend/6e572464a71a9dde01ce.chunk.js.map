{"version":3,"sources":["webpack:///./node_modules/unfetch/dist/unfetch.es.js","webpack:///./src/entrypoints/compatibility.js","webpack:///./node_modules/es6-object-assign/index.js","webpack:///./node_modules/mdn-polyfills/Array.prototype.includes.js","webpack:///./node_modules/unfetch/polyfill.js","webpack:///./node_modules/regenerator-runtime/runtime.js"],"names":["__webpack_require__","r","__webpack_exports__","index","fetch","bind","url","options","Promise","resolve","reject","request","XMLHttpRequest","i","open","method","headers","setRequestHeader","response","header","keys","all","getAllResponseHeaders","replace","m","key","value","push","toLowerCase","ok","status","statusText","responseURL","clone","text","responseText","json","then","JSON","parse","blob","Blob","entries","get","n","has","withCredentials","credentials","onload","onerror","send","body","default","144","module","es6_object_assign__WEBPACK_IMPORTED_MODULE_3__","a","polyfill","Object","values","target","map","assign","firstSource","TypeError","to","arguments","length","nextSource","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","exports","defineProperty","configurable","writable","Array","prototype","includes","this","e","parseInt","t","o","172","window","173","global","undefined","Op","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","inModule","runtime","regeneratorRuntime","wrap","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","call","Gp","GeneratorFunctionPrototype","Generator","create","GeneratorFunction","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","arg","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","self","tryLocsList","iter","next","result","done","toString","object","reverse","pop","Context","reset","skipTempReset","prev","sent","_sent","delegate","tryEntries","forEach","resetTryEntry","charAt","isNaN","slice","stop","rootRecord","completion","type","rval","dispatchException","exception","context","handle","loc","caught","record","entry","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","Error","abrupt","finallyEntry","complete","afterLoc","finish","catch","thrown","delegateYield","iterable","resultName","nextLoc","protoGenerator","generator","_invoke","state","doneResult","delegateResult","maybeInvokeDelegate","tryCatch","fn","obj","err","previousPromise","callInvokeWithMethodAndArg","invoke","unwrapped","return","info","pushTryEntry","locs","iteratorMethod","Function"],"mappings":"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","file":"6e572464a71a9dde01ce.chunk.js","sourcesContent":["var index = typeof fetch=='function' ? fetch.bind() : function(url, options) {\n\toptions = options || {};\n\treturn new Promise( function (resolve, reject) {\n\t\tvar request = new XMLHttpRequest();\n\n\t\trequest.open(options.method || 'get', url, true);\n\n\t\tfor (var i in options.headers) {\n\t\t\trequest.setRequestHeader(i, options.headers[i]);\n\t\t}\n\n\t\trequest.withCredentials = options.credentials=='include';\n\n\t\trequest.onload = function () {\n\t\t\tresolve(response());\n\t\t};\n\n\t\trequest.onerror = reject;\n\n\t\trequest.send(options.body);\n\n\t\tfunction response() {\n\t\t\tvar keys = [],\n\t\t\t\tall = [],\n\t\t\t\theaders = {},\n\t\t\t\theader;\n\n\t\t\trequest.getAllResponseHeaders().replace(/^(.*?):[^\\S\\n]*([\\s\\S]*?)$/gm, function (m, key, value) {\n\t\t\t\tkeys.push(key = key.toLowerCase());\n\t\t\t\tall.push([key, value]);\n\t\t\t\theader = headers[key];\n\t\t\t\theaders[key] = header ? (header + \",\" + value) : value;\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\tok: (request.status/100|0) == 2,\t\t// 200-299\n\t\t\t\tstatus: request.status,\n\t\t\t\tstatusText: request.statusText,\n\t\t\t\turl: request.responseURL,\n\t\t\t\tclone: response,\n\t\t\t\ttext: function () { return Promise.resolve(request.responseText); },\n\t\t\t\tjson: function () { return Promise.resolve(request.responseText).then(JSON.parse); },\n\t\t\t\tblob: function () { return Promise.resolve(new Blob([request.response])); },\n\t\t\t\theaders: {\n\t\t\t\t\tkeys: function () { return keys; },\n\t\t\t\t\tentries: function () { return all; },\n\t\t\t\t\tget: function (n) { return headers[n.toLowerCase()]; },\n\t\t\t\t\thas: function (n) { return n.toLowerCase() in headers; }\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t});\n};\n\nexport default index;\n//# sourceMappingURL=unfetch.es.js.map\n","import 'mdn-polyfills/Array.prototype.includes';\nimport 'unfetch/polyfill';\nimport 'regenerator-runtime/runtime';\nimport objAssign from 'es6-object-assign';\n\nobjAssign.polyfill();\n\nif (Object.values === undefined) {\n  Object.values = function (target) {\n    return Object.keys(target).map(function (key) { return target[key]; });\n  };\n}\n","/**\n * Code refactored from Mozilla Developer Network:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n */\n\n'use strict';\n\nfunction assign(target, firstSource) {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert first argument to object');\n  }\n\n  var to = Object(target);\n  for (var i = 1; i < arguments.length; i++) {\n    var nextSource = arguments[i];\n    if (nextSource === undefined || nextSource === null) {\n      continue;\n    }\n\n    var keysArray = Object.keys(Object(nextSource));\n    for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\n      var nextKey = keysArray[nextIndex];\n      var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n      if (desc !== undefined && desc.enumerable) {\n        to[nextKey] = nextSource[nextKey];\n      }\n    }\n  }\n  return to;\n}\n\nfunction polyfill() {\n  if (!Object.assign) {\n    Object.defineProperty(Object, 'assign', {\n      enumerable: false,\n      configurable: true,\n      writable: true,\n      value: assign\n    });\n  }\n}\n\nmodule.exports = {\n  assign: assign,\n  polyfill: polyfill\n};\n","Array.prototype.includes||(Array.prototype.includes=function(r){if(null==this)throw new TypeError(\"Array.prototype.includes called on null or undefined\");var e=Object(this),n=parseInt(e.length,10)||0;if(0===n)return!1;var t,o,i=parseInt(arguments[1],10)||0;for(0<=i?t=i:(t=n+i)<0&&(t=0);t<n;){if(r===(o=e[t])||r!=r&&o!=o)return!0;t++}return!1});\n","if (!window.fetch) window.fetch = require('.').default || require('.');\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() { return this })() || Function(\"return this\")()\n);\n"],"sourceRoot":""}