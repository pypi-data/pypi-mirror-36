{"version":3,"sources":["webpack:///./src/components/ha-paper-slider.js","webpack:///./src/components/ha-form.js","webpack:///./node_modules/@polymer/paper-dialog-behavior/paper-dialog-behavior.js","webpack:///./node_modules/@polymer/paper-dialog-behavior/paper-dialog-shared-styles.js","webpack:///./node_modules/@polymer/paper-dialog/paper-dialog.js","webpack:///./node_modules/@polymer/paper-dialog-scrollable/paper-dialog-scrollable.js","webpack:///./src/panels/config/config-entries/ha-config-flow.js"],"names":["__webpack_require__","PaperSliderClass","customElements","get","define","template","tpl","document","createElement","innerHTML","styleEl","content","querySelector","setAttribute","_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_6__","_polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_7__","_mixins_events_mixin_js__WEBPACK_IMPORTED_MODULE_9__","Object","a","properties","data","type","notify","schema","error","computeLabel","Function","value","name","computeError","_isArray","val","Array","isArray","_isRange","_equals","b","_includes","indexOf","_getValue","obj","item","_valueChanged","ev","this","set","model","detail","_passwordFieldType","unmaskedPassword","_passwordFieldIcon","_optionValue","_optionLabel","d","__webpack_exports__","PaperDialogBehaviorImpl","PaperDialogBehavior","_polymer_iron_overlay_behavior_iron_overlay_behavior_js__WEBPACK_IMPORTED_MODULE_1__","_polymer_polymer_lib_legacy_polymer_dom_js__WEBPACK_IMPORTED_MODULE_2__","hostAttributes","role","tabindex","modal","Boolean","__readied","observers","listeners","tap","ready","__prevNoCancelOnOutsideClick","noCancelOnOutsideClick","__prevNoCancelOnEscKey","noCancelOnEscKey","__prevWithBackdrop","withBackdrop","_modalChanged","readied","_updateClosingReasonConfirmed","confirmed","closingReason","_onDialogClick","event","path","i","l","target","hasAttribute","close","stopPropagation","$_documentContainer","head","appendChild","_polymer_neon_animation_neon_animation_runner_behavior_js__WEBPACK_IMPORTED_MODULE_2__","_polymer_paper_dialog_behavior_paper_dialog_behavior_js__WEBPACK_IMPORTED_MODULE_3__","_polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_4__","_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_5__","_template","is","behaviors","neon-animation-finish","_renderOpened","cancelAnimation","playAnimation","_renderClosed","_onNeonAnimationFinish","opened","_finishRenderOpened","_finishRenderClosed","dialogElement","scrollTarget","$","scrollable","_ensureTarget","classList","add","attached","requestAnimationFrame","updateScrollState","bind","toggleClass","scrollTop","offsetHeight","scrollHeight","parentElement","sizingTarget","remove","620","module","r","_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_4__","_polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_5__","_mixins_localize_mixin_js__WEBPACK_IMPORTED_MODULE_10__","instance","_hass","_dialogClosedCallback","_instance","Number","_loading","_errorMsg","String","_opened","_step","_stepData","super","addEventListener","keyCode","_submitStep","showDialog","hass","continueFlowId","newFlowForHandler","dialogClosedCallback","_createdFromHandler","fetchStep","callApi","handler","curInstance","then","step","_processStep","setTimeout","dialog","center","flow_id","err","body","message","errors","keys","length","_flowDone","flowFinished","includes","_openedChanged","_computeStepAbortedReason","localize","reason","_computeStepTitle","step_id","_computeStepDescription","args","placeholders","description_placeholders","forEach","key","push","_computeLabelCallback","_computeErrorCallback"],"mappings":"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","file":"a87ad6807e2035fe1561.chunk.js","sourcesContent":["import '@polymer/paper-slider/paper-slider.js';\n\n/**\n* @polymer\n* @customElement\n* @appliesMixin paper-slider\n*/\nconst PaperSliderClass = customElements.get('paper-slider');\n\nclass HaPaperSlider extends PaperSliderClass {\n  static get template() {\n    const tpl = document.createElement('template');\n    tpl.innerHTML = PaperSliderClass.template.innerHTML;\n    const styleEl = tpl.content.querySelector('style');\n    styleEl.setAttribute('include', 'paper-slider');\n    styleEl.innerHTML = `\n      .pin > .slider-knob > .slider-knob-inner {\n        font-size:  var(--ha-paper-slider-pin-font-size, 10px);\n        line-height: normal;\n      }\n\n      .pin > .slider-knob > .slider-knob-inner::before {\n        top: unset;\n        margin-left: unset;\n\n        bottom: calc(15px + var(--calculated-paper-slider-height)/2);\n        left: 50%;\n        width: 2.2em;\n        height: 2.2em;\n\n        -webkit-transform-origin: left bottom;\n        transform-origin: left bottom;\n        -webkit-transform: rotate(-45deg) scale(0) translate(0);\n        transform: rotate(-45deg) scale(0) translate(0);\n      }\n\n      .pin.expand > .slider-knob > .slider-knob-inner::before {\n        -webkit-transform: rotate(-45deg) scale(1) translate(7px, -7px);\n        transform: rotate(-45deg) scale(1) translate(7px, -7px);\n      }\n\n      .pin > .slider-knob > .slider-knob-inner::after {\n        top: unset;\n        font-size: unset;\n\n        bottom: calc(15px + var(--calculated-paper-slider-height)/2);\n        left: 50%;\n        margin-left: -1.1em;\n        width: 2.2em;\n        height: 2.1em;\n\n        -webkit-transform-origin: center bottom;\n        transform-origin: center bottom;\n        -webkit-transform: scale(0) translate(0);\n        transform: scale(0) translate(0);\n      }\n\n      .pin.expand > .slider-knob > .slider-knob-inner::after {\n        -webkit-transform: scale(1) translate(0, -10px);\n        transform: scale(1) translate(0, -10px);\n      }\n    `;\n    return tpl;\n  }\n}\ncustomElements.define('ha-paper-slider', HaPaperSlider);\n","import '@polymer/paper-checkbox/paper-checkbox.js';\nimport '@polymer/paper-dropdown-menu/paper-dropdown-menu.js';\nimport '@polymer/paper-icon-button/paper-icon-button.js';\nimport '@polymer/paper-input/paper-input.js';\nimport '@polymer/paper-item/paper-item.js';\nimport '@polymer/paper-listbox/paper-listbox.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport './ha-paper-slider.js';\nimport EventsMixin from '../mixins/events-mixin.js';\n\n/*\n * @appliesMixin EventsMixin\n */\nclass HaForm extends EventsMixin(PolymerElement) {\n  static get template() {\n    return html`\n    <style>\n      .error {\n        color: red;\n      }\n    </style>\n    <template is=\"dom-if\" if=\"[[_isArray(schema)]]\" restamp=\"\">\n      <template is=\"dom-if\" if=\"[[error.base]]\">\n          <div class='error'>[[computeError(error.base, schema)]]</div>\n      </template>\n\n      <template is=\"dom-repeat\" items=\"[[schema]]\">\n        <ha-form data=\"[[_getValue(data, item)]]\" schema=\"[[item]]\" error=\"[[_getValue(error, item)]]\" on-data-changed=\"_valueChanged\" compute-label=\"[[computeLabel]]\" compute-error=\"[[computeError]]\"></ha-form>\n      </template>\n    </template>\n    <template is=\"dom-if\" if=\"[[!_isArray(schema)]]\" restamp=\"\">\n      <template is=\"dom-if\" if=\"[[error]]\">\n        <div class=\"error\">[[computeError(error, schema)]]</div>\n      </template>\n\n      <template is=\"dom-if\" if=\"[[_equals(schema.type, &quot;string&quot;)]]\" restamp=\"\">\n        <template is=\"dom-if\" if=\"[[_includes(schema.name, &quot;password&quot;)]]\" restamp=\"\">\n          <paper-input\n            type=\"[[_passwordFieldType(unmaskedPassword)]]\"\n            label=\"[[computeLabel(schema)]]\"\n            value=\"{{data}}\"\n            required=\"[[schema.required]]\"\n            auto-validate=\"[[schema.required]]\"\n            error-message='Required'\n          >\n            <paper-icon-button toggles\n              active=\"{{unmaskedPassword}}\"\n              slot=\"suffix\"\n              icon=\"[[_passwordFieldIcon(unmaskedPassword)]]\"\n              id=\"iconButton\"\n              title=\"Click to toggle between masked and clear password\">\n            </paper-icon-button>\n          </paper-input>\n        </template>\n        <template is=\"dom-if\" if=\"[[!_includes(schema.name, &quot;password&quot;)]]\" restamp=\"\">\n          <paper-input\n            label=\"[[computeLabel(schema)]]\"\n            value=\"{{data}}\"\n            required=\"[[schema.required]]\"\n            auto-validate=\"[[schema.required]]\"\n            error-message='Required'\n          ></paper-input>\n        </template>\n      </template>\n\n      <template is=\"dom-if\" if=\"[[_equals(schema.type, &quot;integer&quot;)]]\" restamp=\"\">\n        <template is=\"dom-if\" if=\"[[_isRange(schema)]]\" restamp=\"\">\n          <div>\n            [[computeLabel(schema)]]\n            <ha-paper-slider pin=\"\" value=\"{{data}}\" min=\"[[schema.valueMin]]\" max=\"[[schema.valueMax]]\"></ha-paper-slider>\n          </div>\n        </template>\n        <template is=\"dom-if\" if=\"[[!_isRange(schema)]]\" restamp=\"\">\n          <paper-input\n            label=\"[[computeLabel(schema)]]\"\n            value=\"{{data}}\"\n            type=\"number\"\n            required=\"[[schema.required]]\"\n            auto-validate=\"[[schema.required]]\"\n            error-message='Required'\n          ></paper-input>\n        </template>\n      </template>\n\n      <template is=\"dom-if\" if=\"[[_equals(schema.type, &quot;float&quot;)]]\" restamp=\"\">\n        <!--TODO-->\n        <paper-input\n          label=\"[[computeLabel(schema)]]\"\n          value=\"{{data}}\"\n          required=\"[[schema.required]]\"\n          auto-validate=\"[[schema.required]]\"\n          error-message='Required'\n        ></paper-input>\n      </template>\n\n      <template is=\"dom-if\" if=\"[[_equals(schema.type, &quot;boolean&quot;)]]\" restamp=\"\">\n        <paper-checkbox checked=\"{{data}}\">[[computeLabel(schema)]]</paper-checkbox>\n      </template>\n\n      <template is=\"dom-if\" if=\"[[_equals(schema.type, &quot;select&quot;)]]\" restamp=\"\">\n        <paper-dropdown-menu label=\"[[computeLabel(schema)]]\">\n          <paper-listbox slot=\"dropdown-content\" attr-for-selected=\"item-name\" selected=\"{{data}}\">\n            <template is=\"dom-repeat\" items=\"[[schema.options]]\">\n              <paper-item item-name$=\"[[_optionValue(item)]]\">[[_optionLabel(item)]]</paper-item>\n            </template>\n          </paper-listbox>\n        </paper-dropdown-menu>\n      </template>\n\n    </template>\n`;\n  }\n\n  static get properties() {\n    return {\n      data: {\n        type: Object,\n        notify: true,\n      },\n      schema: Object,\n      error: Object,\n\n      // A function that will computes the label to be displayed for a given\n      // schema object.\n      computeLabel: {\n        type: Function,\n        value: () => schema => schema && schema.name,\n      },\n\n      // A function that will computes an error message to be displayed for a\n      // given error ID, and relevant schema object\n      computeError: {\n        type: Function,\n        value: () => (error, schema) => error, // eslint-disable-line no-unused-vars\n      },\n    };\n  }\n\n  _isArray(val) {\n    return Array.isArray(val);\n  }\n\n  _isRange(schema) {\n    return ('valueMin' in schema) && ('valueMax' in schema);\n  }\n\n  _equals(a, b) {\n    return a === b;\n  }\n\n  _includes(a, b) {\n    return a.indexOf(b) >= 0;\n  }\n\n  _getValue(obj, item) {\n    if (obj) {\n      return obj[item.name];\n    }\n    return null;\n  }\n\n  _valueChanged(ev) {\n    this.set(['data', ev.model.item.name], ev.detail.value);\n  }\n\n  _passwordFieldType(unmaskedPassword) {\n    return unmaskedPassword ? 'text' : 'password';\n  }\n\n  _passwordFieldIcon(unmaskedPassword) {\n    return unmaskedPassword ? 'hass:eye-off' : 'hass:eye';\n  }\n\n  _optionValue(item) {\n    return Array.isArray(item) ? item[0] : item;\n  }\n\n  _optionLabel(item) {\n    return Array.isArray(item) ? item[1] : item;\n  }\n}\n\ncustomElements.define('ha-form', HaForm);\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport {IronOverlayBehavior} from '@polymer/iron-overlay-behavior/iron-overlay-behavior.js';\nimport {dom} from '@polymer/polymer/lib/legacy/polymer.dom.js';\n\n/**\n  Use `Polymer.PaperDialogBehavior` and `paper-dialog-shared-styles.html` to\n  implement a Material Design dialog.\n\n  For example, if `<paper-dialog-impl>` implements this behavior:\n\n      <paper-dialog-impl>\n          <h2>Header</h2>\n          <div>Dialog body</div>\n          <div class=\"buttons\">\n              <paper-button dialog-dismiss>Cancel</paper-button>\n              <paper-button dialog-confirm>Accept</paper-button>\n          </div>\n      </paper-dialog-impl>\n\n  `paper-dialog-shared-styles.html` provide styles for a header, content area,\n  and an action area for buttons. Use the `<h2>` tag for the header and the\n  `buttons` class for the action area. You can use the `paper-dialog-scrollable`\n  element (in its own repository) if you need a scrolling content area.\n\n  Use the `dialog-dismiss` and `dialog-confirm` attributes on interactive\n  controls to close the dialog. If the user dismisses the dialog with\n  `dialog-confirm`, the `closingReason` will update to include `confirmed:\n  true`.\n\n  ### Accessibility\n\n  This element has `role=\"dialog\"` by default. Depending on the context, it may\n  be more appropriate to override this attribute with `role=\"alertdialog\"`.\n\n  If `modal` is set, the element will prevent the focus from exiting the\n  element. It will also ensure that focus remains in the dialog.\n\n  @hero hero.svg\n  @demo demo/index.html\n  @polymerBehavior PaperDialogBehavior\n */\nexport const PaperDialogBehaviorImpl = {\n\n  hostAttributes: {'role': 'dialog', 'tabindex': '-1'},\n\n  properties: {\n\n    /**\n     * If `modal` is true, this implies `no-cancel-on-outside-click`,\n     * `no-cancel-on-esc-key` and `with-backdrop`.\n     */\n    modal: {type: Boolean, value: false},\n\n    __readied: {type: Boolean, value: false}\n\n  },\n\n  observers: ['_modalChanged(modal, __readied)'],\n\n  listeners: {'tap': '_onDialogClick'},\n\n  /**\n   * @return {void}\n   */\n  ready: function() {\n    // Only now these properties can be read.\n    this.__prevNoCancelOnOutsideClick = this.noCancelOnOutsideClick;\n    this.__prevNoCancelOnEscKey = this.noCancelOnEscKey;\n    this.__prevWithBackdrop = this.withBackdrop;\n    this.__readied = true;\n  },\n\n  _modalChanged: function(modal, readied) {\n    // modal implies noCancelOnOutsideClick, noCancelOnEscKey and withBackdrop.\n    // We need to wait for the element to be ready before we can read the\n    // properties values.\n    if (!readied) {\n      return;\n    }\n\n    if (modal) {\n      this.__prevNoCancelOnOutsideClick = this.noCancelOnOutsideClick;\n      this.__prevNoCancelOnEscKey = this.noCancelOnEscKey;\n      this.__prevWithBackdrop = this.withBackdrop;\n      this.noCancelOnOutsideClick = true;\n      this.noCancelOnEscKey = true;\n      this.withBackdrop = true;\n    } else {\n      // If the value was changed to false, let it false.\n      this.noCancelOnOutsideClick =\n          this.noCancelOnOutsideClick && this.__prevNoCancelOnOutsideClick;\n      this.noCancelOnEscKey =\n          this.noCancelOnEscKey && this.__prevNoCancelOnEscKey;\n      this.withBackdrop = this.withBackdrop && this.__prevWithBackdrop;\n    }\n  },\n\n  _updateClosingReasonConfirmed: function(confirmed) {\n    this.closingReason = this.closingReason || {};\n    this.closingReason.confirmed = confirmed;\n  },\n\n  /**\n   * Will dismiss the dialog if user clicked on an element with dialog-dismiss\n   * or dialog-confirm attribute.\n   */\n  _onDialogClick: function(event) {\n    // Search for the element with dialog-confirm or dialog-dismiss,\n    // from the root target until this (excluded).\n    var path = dom(event).path;\n    for (var i = 0, l = path.indexOf(this); i < l; i++) {\n      var target = path[i];\n      if (target.hasAttribute &&\n          (target.hasAttribute('dialog-dismiss') ||\n           target.hasAttribute('dialog-confirm'))) {\n        this._updateClosingReasonConfirmed(\n            target.hasAttribute('dialog-confirm'));\n        this.close();\n        event.stopPropagation();\n        break;\n      }\n    }\n  }\n\n};\n\n/** @polymerBehavior */\nexport const PaperDialogBehavior =\n    [IronOverlayBehavior, PaperDialogBehaviorImpl];\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n/*\n### Styling\n\nThe following custom properties and mixins are available for styling.\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-dialog-background-color` | Dialog background color | `--primary-background-color`\n`--paper-dialog-color` | Dialog foreground color | `--primary-text-color`\n`--paper-dialog` | Mixin applied to the dialog | `{}`\n`--paper-dialog-title` | Mixin applied to the title (`<h2>`) element | `{}`\n`--paper-dialog-button-color` | Button area foreground color | `--default-primary-color`\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport '@polymer/paper-styles/default-theme.js';\nimport '@polymer/paper-styles/typography.js';\nimport '@polymer/paper-styles/shadow.js';\nconst $_documentContainer = document.createElement('template');\n$_documentContainer.setAttribute('style', 'display: none;');\n\n$_documentContainer.innerHTML = `<dom-module id=\"paper-dialog-shared-styles\">\n  <template>\n    <style>\n      :host {\n        display: block;\n        margin: 24px 40px;\n\n        background: var(--paper-dialog-background-color, var(--primary-background-color));\n        color: var(--paper-dialog-color, var(--primary-text-color));\n\n        @apply --paper-font-body1;\n        @apply --shadow-elevation-16dp;\n        @apply --paper-dialog;\n      }\n\n      :host > ::slotted(*) {\n        margin-top: 20px;\n        padding: 0 24px;\n      }\n\n      :host > ::slotted(.no-padding) {\n        padding: 0;\n      }\n\n      \n      :host > ::slotted(*:first-child) {\n        margin-top: 24px;\n      }\n\n      :host > ::slotted(*:last-child) {\n        margin-bottom: 24px;\n      }\n\n      /* In 1.x, this selector was \\`:host > ::content h2\\`. In 2.x <slot> allows\n      to select direct children only, which increases the weight of this\n      selector, so we have to re-define first-child/last-child margins below. */\n      :host > ::slotted(h2) {\n        position: relative;\n        margin: 0;\n\n        @apply --paper-font-title;\n        @apply --paper-dialog-title;\n      }\n\n      /* Apply mixin again, in case it sets margin-top. */\n      :host > ::slotted(h2:first-child) {\n        margin-top: 24px;\n        @apply --paper-dialog-title;\n      }\n\n      /* Apply mixin again, in case it sets margin-bottom. */\n      :host > ::slotted(h2:last-child) {\n        margin-bottom: 24px;\n        @apply --paper-dialog-title;\n      }\n\n      :host > ::slotted(.paper-dialog-buttons),\n      :host > ::slotted(.buttons) {\n        position: relative;\n        padding: 8px 8px 8px 24px;\n        margin: 0;\n\n        color: var(--paper-dialog-button-color, var(--primary-color));\n\n        @apply --layout-horizontal;\n        @apply --layout-end-justified;\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/paper-dialog-behavior/paper-dialog-shared-styles.js';\n\nimport {NeonAnimationRunnerBehavior} from '@polymer/neon-animation/neon-animation-runner-behavior.js';\nimport {PaperDialogBehavior} from '@polymer/paper-dialog-behavior/paper-dialog-behavior.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\n/**\nMaterial design:\n[Dialogs](https://www.google.com/design/spec/components/dialogs.html)\n\n`<paper-dialog>` is a dialog with Material Design styling and optional\nanimations when it is opened or closed. It provides styles for a header, content\narea, and an action area for buttons. You can use the\n`<paper-dialog-scrollable>` element (in its own repository) if you need a\nscrolling content area. To autofocus a specific child element after opening the\ndialog, give it the `autofocus` attribute. See `Polymer.PaperDialogBehavior` and\n`Polymer.IronOverlayBehavior` for specifics.\n\nFor example, the following code implements a dialog with a header, scrolling\ncontent area and buttons. Focus will be given to the `dialog-confirm` button\nwhen the dialog is opened.\n\n    <paper-dialog>\n      <h2>Header</h2>\n      <paper-dialog-scrollable>\n        Lorem ipsum...\n      </paper-dialog-scrollable>\n      <div class=\"buttons\">\n        <paper-button dialog-dismiss>Cancel</paper-button>\n        <paper-button dialog-confirm autofocus>Accept</paper-button>\n      </div>\n    </paper-dialog>\n\n### Styling\n\nSee the docs for `Polymer.PaperDialogBehavior` for the custom properties\navailable for styling this element.\n\n### Animations\n\nSet the `entry-animation` and/or `exit-animation` attributes to add an animation\nwhen the dialog is opened or closed. See the documentation in\n[PolymerElements/neon-animation](https://github.com/PolymerElements/neon-animation)\nfor more info.\n\nFor example:\n\n    <script type=\"module\">\n      import '@polymer/neon-animation/animations/fade-out-animation.js';\n      import '@polymer/neon-animation/animations/scale-up-animation.js';\n    </script>\n\n    <paper-dialog entry-animation=\"scale-up-animation\"\n                  exit-animation=\"fade-out-animation\">\n      <h2>Header</h2>\n      <div>Dialog body</div>\n    </paper-dialog>\n\n### Accessibility\n\nSee the docs for `Polymer.PaperDialogBehavior` for accessibility features\nimplemented by this element.\n\n@group Paper Elements\n@element paper-dialog\n@hero hero.svg\n@demo demo/index.html\n*/\nPolymer({\n  _template: html`\n    <style include=\"paper-dialog-shared-styles\"></style>\n    <slot></slot>\n`,\n\n  is: 'paper-dialog',\n  behaviors: [PaperDialogBehavior, NeonAnimationRunnerBehavior],\n  listeners: {'neon-animation-finish': '_onNeonAnimationFinish'},\n\n  _renderOpened: function() {\n    this.cancelAnimation();\n    this.playAnimation('entry');\n  },\n\n  _renderClosed: function() {\n    this.cancelAnimation();\n    this.playAnimation('exit');\n  },\n\n  _onNeonAnimationFinish: function() {\n    if (this.opened) {\n      this._finishRenderOpened();\n    } else {\n      this._finishRenderClosed();\n    }\n  }\n});\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport '@polymer/paper-styles/default-theme.js';\n\nimport {PaperDialogBehaviorImpl} from '@polymer/paper-dialog-behavior/paper-dialog-behavior.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\n/**\nMaterial design:\n[Dialogs](https://www.google.com/design/spec/components/dialogs.html)\n\n`paper-dialog-scrollable` implements a scrolling area used in a Material Design\ndialog. It shows a divider at the top and/or bottom indicating more content,\ndepending on scroll position. Use this together with elements implementing\n`Polymer.PaperDialogBehavior`.\n\n    <paper-dialog-impl>\n      <h2>Header</h2>\n      <paper-dialog-scrollable>\n        Lorem ipsum...\n      </paper-dialog-scrollable>\n      <div class=\"buttons\">\n        <paper-button>OK</paper-button>\n      </div>\n    </paper-dialog-impl>\n\nIt shows a top divider after scrolling if it is not the first child in its\nparent container, indicating there is more content above. It shows a bottom\ndivider if it is scrollable and it is not the last child in its parent\ncontainer, indicating there is more content below. The bottom divider is hidden\nif it is scrolled to the bottom.\n\nIf `paper-dialog-scrollable` is not a direct child of the element implementing\n`Polymer.PaperDialogBehavior`, remember to set the `dialogElement`:\n\n    <paper-dialog-impl id=\"myDialog\">\n      <h2>Header</h2>\n      <div class=\"my-content-wrapper\">\n        <h4>Sub-header</h4>\n        <paper-dialog-scrollable>\n          Lorem ipsum...\n        </paper-dialog-scrollable>\n      </div>\n      <div class=\"buttons\">\n        <paper-button>OK</paper-button>\n      </div>\n    </paper-dialog-impl>\n\n    <script>\n      var scrollable =\nPolymer.dom(myDialog).querySelector('paper-dialog-scrollable');\n      scrollable.dialogElement = myDialog;\n    </script>\n\n### Styling\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-dialog-scrollable` | Mixin for the scrollable content | {}\n\n@group Paper Elements\n@element paper-dialog-scrollable\n@demo demo/index.html\n@hero hero.svg\n*/\nPolymer({\n  _template: html`\n    <style>\n\n      :host {\n        display: block;\n        @apply --layout-relative;\n      }\n\n      :host(.is-scrolled:not(:first-child))::before {\n        content: '';\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        height: 1px;\n        background: var(--divider-color);\n      }\n\n      :host(.can-scroll:not(.scrolled-to-bottom):not(:last-child))::after {\n        content: '';\n        position: absolute;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        height: 1px;\n        background: var(--divider-color);\n      }\n\n      .scrollable {\n        padding: 0 24px;\n\n        @apply --layout-scroll;\n        @apply --paper-dialog-scrollable;\n      }\n\n      .fit {\n        @apply --layout-fit;\n      }\n    </style>\n\n    <div id=\"scrollable\" class=\"scrollable\" on-scroll=\"updateScrollState\">\n      <slot></slot>\n    </div>\n`,\n\n  is: 'paper-dialog-scrollable',\n\n  properties: {\n\n    /**\n     * The dialog element that implements `Polymer.PaperDialogBehavior`\n     * containing this element.\n     * @type {?Node}\n     */\n    dialogElement: {type: Object}\n\n  },\n\n  /**\n   * Returns the scrolling element.\n   */\n  get scrollTarget() {\n    return this.$.scrollable;\n  },\n\n  ready: function() {\n    this._ensureTarget();\n    this.classList.add('no-padding');\n  },\n\n  attached: function() {\n    this._ensureTarget();\n    requestAnimationFrame(this.updateScrollState.bind(this));\n  },\n\n  updateScrollState: function() {\n    this.toggleClass('is-scrolled', this.scrollTarget.scrollTop > 0);\n    this.toggleClass(\n        'can-scroll',\n        this.scrollTarget.offsetHeight < this.scrollTarget.scrollHeight);\n    this.toggleClass(\n        'scrolled-to-bottom',\n        this.scrollTarget.scrollTop + this.scrollTarget.offsetHeight >=\n            this.scrollTarget.scrollHeight);\n  },\n\n  _ensureTarget: function() {\n    // Read parentElement instead of parentNode in order to skip shadowRoots.\n    this.dialogElement = this.dialogElement || this.parentElement;\n    // Check if dialog implements paper-dialog-behavior. If not, fit\n    // scrollTarget to host.\n    if (this.dialogElement && this.dialogElement.behaviors &&\n        this.dialogElement.behaviors.indexOf(PaperDialogBehaviorImpl) >= 0) {\n      this.dialogElement.sizingTarget = this.scrollTarget;\n      this.scrollTarget.classList.remove('fit');\n    } else if (this.dialogElement) {\n      this.scrollTarget.classList.add('fit');\n    }\n  }\n});\n","import '@polymer/paper-button/paper-button.js';\nimport '@polymer/paper-dialog-scrollable/paper-dialog-scrollable.js';\nimport '@polymer/paper-dialog/paper-dialog.js';\nimport '@polymer/paper-spinner/paper-spinner.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport '../../../components/ha-form.js';\nimport '../../../components/ha-markdown.js';\nimport '../../../resources/ha-style.js';\n\nimport EventsMixin from '../../../mixins/events-mixin.js';\nimport LocalizeMixin from '../../../mixins/localize-mixin.js';\n\nlet instance = 0;\n\n/*\n * @appliesMixin LocalizeMixin\n * @appliesMixin EventsMixin\n */\nclass HaConfigFlow extends\n  LocalizeMixin(EventsMixin(PolymerElement)) {\n  static get template() {\n    return html`\n    <style include=\"ha-style-dialog\">\n      .error {\n        color: red;\n      }\n      paper-dialog {\n        max-width: 500px;\n      }\n      ha-markdown img:first-child:last-child {\n        display: block;\n        margin: 0 auto;\n      }\n      .init-spinner {\n        padding: 10px 100px 34px;\n        text-align: center;\n      }\n      .submit-spinner {\n        margin-right: 16px;\n      }\n    </style>\n    <paper-dialog id=\"dialog\" with-backdrop=\"\" opened=\"{{_opened}}\" on-opened-changed=\"_openedChanged\">\n      <h2>\n        <template is=\"dom-if\" if=\"[[_equals(_step.type, 'abort')]]\">\n          Aborted\n        </template>\n        <template is=\"dom-if\" if=\"[[_equals(_step.type, 'create_entry')]]\">\n          Success!\n        </template>\n        <template is=\"dom-if\" if=\"[[_equals(_step.type, 'form')]]\">\n          [[_computeStepTitle(localize, _step)]]\n        </template>\n      </h2>\n      <paper-dialog-scrollable>\n        <template is=\"dom-if\" if=\"[[_errorMsg]]\">\n          <div class='error'>[[_errorMsg]]</div>\n        </template>\n        <template is=\"dom-if\" if=\"[[!_step]]\">\n          <div class='init-spinner'><paper-spinner active></paper-spinner></div>\n        </template>\n        <template is=\"dom-if\" if=\"[[_step]]\">\n          <template is=\"dom-if\" if=\"[[_equals(_step.type, 'abort')]]\">\n            <ha-markdown content=\"[[_computeStepAbortedReason(localize, _step)]]\"></ha-markdown>\n          </template>\n\n          <template is=\"dom-if\" if=\"[[_equals(_step.type, 'create_entry')]]\">\n            <p>Created config for [[_step.title]]</p>\n          </template>\n\n          <template is=\"dom-if\" if=\"[[_equals(_step.type, 'form')]]\">\n            <template is=\"dom-if\" if=\"[[_computeStepDescription(localize, _step)]]\">\n              <ha-markdown content=\"[[_computeStepDescription(localize, _step)]]\" allow-svg></ha-markdown>\n            </template>\n\n            <ha-form\n              data=\"{{_stepData}}\"\n              schema=\"[[_step.data_schema]]\"\n              error=\"[[_step.errors]]\"\n              compute-label=\"[[_computeLabelCallback(localize, _step)]]\"\n              compute-error=\"[[_computeErrorCallback(localize, _step)]]\"\n            ></ha-form>\n          </template>\n        </template>\n      </paper-dialog-scrollable>\n      <div class=\"buttons\">\n        <template is=\"dom-if\" if=\"[[_equals(_step.type, 'abort')]]\">\n          <paper-button on-click=\"_flowDone\">Close</paper-button>\n        </template>\n        <template is=\"dom-if\" if=\"[[_equals(_step.type, 'create_entry')]]\">\n          <paper-button on-click=\"_flowDone\">Close</paper-button>\n        </template>\n        <template is=\"dom-if\" if=\"[[_equals(_step.type, 'form')]]\">\n          <template is=\"dom-if\" if=\"[[_loading]]\">\n            <div class='submit-spinner'><paper-spinner active></paper-spinner></div>\n          </template>\n          <template is=\"dom-if\" if=\"[[!_loading]]\">\n            <paper-button on-click=\"_submitStep\">Submit</paper-button>\n          </template>\n        </template>\n      </div>\n    </paper-dialog>\n`;\n  }\n\n  static get properties() {\n    return {\n      _hass: Object,\n      _dialogClosedCallback: Function,\n      _instance: Number,\n\n      _loading: {\n        type: Boolean,\n        value: false,\n      },\n\n      // Error message when can't talk to server etc\n      _errorMsg: String,\n\n      _opened: {\n        type: Boolean,\n        value: false,\n      },\n\n      _step: {\n        type: Object,\n        value: null,\n      },\n\n      /*\n       * Store user entered data.\n       */\n      _stepData: Object,\n    };\n  }\n\n  ready() {\n    super.ready();\n    this.addEventListener('keypress', (ev) => {\n      if (ev.keyCode === 13) {\n        this._submitStep();\n      }\n    });\n  }\n\n  showDialog({ hass, continueFlowId, newFlowForHandler, dialogClosedCallback }) {\n    this.hass = hass;\n    this._instance = instance++;\n    this._dialogClosedCallback = dialogClosedCallback;\n    this._createdFromHandler = !!newFlowForHandler;\n    this._loading = true;\n    this._opened = true;\n\n    const fetchStep = continueFlowId ?\n      this.hass.callApi('get', `config/config_entries/flow/${continueFlowId}`) :\n      this.hass.callApi('post', 'config/config_entries/flow', { handler: newFlowForHandler });\n\n    const curInstance = this._instance;\n\n    fetchStep.then((step) => {\n      if (curInstance !== this._instance) return;\n\n      this._processStep(step);\n      this._loading = false;\n      // When the flow changes, center the dialog.\n      // Don't do it on each step or else the dialog keeps bouncing.\n      setTimeout(() => this.$.dialog.center(), 0);\n    });\n  }\n\n  _submitStep() {\n    this._loading = true;\n    this._errorMsg = null;\n\n    const curInstance = this._instance;\n\n    this.hass.callApi('post', `config/config_entries/flow/${this._step.flow_id}`, this._stepData)\n      .then(\n        (step) => {\n          if (curInstance !== this._instance) return;\n\n          this._processStep(step);\n          this._loading = false;\n        },\n        (err) => {\n          this._errorMsg = (err && err.body && err.body.message) || 'Unknown error occurred';\n          this._loading = false;\n        }\n      );\n  }\n\n  _processStep(step) {\n    if (!step.errors) step.errors = {};\n    this._step = step;\n    // We got a new form if there are no errors.\n    if (Object.keys(step.errors).length === 0) {\n      this._stepData = {};\n    }\n  }\n\n  _flowDone() {\n    this._opened = false;\n    const flowFinished = this._step && ['success', 'abort'].includes(this._step.type);\n\n    if (this._step && !flowFinished && this._createdFromHandler) {\n      this.hass.callApi('delete', `config/config_entries/flow/${this._step.flow_id}`);\n    }\n\n    this._dialogClosedCallback({\n      flowFinished,\n    });\n\n    this._errorMsg = null;\n    this._step = null;\n    this._stepData = {};\n    this._dialogClosedCallback = null;\n  }\n\n  _equals(a, b) {\n    return a === b;\n  }\n\n  _openedChanged(ev) {\n    // Closed dialog by clicking on the overlay\n    if (this._step && !ev.detail.value) {\n      this._flowDone();\n    }\n  }\n\n  _computeStepAbortedReason(localize, step) {\n    return localize(`component.${step.handler}.config.abort.${step.reason}`);\n  }\n\n  _computeStepTitle(localize, step) {\n    return localize(`component.${step.handler}.config.step.${step.step_id}.title`);\n  }\n\n  _computeStepDescription(localize, step) {\n    const args = [`component.${step.handler}.config.step.${step.step_id}.description`];\n    const placeholders = step.description_placeholders || {};\n    Object.keys(placeholders).forEach((key) => {\n      args.push(key);\n      args.push(placeholders[key]);\n    });\n    return localize(...args);\n  }\n\n  _computeLabelCallback(localize, step) {\n    // Returns a callback for ha-form to calculate labels per schema object\n    return schema => localize(`component.${step.handler}.config.step.${step.step_id}.data.${schema.name}`);\n  }\n\n  _computeErrorCallback(localize, step) {\n    // Returns a callback for ha-form to calculate error messages\n    return error => localize(`component.${step.handler}.config.error.${error}`);\n  }\n}\n\ncustomElements.define('ha-config-flow', HaConfigFlow);\n"],"sourceRoot":""}