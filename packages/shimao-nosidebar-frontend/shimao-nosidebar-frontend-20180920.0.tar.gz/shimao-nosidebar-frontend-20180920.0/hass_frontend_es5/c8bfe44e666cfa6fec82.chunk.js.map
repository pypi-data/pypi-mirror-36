{"version":3,"sources":["webpack:///./src/util/custom-panel/load-custom-panel.js","webpack:///./src/util/custom-panel/create-custom-panel-element.js","webpack:///./src/util/custom-panel/set-custom-panel-properties.js","webpack:///./src/panels/custom/ha-panel-custom.js","webpack:///./src/common/dom/load_resource.js"],"names":["JS_CACHE","loadCustomPanel","panelConfig","html_url","toLoad","__webpack_require__","e","then","bind","embed_iframe","push","Promise","all","_ref","_slicedToArray","importHrefPromise","js_url","Object","_common_dom_load_resource_js__WEBPACK_IMPORTED_MODULE_0__","b","module_url","c","reject","146","module","__webpack_exports__","createCustomPanelElement","tagName","name","document","createElement","d","setCustomPanelProperties","root","properties","setProperties","keys","forEach","key","HaPanelCustom","this","_this","__proto__","getPrototypeOf","call","_setProperties","_mixins_navigate_mixin_js__WEBPACK_IMPORTED_MODULE_2__","_mixins_events_mixin_js__WEBPACK_IMPORTED_MODULE_1__","_polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_0__","_createClass","get","hass","narrow","Boolean","showMenu","route","panel","type","observer","value","_this2","window","customPanel","lastChild","remove","config","_panel_custom","tempA","href","trust_external","location","hostname","includes","confirm","innerHTML","iframeDoc","querySelector","contentWindow","open","write","customPanelJS","close","_util_custom_panel_load_custom_panel_js__WEBPACK_IMPORTED_MODULE_3__","a","element","_util_custom_panel_create_custom_panel_element_js__WEBPACK_IMPORTED_MODULE_4__","props","_util_custom_panel_set_custom_panel_properties_js__WEBPACK_IMPORTED_MODULE_5__","appendChild","alert","prototype","initialize","customElements","define","_load","tag","url","resolve","attr","parent","onload","onerror","async","rel","loadCSS","loadJS","loadModule"],"mappings":"qhBAGMA,KAES,SAASC,EAAgBC,GACtC,GAAIA,EAAYC,SAAU,CACxB,IAAMC,GACJC,EAAAC,EAAA,IAAAC,KAAAF,EAAAG,KAAA,YAOF,OAJKN,EAAYO,cACfL,EAAOM,KAAKC,QAAAC,KAAAP,EAAAC,EAAA,IAAAD,EAAAC,EAAA,MAAAC,KAAAF,EAAAG,KAAA,YAGPG,QAAQC,IAAIR,GAAQG,KAAK,SAAAM,GAAA,SAAAC,EAAAD,EAAA,MAAIE,mBAChBb,EAAYC,YAC3B,OAAID,EAAYc,QACfd,EAAYc,UAAUhB,IAC1BA,EAASE,EAAYc,QAAUC,OAAAC,EAAAC,EAAAF,CAAOf,EAAYc,SAE7ChB,EAASE,EAAYc,SACnBd,EAAYkB,WACdH,OAAAC,EAAAG,EAAAJ,CAAWf,EAAYkB,YAEzBT,QAAQW,OAAO,yCAAAC,IAAA,SAAAC,EAAAC,EAAApB,GAAA,aCzBT,SAASqB,EAAyBxB,GAE/C,IAAMyB,EAAU,aAAczB,EAAd,YAAwCA,EAAY0B,KAAS1B,EAAY0B,KACzF,OAAOC,SAASC,cAAcH,GAHhCtB,EAAA0B,EAAAN,EAAA,sBAAAC,sCCAe,SAASM,EAAyBC,EAAMC,GACjD,kBAAmBD,EACrBA,EAAKE,cAAcD,GAEnBjB,OAAOmB,KAAKF,GAAYG,QAAQ,SAACC,GAC/BL,EAAKK,GAAOJ,EAAWI,KAL7BjC,EAAA0B,EAAAN,EAAA,sBAAAO,wVCaMO,cAoBJ,SAAAA,qCAAcA,GAAdA,0DAAcC,MAAA,IAAAC,oKAAAD,MAAAD,EAAAG,WAAAzB,OAAA0B,eAAAJ,IAAAK,KAAAJ,OAAA,OAEZC,EAAKI,eAAiB,KAFVJ,qUApBYxB,OAAA6B,EAAA,EAAA7B,CAAcA,OAAA8B,EAAA,EAAA9B,CAAY+B,EAAA,KAAAC,EAAAV,EAAA,OAAAD,IAAA,aAAAY,IAAA,WAElD,OACEC,KAAMlC,OACNmC,OAAQC,QACRC,SAAUD,QACVE,MAAOtC,OACPuC,OACEC,KAAMxC,OACNyC,SAAU,qBAAApB,IAAA,YAAAY,IAAA,WAMd,OACE,mDAAAD,EAAAV,IAAAD,IAAA,gBAAAqB,MAAA,SASUH,GAAO,IAAAI,EAAApB,KAInB,WAFOqB,OAAOC,YACdtB,KAAKK,eAAiB,KACfL,KAAKuB,WACVvB,KAAKwB,OAAOxB,KAAKuB,WAGnB,IAAME,EAAST,EAAMS,OAAOC,cAEtBC,EAAQtC,SAASC,cAAc,KAGrC,GAFAqC,EAAMC,KAAOH,EAAO9D,UAAY8D,EAAOjD,QAAUiD,EAAO7C,WAEnD6C,EAAOI,iBAAoB,YAAa,YAAaC,SAASC,UAAUC,SAASL,EAAMI,WACrFE,4CAA4CR,EAAOrC,KAAnD,SAAgEuC,EAAMC,KAAtE,gIASP,GAAKH,EAAOxD,aAAZ,CAsBAoD,OAAOC,YAActB,KACrBA,KAAKkC,UAAL,8KAWA,IAAMC,EAAYnC,KAAKoC,cAAc,UAAUC,cAAchD,SAC7D8C,EAAUG,OACVH,EAAUI,MAAV,gBAAgClB,OAAOmB,cAAvC,gBACAL,EAAUM,aApCRhE,OAAAiE,EAAAC,EAAAlE,CAAgBgD,GACb1D,KACC,WACE,IAAM6E,EAAUnE,OAAAoE,EAAAF,EAAAlE,CAAyBgD,GACzCL,EAAKf,eAAiB,SAAAyC,GAAA,OAASrE,OAAAsE,EAAAJ,EAAAlE,CAAyBmE,EAASE,IACjErE,OAAAsE,EAAAJ,EAAAlE,CAAyBmE,GACvB5B,QACAL,KAAMS,EAAKT,KACXC,OAAQQ,EAAKR,OACbE,SAAUM,EAAKN,SACfC,MAAOK,EAAKL,QAEdK,EAAK4B,YAAYJ,IAEnB,WACEK,0CAA0CtB,EAAMC,mTAyBxD7B,EAAAmD,UAAAhD,WAAAzB,OAAA0B,eAAAJ,EAAAmD,WAAA,uBAAAlD,MAAAI,KAAAJ,aACOqB,OAAOC,iDAGHX,EAAMC,EAAQE,EAAUC,GAC9Bf,KAAKK,gBACVL,KAAKK,gBAAiBM,OAAMC,SAAQE,WAAUC,iDAGjCoC,EAAYxD,GACzBwD,EAAWnD,KAAKgB,OACdL,KAAMX,KAAKW,KACXC,OAAQZ,KAAKY,OACbE,SAAUd,KAAKc,SACfC,MAAOf,KAAKe,QAEdf,KAAKK,eAAiBV,QAzGpBI,GA6GNqD,eAAeC,OAAO,kBAAmBtD,oCCvHzC,SAASuD,EAAMC,EAAKC,EAAKvC,GAEvB,OAAO,IAAI9C,QAAQ,SAAUsF,EAAS3E,GACpC,IAAM8D,EAAUvD,SAASC,cAAciE,GACnCG,EAAO,MACPC,EAAS,OAOb,OAJAf,EAAQgB,OAAS,kBAAMH,EAAQD,IAC/BZ,EAAQiB,QAAU,kBAAM/E,EAAO0E,IAGvBD,GACN,IAAK,SACHX,EAAQkB,SACJ7C,IACF2B,EAAQ3B,KAAOA,GAEjB,MACF,IAAK,OACH2B,EAAQ3B,KAAO,WACf2B,EAAQmB,IAAM,aACdL,EAAO,OACPC,EAAS,OAIbf,EAAQc,GAAQF,EAChBnE,SAASsE,GAAQX,YAAYJ,KA/BjC/E,EAAA0B,EAAAN,EAAA,sBAAA+E,IAAAnG,EAAA0B,EAAAN,EAAA,sBAAAgF,IAAApG,EAAA0B,EAAAN,EAAA,sBAAAiF,IAmCO,IAAMF,EAAU,SAAAR,GAAA,OAAOF,EAAM,OAAQE,IAC/BS,EAAS,SAAAT,GAAA,OAAOF,EAAM,SAAUE,IAEhCU,EAAa,SAAAV,GAAA,OAAOF,EAAM,SAAUE,EAAK","file":"c8bfe44e666cfa6fec82.chunk.js","sourcesContent":["import { loadJS, loadModule } from '../../common/dom/load_resource.js';\n\n// Make sure we only import every JS-based panel once (HTML import has this built-in)\nconst JS_CACHE = {};\n\nexport default function loadCustomPanel(panelConfig) {\n  if (panelConfig.html_url) {\n    const toLoad = [\n      import(/* webpackChunkName: \"import-href-polyfill\" */ '../../resources/html-import/import-href.js'),\n    ];\n\n    if (!panelConfig.embed_iframe) {\n      toLoad.push(import(/* webpackChunkName: \"legacy-support\" */ '../legacy-support.js'));\n    }\n\n    return Promise.all(toLoad).then(([{ importHrefPromise }]) =>\n      importHrefPromise(panelConfig.html_url));\n  } else if (panelConfig.js_url) {\n    if (!(panelConfig.js_url in JS_CACHE)) {\n      JS_CACHE[panelConfig.js_url] = loadJS(panelConfig.js_url);\n    }\n    return JS_CACHE[panelConfig.js_url];\n  } else if (panelConfig.module_url) {\n    return loadModule(panelConfig.module_url);\n  }\n  return Promise.reject('No valid url found in panel config.');\n}\n","export default function createCustomPanelElement(panelConfig) {\n  // Legacy support. Custom panels used to have to define element ha-panel-{name}\n  const tagName = 'html_url' in panelConfig ? `ha-panel-${panelConfig.name}` : panelConfig.name;\n  return document.createElement(tagName);\n}\n","export default function setCustomPanelProperties(root, properties) {\n  if ('setProperties' in root) {\n    root.setProperties(properties);\n  } else {\n    Object.keys(properties).forEach((key) => {\n      root[key] = properties[key];\n    });\n  }\n}\n","import { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport EventsMixin from '../../mixins/events-mixin.js';\nimport NavigateMixin from '../../mixins/navigate-mixin.js';\nimport loadCustomPanel from '../../util/custom-panel/load-custom-panel.js';\nimport createCustomPanelElement from '../../util/custom-panel/create-custom-panel-element.js';\nimport setCustomPanelProperties from '../../util/custom-panel/set-custom-panel-properties.js';\n\n/*\n * Mixins are used by ifram to communicate with main frontend.\n * @appliesMixin EventsMixin\n * @appliesMixin NavigateMixin\n */\nclass HaPanelCustom extends NavigateMixin(EventsMixin(PolymerElement)) {\n  static get properties() {\n    return {\n      hass: Object,\n      narrow: Boolean,\n      showMenu: Boolean,\n      route: Object,\n      panel: {\n        type: Object,\n        observer: '_panelChanged',\n      }\n    };\n  }\n\n  static get observers() {\n    return [\n      '_dataChanged(hass, narrow, showMenu, route)'\n    ];\n  }\n\n  constructor() {\n    super();\n    this._setProperties = null;\n  }\n\n  _panelChanged(panel) {\n    // Clean up\n    delete window.customPanel;\n    this._setProperties = null;\n    while (this.lastChild) {\n      this.remove(this.lastChild);\n    }\n\n    const config = panel.config._panel_custom;\n\n    const tempA = document.createElement('a');\n    tempA.href = config.html_url || config.js_url || config.module_url;\n\n    if (!config.trust_external && !['localhost', '127.0.0.1', location.hostname].includes(tempA.hostname)) {\n      if (!confirm(`Do you trust the external panel \"${config.name}\" at \"${tempA.href}\"?\n\nIt will have access to all data in Home Assistant.\n\n(Check docs for the panel_custom component to hide this message)`)) {\n        return;\n      }\n    }\n\n    if (!config.embed_iframe) {\n      loadCustomPanel(config)\n        .then(\n          () => {\n            const element = createCustomPanelElement(config);\n            this._setProperties = props => setCustomPanelProperties(element, props);\n            setCustomPanelProperties(element, {\n              panel,\n              hass: this.hass,\n              narrow: this.narrow,\n              showMenu: this.showMenu,\n              route: this.route,\n            });\n            this.appendChild(element);\n          },\n          () => {\n            alert(`Unable to load custom panel from ${tempA.href}`);\n          }\n        );\n      return;\n    }\n\n    window.customPanel = this;\n    this.innerHTML = `\n    <style>\n      iframe {\n        border: 0;\n        width: 100%;\n        height: 100%;\n        display: block;\n      }\n    </style>\n    <iframe></iframe>\n    `;\n    const iframeDoc = this.querySelector('iframe').contentWindow.document;\n    iframeDoc.open();\n    iframeDoc.write(`<script src='${window.customPanelJS}'></script>`);\n    iframeDoc.close();\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    delete window.customPanel;\n  }\n\n  _dataChanged(hass, narrow, showMenu, route) {\n    if (!this._setProperties) return;\n    this._setProperties({ hass, narrow, showMenu, route });\n  }\n\n  registerIframe(initialize, setProperties) {\n    initialize(this.panel, {\n      hass: this.hass,\n      narrow: this.narrow,\n      showMenu: this.showMenu,\n      route: this.route,\n    });\n    this._setProperties = setProperties;\n  }\n}\n\ncustomElements.define('ha-panel-custom', HaPanelCustom);\n","// Load a resource and get a promise when loading done.\n// From: https://davidwalsh.name/javascript-loader\n\nfunction _load(tag, url, type) {\n  // This promise will be used by Promise.all to determine success or failure\n  return new Promise(function (resolve, reject) {\n    const element = document.createElement(tag);\n    let attr = 'src';\n    let parent = 'body';\n\n    // Important success and error for the promise\n    element.onload = () => resolve(url);\n    element.onerror = () => reject(url);\n\n    // Need to set different attributes depending on tag type\n    switch (tag) {\n      case 'script':\n        element.async = true;\n        if (type) {\n          element.type = type;\n        }\n        break;\n      case 'link':\n        element.type = 'text/css';\n        element.rel = 'stylesheet';\n        attr = 'href';\n        parent = 'head';\n    }\n\n    // Inject into document to kick off loading\n    element[attr] = url;\n    document[parent].appendChild(element);\n  });\n}\n\nexport const loadCSS = url => _load('link', url);\nexport const loadJS = url => _load('script', url);\nexport const loadImg = url => _load('img', url);\nexport const loadModule = url => _load('script', url, 'module');\n"],"sourceRoot":""}