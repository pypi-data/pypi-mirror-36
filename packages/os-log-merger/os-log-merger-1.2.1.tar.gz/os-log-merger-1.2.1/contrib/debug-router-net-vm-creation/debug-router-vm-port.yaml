---
- name: Cleanup old resources
  hosts: controller
  tasks:
    - name: cleanup old vms
      shell: |
        source ~/keystonerc_admin
        nova delete vm{{ item }} ; exit 0

      with_items:
        - "{{ networks }}"

    - name: cleanup old networks
      shell: |
        source ~/keystonerc_admin
        neutron router-interface-delete router-{{ item }} sub{{ item }}
        neutron router-delete router-{{ item }}
        neutron subnet-delete sub{{ item }}
        neutron net-delete {{ item }}

        exit 0
      with_items:
        - "{{ networks }}"

    - name: wait for proper cleanup
      shell: |
              source ~/keystonerc_admin
              while nova list | grep ACTIVE;
              do
                  sleep 1
              done
              while nova list | grep DELETED;
              do
                    sleep 1
              done
              nova list
              sleep 15

      async: 180

- name: Configure neutron controllers
  hosts: controller
  tasks:
    - name: setup quotas
      shell: |
        source ~/keystonerc_admin
        neutron quota-update --network 100 --router 100 --subnet 100
    
    - name: set neutron & nova for debug, clear logs
      shell: |
        openstack-config --set /etc/neutron/neutron.conf DEFAULT l3_ha True
        openstack-config --set /etc/neutron/neutron.conf DEFAULT min_l3_agents_per_router 2
        openstack-config --set /etc/neutron/neutron.conf DEFAULT debug True
        rm -f /var/log/neutron/server.log
        rm -f /var/log/nova/nova-api.log
    - service: name=neutron-server state=restarted
    - service: name=openstack-nova-api state=restarted


- name: Configure neutron networkers
  hosts: networker
  tasks:
    - name: set neutron compute / network nodes agent for debug, clear logs
      shell: |
        openstack-config --set /etc/neutron/neutron.conf DEFAULT debug True
        rm -f /var/log/neutron/l3-agent.log
        rm -f /var/log/neutron/metadata-agent.log
        rm -f /var/log/neutron/dhcp-agent.log
        rm -f /var/log/neutron/openvswitch-agent.log
        rm -f /var/log/nova/nova-compute.log

    - service: name=neutron-l3-agent state=restarted
    - service: name=neutron-metadata-agent state=restarted
    - service: name=neutron-dhcp-agent state=restarted
    - service: name=neutron-openvswitch-agent state=restarted
    - service: name=openstack-nova-compute state=restarted


- name: Start ARP logger
  hosts: all
  tasks:
    - name: ensure tcpdump
      yum: name=tcpdump state=present

    - name: Kill old probes
      shell: |
        killall arpdumper.sh
        killall tcpdump
        exit 0

    - name: Copy scripts.
      copy: src=scripts/{{ item }} dest=/tmp/{{ item }} mode=755
      with_items:
        - arpdumper.sh

    - name: Start arpdumper.
      shell: |
        rm -f /var/log/neutron/arpdumper.log
        nohup /tmp/arpdumper.sh > /var/log/neutron/arpdumper.log &

- name: The actual workload
  hosts: controller
  tasks:
    - name: create a bunch of networks and vms
      shell: |
        source ~/keystonerc_admin && \
        neutron net-create {{ item }} && \
        neutron subnet-create {{ item }} 10.0.0.0/24 --name sub{{ item }} && \
        neutron router-create router-{{ item }} && \
        neutron router-gateway-set router-{{ item }} public && \
        neutron router-interface-add router-{{ item }} sub{{ item }} && \
        nova boot --image cirros --flavor m1.tiny \
                  --nic net-id=`neutron net-list \
                  --user-data instance-ping.sh | grep {{ item }} | cut '-d '  -f2` vm{{ item }}
      with_items:
        - "{{ networks }}"

    - name: wait for vms to be up
      shell: |
        source ~/keystonerc_admin
        while nova list | grep BUILD;
        do
            sleep 1
        done
        sleep 20
      async: 180

- name: Fetch logs from hosts
  hosts: all
  tasks:
    - name: create local log dir
      local_action: command mkdir -p logs/{{ ansible_hostname }}/var/log/{{ item }}
      with_items:
        - nova
        - neutron
    - name: Fetch logs
      synchronize: mode=pull src=/var/log/{{ item }}/ dest=logs/{{ ansible_hostname }}/var/log/{{ item }}/ delete=yes
      with_items:
        - nova
        - neutron

- name: Final merge
  hosts: controller
  tasks:
    - name: merge logs
      local_action: shell
        oslogmerger logs/controller1/var/log/nova/nova-api.log:NOVAAPI \
                    logs/controller1/var/log/nova/nova-compute.log:COMPUTE1 \
                    logs/controller1/var/log/neutron/server.log:NEUTRONSRV \
                    logs/controller1/var/log/neutron/openvswitch-agent.log:OVS1 \
                    logs/controller1/var/log/neutron/arpdumper.log:ARP1 \
                    logs/controller1/var/log/neutron/l3-agent.log:L3_1 \
                    logs/controller1/var/log/neutron/dhcp-agent.log:DHCP1 \
                    logs/controller1/var/log/neutron/metadata-agent.log:META1 \
                    \
                    logs/networker2/var/log/nova/nova-compute.log:COMPUTE2 \
                    logs/networker2/var/log/neutron/openvswitch-agent.log:OVS2 \
                    logs/networker2/var/log/neutron/arpdumper.log:ARP2 \
                    logs/networker2/var/log/neutron/l3-agent.log:L3_2 \
                    logs/networker2/var/log/neutron/dhcp-agent.log:DHCP2 \
                    logs/networker2/var/log/neutron/metadata-agent.log:META2 \
                    \
                    logs/networker3/var/log/nova/nova-compute.log:COMPUTE3 \
                    logs/networker3/var/log/neutron/openvswitch-agent.log:OVS3 \
                    logs/networker3/var/log/neutron/arpdumper.log:ARP3 \
                    logs/networker3/var/log/neutron/l3-agent.log:L3_3 \
                    logs/networker3/var/log/neutron/dhcp-agent.log:DHCP3 \
                    logs/networker3/var/log/neutron/metadata-agent.log:META3 \
                     >logs/mergedlogs.log
