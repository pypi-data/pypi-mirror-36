[Config]
###############################################################################
#   Base folder where we keep the database and related control files.
#      Select either the current working directory or a specific folder
#   Other values use a reference to this base folder with %(FOLDER)s
###############################################################################
FOLDER = os.path.abspath(os.getcwd())
#FOLDER = "~/apps/flickr-uploader-2.8.6"

###############################################################################
#   Location to scan for new files
###############################################################################
FILES_DIR = "YourDir"

###############################################################################
#   Flickr settings
#   Set your own API key and secret message
#   Apply for an API key at: http://www.flickr.com/services/apps/create/apply
#   Recommended to leave title empty to use filename without extension as title
###############################################################################
FLICKR = {
        "title"                 : "",
        "description"           : "",
        "tags"                  : "auto-upload",
        "is_public"             : "0",
        "is_friend"             : "0",
        "is_family"             : "0",
        "api_key"               : "YourKey",
        "secret"                : "YourSecret"
        }

###############################################################################
#   How often to check for new files to upload (in seconds)
#   Only used with the -d (--daemon) argument option.
###############################################################################
SLEEP_TIME = 1 * 60

###############################################################################
#   Only with --drip-feed option:
#      How often to wait between uploading individual files (in seconds)
###############################################################################
DRIP_TIME = 1 * 60

###############################################################################
#   File we keep the history of uploaded files in.
###############################################################################
DB_PATH = os.path.join(%(FOLDER)s, "flickrdb")

###############################################################################
#   Location of file lock to ensure only one execution is active of uplaodr.py
###############################################################################
LOCK_PATH = os.path.join(%(FOLDER)s, ".flickrlock")

###############################################################################
#   File where we keep the flickr authentication information.
###############################################################################
TOKEN_CACHE = os.path.join(%(FOLDER)s, "token")

###############################################################################
#   List of folder names you don't want to parse
###############################################################################
EXCLUDED_FOLDERS = ["@eaDir","#recycle",".picasaoriginals","_ExcludeSync","Corel Auto-Preserve","Originals","Automatisch beibehalten von Corel"]

###############################################################################
#   List of filename regular expressions you wish to ignore
#   Regex is used to search the filename (as opposed to matching it completely)
#   Scan through a filename, looking for any location where any of these
#   regular expressions matches. Use ^ (start of filename) or $ (end of
#   filename) as appropriate.
#   Example:
#      IGNORED_REGEX = [ 'IMG_[0-8]', '^[\d\d\d]', '.+Ignore.+']
###############################################################################
IGNORED_REGEX = []

###############################################################################
#   List of file extensions you agree to upload
###############################################################################
ALLOWED_EXT = ["jpg","png","avi","mov","mpg","mp4","3gp"]

###############################################################################
#   RAW File Conversion (optional)
###############################################################################
CONVERT_RAW_FILES = False
RAW_EXT = ["3fr", "ari", "arw", "bay", "crw", "cr2", "cap", "dcs", "dcr", "dng", "drf", "eip", "erf", "fff", "iiq", "k25", "kdc", "mdc", "mef", "mos", "mrw", "nef", "nrw", "obm", "orf", "pef", "ptx", "pxn", "r3d", "raf", "raw", "rwl", "rw2", "rwz", "sr2", "srf", "srw", "x3f"]
RAW_TOOL_PATH = "/usr/bin/"

###############################################################################
#   Files greater than this value won't be uploaded (1Mo = 1000000)
###############################################################################
FILE_MAX_SIZE = 50000000

###############################################################################
#   Do you want to check each time if already uploaded files have been changed?
###############################################################################
MANAGE_CHANGES = True

###############################################################################
#   Full set name
#   Example:
#      FILES_DIR = /home/user/media
#      File to upload: /home/user/media/2014/05/05/photo.jpg
#   FULL_SET_NAME:
#      False: 05
#      True: 2014/05/05
###############################################################################
FULL_SET_NAME = False

###############################################################################
#   Counter for certain SQL operations attempts in case of 'DB Locked' error
###############################################################################
MAX_SQL_ATTEMPTS = 3

###############################################################################
#   Counter for uploading, replacing attempts
###############################################################################
MAX_UPLOAD_ATTEMPTS = 10

###############################################################################
#   Level to be used for Logging purposes. Select one of the following values:
#      Level		Numeric value
#      CRITICAL         50
#      ERROR            40
#      WARNING          30
#      INFO             20
#      DEBUG            10
#      NOT              0
###############################################################################
LOGGING_LEVEL = 40

###############################################################################
#   Output logging information into a rotating set of log file(s).
#      ROTATING_LOGGING to Enable (True) or Disable (False)
#      ROTATING_LOGGING_PATH location of folder/main logging filename
#         Create folder logs as required.
#      ROTATING_LOGGING_FILE_SIZE for maximum file size of each log file
#      ROTATING_LOGGING_FILE_COUNT for maximum count of old log files to keep
#      ROTATING_LOGGING_LEVEL Level Logging.
#         Check LOGGING_LEVEL setting for acceptable values.
#         Normally set ROTATING_LOGGING_LEVEL lower than LOGGING_LEVEL
###############################################################################
ROTATING_LOGGING = False
ROTATING_LOGGING_PATH = os.path.join(%(FOLDER)s, "logs", "uploadr.err")
ROTATING_LOGGING_FILE_SIZE = 25*1024*1024  # 25 MBytes
ROTATING_LOGGING_FILE_COUNT = 3
ROTATING_LOGGING_LEVEL = 30