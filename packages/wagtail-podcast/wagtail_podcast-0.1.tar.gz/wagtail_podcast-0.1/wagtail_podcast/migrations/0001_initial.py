# Generated by Django 2.0.7 on 2018-08-24 13:25

import django.db.models.deletion
import wagtail.contrib.routable_page.models
import wagtail.core.fields
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('wagtailcore', '0040_page_draft_title'),
        ('wagtaildocs', '0007_merge'),
        ('wagtailimages', '0019_delete_filter'),
    ]

    operations = [
        migrations.CreateModel(
            name='PodcastPage',
            fields=[
                ('page_ptr',
                 models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True,
                                      primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('episodeType', models.CharField(choices=[('full', 'Full'), ('trailer', 'Trailer'), ('bonus', 'Bonus')],
                                                 default='full', help_text='Type of episode', max_length=255,
                                                 verbose_name='Episode Type')),
                ('author',
                 models.CharField(help_text='Author of particular podcast', max_length=255, verbose_name='Author')),
                ('subtitle',
                 models.CharField(help_text='Subtitle of particular podcast', max_length=255, verbose_name='Subtitle')),
                ('description', models.TextField(help_text='Description of podcast', verbose_name='Description')),
                ('explicit',
                 models.BooleanField(default=False, help_text='Whether the podcast contains explicit content',
                                     verbose_name='Explicit')),
                ('duration', models.IntegerField(default=300)),
                ('length', models.IntegerField(default=1024)),
                ('page_text',
                 wagtail.core.fields.RichTextField(help_text='Content that accompanies the podcast', null=True,
                                                   verbose_name='Page Text')),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                            related_name='+', to='wagtailimages.Image', verbose_name='Image')),
                ('recording', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                                related_name='+', to='wagtaildocs.Document', verbose_name='Recording')),
            ],
            options={
                'verbose_name': 'Podcast',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='PodcastParentPage',
            fields=[
                ('page_ptr',
                 models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True,
                                      primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('language', models.CharField(choices=[('af-ZA', 'Afrikaans'), ('en-ZA', 'English')], default='af-ZA',
                                              help_text='Language of podcast', max_length=5, verbose_name='Language')),
                ('copyright',
                 models.CharField(help_text='Copyright holder of podcast', max_length=255, verbose_name='Copyright')),
                (
                    'subtitle',
                    models.CharField(help_text='Subtitle of podacst', max_length=255, verbose_name='Subtitle')),
                ('author', models.CharField(help_text='Author of podcast', max_length=255, verbose_name='Author')),
                ('description',
                 models.TextField(help_text='Description of nature of podcast', verbose_name='Description')),
                ('owner_name',
                 models.CharField(help_text='Owner of the podcast channel', max_length=255, verbose_name='Owner name')),
                ('owner_email', models.EmailField(help_text='Email address of the podcast owner', max_length=254,
                                                  verbose_name='Owner email')),
                ('category', models.CharField(help_text='Category of the podcast address', max_length=255,
                                              verbose_name='Category')),
                ('page_text',
                 wagtail.core.fields.RichTextField(help_text='Main text page that appears on the root page', null=True,
                                                   verbose_name='Page Text')),
                ('itunes_url', models.URLField(blank=True, verbose_name='Itunes Podcast Url')),
                ('google_url', models.URLField(blank=True, verbose_name='Google Play Podcast Url')),
                ('blubrry_url', models.URLField(blank=True, verbose_name='Blubrry Podcast Url')),
                ('explicit',
                 models.BooleanField(default=False, help_text='Whether the podcast channel contains explicit content',
                                     verbose_name='Explicit')),
                ('image', models.ForeignKey(blank=True, help_text='Cover image for podcast', null=True,
                                            on_delete=django.db.models.deletion.SET_NULL, related_name='+',
                                            to='wagtailimages.Image', verbose_name='Image')),
            ],
            options={
                'verbose_name': 'Podcast Root Page',
            },
            bases=(wagtail.contrib.routable_page.models.RoutablePageMixin, 'wagtailcore.page'),
        ),
    ]
