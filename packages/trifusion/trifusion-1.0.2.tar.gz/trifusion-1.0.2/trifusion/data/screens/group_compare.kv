#:import orto_update_filters trifusion.data.resources.background_tasks.orto_update_filters

ShowcaseScreen:
    name: "group_compare"
    group_obj: None

    BoxLayout:
        orientation: "vertical"
        BoxLayout:
            size_hint_y: None
            height: 100
            AnchorLayout:
                anchor_x: "left"
                anchor_y: "center"
                size_hint_x: None
                width: 110
                Button:
                    size_hint: None, None
                    size: 80,30
                    text: "  Back"
                    bold: True
                    background_normal: "data/backgrounds/go_back_bt.png"
                    background_down: "data/backgrounds/go_back_bt_down.png"
                    on_release:
                        app.go_previous_screen()

            Vseparator:
                thickness: 1.5

            BoxLayout:
                orientation: "vertical"
                id: header_content
                original_filt: None
                excluded_taxa: []
                padding: 5
                Label:
                    text: "Filter settings:"
                    size_hint_y: None
                    height: 20
                    bold: True
                    color: (0.216, 0.67, 0.784, 1)
                BoxLayout:
                    spacing: 5
                    BoxLayout:
                        orientation: "vertical"
                        Label:
                            size_hint_y: None
                            height: 20
                            font_size: 13
                            halign: "center"
                            valign: "middle"
                            text_size: self.size
                            text: "  Maximum gene copies"
                            bold: True
                            color: (.8, .8, .8, 1)
                        BoxLayout:
                            orientation: "vertical"
                            padding: 5
                            MySlider:
                                step: 1
                                min: 1
                                id: gn_spin
                        BoxLayout:
                            size_hint_y: None
                            height: 20
                            padding: [10, 0, 10, 0]
                            Label:
                                text: "Min: " + str(int(gn_spin.min))
                                text_size: self.size
                                halign: "left"
                                valign: "middle"
                                font_size: 13
                                bold: True
                                color: .7, .7, .7, 1
                            BoxLayout:
                                spacing: 5
                                Label:
                                    text: "Value:"
                                    text_size: self.size
                                    halign: "right"
                                    valign: "middle"
                                    font_size: 13
                                    bold: True
                                    color: app._blue
                                TextInput:
                                    text: str(int(gn_spin.value))
                                    background_color: (1, 1, 1, 0)
                                    foreground_color: app._blue
                                    text_size: self.size
                                    font_size: 13
                                    text_height: 15
                                    padding: 0,1,0,0
                                    input_filter: "int"
                                    multiline: False
                                    on_text_validate:
                                        print(self.text)
                                        if self.text.strip() == "":\
                                        self.text = str(gn_spin.value)
                                        elif int(self.text) < gn_spin.min:\
                                        gn_spin.value = gn_spin.min
                                        elif int(self.text) > gn_spin.max:\
                                        gn_spin.value = gn_spin.max; self.text = str(gn_spin.max)
                                        else:\
                                        gn_spin.value = int(self.text);

                            Label:
                                text: "Max: " + str(int(gn_spin.max))
                                text_size: self.size
                                halign: "right"
                                valign: "middle"
                                font_size: 13
                                bold: True
                                color: .7, .7, .7, 1

                    BoxLayout:
                        orientation: "vertical"
                        Label:
                            size_hint_y: None
                            height: 20
                            font_size: 13
                            halign: "center"
                            valign: "middle"
                            text_size: self.size
                            text: "  Minimum taxa"
                            bold: True
                            color: (.8, .8, .8, 1)
                        BoxLayout:
                            orientation: "vertical"
                            padding: 5
                            MySlider:
                                step: 1
                                min: 1
                                id: sp_spin

                        BoxLayout:
                            size_hint_y: None
                            height: 20
                            padding: [10, 0, 10, 0]
                            Label:
                                text: "Min: " + str(int(sp_spin.min))
                                text_size: self.size
                                halign: "left"
                                valign: "middle"
                                font_size: 13
                                bold: True
                                color: .7, .7, .7, 1
                            BoxLayout:
                                spacing: 5
                                Label:
                                    text: "Value:"
                                    text_size: self.size
                                    halign: "right"
                                    valign: "middle"
                                    font_size: 13
                                    bold: True
                                    color: app._blue
                                TextInput:
                                    text: str(int(sp_spin.value))
                                    background_color: (1, 1, 1, 0)
                                    foreground_color: app._blue
                                    text_size: self.size
                                    font_size: 13
                                    text_height: 15
                                    padding: 0,1,0,0
                                    input_filter: "int"
                                    multiline: False
                                    on_text_validate:
                                        if self.text.strip() == "":\
                                        self.text = str(sp_spin.value)
                                        elif int(self.text) < sp_spin.min:\
                                        sp_spin.value = sp_spin.min
                                        elif int(self.text) > sp_spin.max:\
                                        sp_spin.value = sp_spin.max; self.text = str(sp_spin.max)
                                        else:\
                                        sp_spin.value = int(self.text);
                            Label:
                                text: "Max: " + str(int(sp_spin.max))
                                text_size: self.size
                                halign: "right"
                                valign: "middle"
                                font_size: 13
                                bold: True
                                color: .7, .7, .7, 1

            Vseparator:
                thickness: 1.5

            AnchorLayout:
                anchor_x: "center"
                anchor_y: "center"
                size_hint_x: None
                width: 40

                Button:
                    size_hint: None, None
                    size: 30, 30
                    text_size: self.size
                    halign: "center"
                    valign: "middle"
                    bold: True
                    border: 0,0,0,0
                    background_normal: "data/backgrounds/refresh_bt.png" if header_content.original_filt == [int(gn_spin.value), int(sp_spin.value)] else "data/backgrounds/refresh_update_bt.png"
                    background_down: "data/backgrounds/refresh_bt_down.png" if header_content.original_filt == [int(gn_spin.value), int(sp_spin.value)] else "data/backgrounds/refresh_update_bt_down.png"
                    on_release:
                        if header_content.original_filt and header_content.original_filt != [int(gn_spin.value), int(sp_spin.value)]:\
                        app.run_in_background(orto_update_filters, app.orto_compare_groups, [app.ortho_groups, int(gn_spin.value), int(sp_spin.value), list(header_content.excluded_taxa), None, False], None, False, cancel=False)


#                        StringInput:
#                            text: str(app.ortho_groups.filters[app.active_group_name][0])
#                            size_hint_x: .2
#                            multiline: False
#                            id: gn_txt
#                            on_text_validate:
#                                app.run_in_background(orto_update_filters, app.orto_compare_groups, [app.ortho_groups, str(gn_txt.text), str(sp_txt.text), None, False], None, False)

#                        StringInput:
#                            text: str(app.ortho_groups.filters[app.active_group_name][1])
#                            size_hint_x: .2
#                            multiline: False
#                            id: sp_txt
#                            on_text_validate:
#                                app.run_in_background(orto_update_filters, app.orto_compare_groups, [app.ortho_groups, str(gn_txt.text), str(sp_txt.text), None, False], None, False)

            Vseparator:
                thickness: 1.5

            BoxLayout:
                orientation: "vertical"
                padding: 5
                size_hint_x: None
                width: 300
                Label:
                    text: "Display:"
                    size_hint_y: None
                    height: 25
                    bold: True
                    color: (0.216, 0.67, 0.784, 1)
                BoxLayout:
                    BoxLayout:
                        orientation: "vertical"
                        id: display_bx
                        BoxLayout:
                            Label:
                                text: "Total orthologs"
                                size_hint_x: .8
                            CheckBox:
                                id: total_ort
                                active: True
                                size_hint_x: .2
                                on_active:
                                    app.orto_compare_groups(root.group_obj)
                        BoxLayout:
                            Label:
                                text: "Species filter"
                                size_hint_x: .8
                            CheckBox:
                                id: sp_ort
                                active: True
                                size_hint_x: .2
                                on_active:
                                    app.orto_compare_groups(root.group_obj)
                    BoxLayout:
                        orientation: "vertical"
                        BoxLayout:
                            Label:
                                text: "Gene filter"
                                size_hint_x: .8
                            CheckBox:
                                id: gn_ort
                                active: True
                                size_hint_x: .2
                                on_active:
                                    app.orto_compare_groups(root.group_obj)
                        BoxLayout:
                            Label:
                                text: "Final orthologs"
                                size_hint_x: .8
                            CheckBox:
                                id: final_ort
                                active: True
                                size_hint_x: .2
                                on_active:
                                    app.orto_compare_groups(root.group_obj)



        Hseparator:
            thickness: 1.5

        ScrollView:
            scroll_timeout: 0
            ScatterLayout:
                do_rotation: False
                scale_min: 0.5
                id: plot_content
                Label:
                    text: "Plots and stuff"