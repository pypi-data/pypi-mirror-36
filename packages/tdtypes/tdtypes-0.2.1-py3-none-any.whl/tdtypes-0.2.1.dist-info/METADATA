Metadata-Version: 2.1
Name: tdtypes
Version: 0.2.1
Summary: Database Types for Teradata
Home-page: https://bitbucket.org/padhia/tdtypes
Author: Paresh Adhia
License: MIT
Keywords: teradata
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Topic :: Database
Classifier: Topic :: Software Development
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Requires-Python: >=3.6
Provides-Extra: teradata
Provides-Extra: pyodbc
Requires-Dist: lazy
Provides-Extra: pyodbc
Requires-Dist: pyodbc; extra == 'pyodbc'
Provides-Extra: teradata
Requires-Dist: teradata; extra == 'teradata'

tdtypes
=======

.. image:: https://img.shields.io/pypi/v/tdtypes.svg
     :target: https://pypi.python.org/pypi/tdtypes
     :alt: PyPi
.. image:: https://img.shields.io/badge/License-MIT-blue.svg
     :target: https://opensource.org/licenses/MIT
     :alt: MIT License
.. image:: https://img.shields.io/pypi/pyversions/tdtypes.svg
     :alt: Python3.4+

`tdtypes <https://bitbucket.org/padhia/tdtypes>`_ is a Python library consisting of classes and functions that provide easy access to Teradata Database object metadata.

*NOTES:*

- I originally developed this library for my personal use. I am making these open-source in the hope that someone else might find them useful. This library does not come with any expressed or implied warranty.
- This library is not endorsed by `Teradata Inc <http://www.teradata.com/>`_.

Requirements
------------

Latest version of *Python3* series is recommended, however Python 3.4 and above should work.

**tdtypes** depends on `teradata <https://pypi.python.org/pypi/teradata/>`_ and `lazy <https://pypi.python.org/pypi/lazy/>`_ python packages. They'll be downloaded and installed automatically if you use the standard python installer ``pip``.

Installation
------------

Use Python's ``pip`` utility to install ``tdtypes``.

::

  $ pip install tdtypes

Or

::

  C:\>python -m pip install tdtypes

Configuration and Customization
-------------------------------

No configuration is required except setting up the needed ODBC connections.

**tdtypes** provides an easy way to accept a valid ODBC connection string from command line. If more flexibility is needed, for example, to use Teradata REST interface instead of ODBC, or automatically retrieve database connection information, create **tdconn_site.py** module and place it in your ``PYTHONPATH``. The module must define two functions ``dbconn_args()`` and ``dbconnect()``. Have a look at the default definitions of these functions in *tdconn_default.py* module to get an idea about the parameters and return values.

Support
-------

If you encounter an issue, report it using `issue tracker <https://bitbucket.org/padhia/tdtypes/issues?status=new&status=open>`_. I'll try to provide a fix as soon as I can. If you already have a fix, send me a pull request.

Contributions
-------------

Feel free to fork this repository and enhance it in a way you see fit. If you think your changes will benefit more people, send me a pull request.


