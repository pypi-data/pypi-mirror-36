[ source $CASA_SRC ]
  brainvisa standard $CASA_BRANCH
[ if os.getenv('WINEARCH') in ('win32', 'win64') ]
  - communication:web
[ endif ]

[ build $CASA_BUILD ]
[ if os.getenv('WINEARCH') in ('win32', 'win64') ]
  cmake_options = -DBRAINVISA_CROSSCOMPILATION_DIR=$CASA_DEPS
[ if os.getenv('WINEARCH') == 'win32' ]
  cross_compiling_prefix = i686-w64-mingw32
[ else ]
[if os.getenv('WINEARCH') == 'win64' ]
  cross_compiling_prefix = x86_64-w64-mingw32
[ endif ]
[ endif ]
[ endif ]
  default_steps = configure build doc
  make_options = -j4
  build_type = Release
  packaging_thirdparty = ON
  clean_config = ON
  clean_build = ON
  test_ref_data_dir = $CASA_TESTS/ref
  test_run_data_dir = $CASA_TESTS/test
  brainvisa standard $CASA_BRANCH $CASA_SRC
[ if os.getenv('WINEARCH') in ('win32', 'win64') ]
  - communication:web
[ endif ]

[ build $CASA_CUSTOM_BUILD ]
[ if os.getenv('WINEARCH') in ('win32', 'win64') ]
  cmake_options = -DBRAINVISA_CROSSCOMPILATION_DIR=$CASA_DEPS
[ if os.getenv('WINEARCH') == 'win32' ]
  cross_compiling_prefix = i686-w64-mingw32
[ else ]
[ if os.getenv('WINEARCH') == 'win64' ]
  cross_compiling_prefix = x86_64-w64-mingw32
[ endif ]
[ endif ]
[ endif ]
  make_options = -j4
  build_type = Release
  clean_config = ON
  clean_build = ON
  test_ref_data_dir = $CASA_TESTS/custom_ref
  test_run_data_dir = $CASA_TESTS/custom_test
  directory $CASA_CUSTOM_SRC/custom_project

[ package $CASA_PACK/data/packages ]
  build_directory = $CASA_BUILD
[ if os.getenv('WINEARCH') in ('win32', 'win64') ]
  packaging_options = --data --platform-target $WINEARCH --make-options \"-j4\"
[ else ]
  packaging_options = --data --make-options \"-j4\"
[ endif ]
  directory_id = data_packages
  init_components_from_build_dir = OFF
#   default_steps = pack
  brainvisa-share $CASA_BRANCH $CASA_SRC
  sulci-models $CASA_BRANCH $CASA_SRC

[ package $CASA_PACK/software/packages ]
  build_directory = $CASA_BUILD
  data_repos_dir = $CASA_PACK/data/packages
  test_install_dir = $CASA_INSTALL/brainvisa-test
  test_ref_data_dir = $CASA_TESTS/ref
  test_run_data_dir = $CASA_TESTS/test
[ if os.getenv('WINEARCH') in ('win32', 'win64') ]
  packaging_options = --online-only --binary-creator-cmd $CASA_DEPS/bin/binarycreator.exe --platform-target $WINEARCH --make-options \"-j4\"
  installer_filename = $CASA_PACK/brainvisa-installer/brainvisa_installer-%(version)s-%(os)s-%(online)s.exe
  # the WINEDLLOVERRIDES is necessary to avoid mono and gecko installation that block the wine initialization
  remote_test_host_cmd = ssh -X -o NoHostAuthenticationForLocalhost=yes localhost $CASA_HOST_DIR/bin/casa_distro -r $CASA_HOST_DIR/../.. run conf=test gui=True distro=$CASA_DISTRO branch=$CASA_BRANCH system=$CASA_SYSTEM -- xvfb-run --auto-servernum wine
[ else ]
  packaging_options = --online-only --make-options \"-j4\"
  installer_filename = $CASA_PACK/brainvisa-installer/brainvisa_installer-%(version)s-%(os)s-%(online)s
  remote_test_host_cmd = ssh -X -o NoHostAuthenticationForLocalhost=yes localhost $CASA_HOST_DIR/bin/casa_distro -r $CASA_HOST_DIR/../.. run conf=test gui=True distro=$CASA_DISTRO branch=$CASA_BRANCH system=$CASA_SYSTEM -- xvfb-run --auto-servernum
[ endif ]
#   default_steps = pack install_pack test_pack
  - communication
  - brainvisa-share
  - sulci-data
  - brainvisa-release
  - release
