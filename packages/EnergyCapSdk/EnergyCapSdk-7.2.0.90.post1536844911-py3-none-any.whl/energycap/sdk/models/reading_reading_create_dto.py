# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class ReadingReadingCreateDTO(Model):
    """ReadingReadingCreateDTO.

    :param channel_id:  <span class='property-internal'>Topmost
     (Channel)</span>
    :type channel_id: int
    :param channel_import_id: The import identifier for the channel on which
     to create the reading. See the channelId property for more information
     <span class='property-internal'>Must be between 0 and 255
     characters</span>
    :type channel_import_id: str
    :param meter_import_id: The import identifier for the meter on which to
     create the reading. See the channelId property for more information <span
     class='property-internal'>Must be between 0 and 255 characters</span>
    :type meter_import_id: str
    :param channel_interval_in_seconds:
    :type channel_interval_in_seconds: int
    :param observation_type_code: The observationType code of the reading. See
     the channelId property for more information <span
     class='property-internal'>Must be between 0 and 16 characters</span>
    :type observation_type_code: str
    :param unit_code: The unit code of the reading. See the channelId property
     for more information <span class='property-internal'>Must be between 0 and
     16 characters</span>
    :type unit_code: str
    :param readings: array of readings <span
     class='property-internal'>Required</span>
    :type readings: list[~energycap.sdk.models.ReadingReading]
    """

    _validation = {
        'channel_import_id': {'max_length': 255, 'min_length': 0},
        'meter_import_id': {'max_length': 255, 'min_length': 0},
        'observation_type_code': {'max_length': 16, 'min_length': 0},
        'unit_code': {'max_length': 16, 'min_length': 0},
        'readings': {'required': True},
    }

    _attribute_map = {
        'channel_id': {'key': 'channelId', 'type': 'int'},
        'channel_import_id': {'key': 'channelImportId', 'type': 'str'},
        'meter_import_id': {'key': 'meterImportId', 'type': 'str'},
        'channel_interval_in_seconds': {'key': 'channelIntervalInSeconds', 'type': 'int'},
        'observation_type_code': {'key': 'observationTypeCode', 'type': 'str'},
        'unit_code': {'key': 'unitCode', 'type': 'str'},
        'readings': {'key': 'readings', 'type': '[ReadingReading]'},
    }

    def __init__(self, readings, channel_id=None, channel_import_id=None, meter_import_id=None, channel_interval_in_seconds=None, observation_type_code=None, unit_code=None):
        super(ReadingReadingCreateDTO, self).__init__()
        self.channel_id = channel_id
        self.channel_import_id = channel_import_id
        self.meter_import_id = meter_import_id
        self.channel_interval_in_seconds = channel_interval_in_seconds
        self.observation_type_code = observation_type_code
        self.unit_code = unit_code
        self.readings = readings
