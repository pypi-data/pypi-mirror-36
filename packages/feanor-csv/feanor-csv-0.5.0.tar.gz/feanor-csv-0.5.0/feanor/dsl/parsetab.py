
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "exprleft|left+left.DEFINE FLOAT IDENTIFIER IN INTEGER LET STRINGexpr : expr '|' choice\n            | expr '<' opt_literal expr_dispatcher\n            | choice\n            | call\n            | let_expr\n    expr_dispatcher :  '|' opt_literal '>' choice\n    choice : choice '+' term\n              | term\n    term : term '.' concatenandum\n            | concatenandum\n    concatenandum : concatenandum '_' index_or_indices\n                     | factor\n    index_or_indices : INTEGER\n                        | '(' numeric_list ')'\n    numeric_list : INTEGER\n                    | numeric_list ','\n                    | INTEGER ',' numeric_list\n    factor : type\n              | reference\n              | '(' expr ')' opt_assignment\n    type : '%' IDENTIFIER opt_arbitrary configopt_arbitrary : ':' IDENTIFIER\n                     | empty\n    reference : '@' IDENTIFIERcall : IDENTIFIER '(' exprlist ')'let_expr : LET defines_list IN exprdefines_list : IDENTIFIER DEFINE expr\n                    | IDENTIFIER DEFINE expr defines_list\n    config : dict_literal\n              | emptyopt_literal : literal\n                   | emptyliteral : dict_literal\n               | list_literal\n               | INTEGER\n               | FLOAT\n               | STRING\n    dict_literal : '{' keypair_list '}'list_literal : '[' literal_list ']'literal_list : empty\n                    | literal\n                    | literal ',' literal_list\n    keypair_list : empty\n                    | keypair\n                    | keypair ',' keypair_list\n    keypair : STRING ':' literalexprlist : empty\n                | expr\n                | expr ',' exprlist\n    opt_assignment : assign_name\n                      | emptyassign_name : '=' IDENTIFIERempty :"
    
_lr_action_items = {'IDENTIFIER':([0,2,3,4,5,7,8,9,10,11,12,13,14,19,24,25,26,37,38,42,43,44,45,46,48,49,50,51,60,61,62,63,64,65,66,67,70,71,72,73,75,81,83,91,],[6,-3,-4,-5,-8,6,22,-10,-12,-18,-19,24,25,6,-53,-24,-1,-7,-9,-53,6,6,-11,-13,-53,73,-23,-2,-25,6,-20,-50,-51,81,-26,22,-21,-29,-30,-22,-38,-52,-14,-6,]),'LET':([0,7,19,43,44,61,],[8,8,8,8,8,8,]),'(':([0,6,7,15,17,18,19,23,43,44,61,86,],[7,19,7,7,7,7,7,47,7,7,7,7,]),'%':([0,7,15,17,18,19,43,44,61,86,],[13,13,13,13,13,13,13,13,13,13,]),'@':([0,7,15,17,18,19,43,44,61,86,],[14,14,14,14,14,14,14,14,14,14,]),'$end':([1,2,3,4,5,9,10,11,12,24,25,26,37,38,42,45,46,48,50,51,60,62,63,64,66,70,71,72,73,75,81,83,91,],[0,-3,-4,-5,-8,-10,-12,-18,-19,-53,-24,-1,-7,-9,-53,-11,-13,-53,-23,-2,-25,-20,-50,-51,-26,-21,-29,-30,-22,-38,-52,-14,-6,]),'|':([1,2,3,4,5,9,10,11,12,16,20,24,25,26,27,28,29,30,31,32,33,34,37,38,41,42,45,46,48,50,51,60,62,63,64,66,67,70,71,72,73,75,78,81,83,91,],[15,-3,-4,-5,-8,-10,-12,-18,-19,-53,15,-53,-24,-1,52,-31,-32,-33,-34,-35,-36,-37,-7,-9,15,-53,-11,-13,-53,-23,-2,-25,-20,-50,-51,15,15,-21,-29,-30,-22,-38,-39,-52,-14,-6,]),'<':([1,2,3,4,5,9,10,11,12,20,24,25,26,37,38,41,42,45,46,48,50,51,60,62,63,64,66,67,70,71,72,73,75,81,83,91,],[16,-3,-4,-5,-8,-10,-12,-18,-19,16,-53,-24,-1,-7,-9,16,-53,-11,-13,-53,-23,-2,-25,-20,-50,-51,16,16,-21,-29,-30,-22,-38,-52,-14,-6,]),')':([2,3,4,5,9,10,11,12,19,20,24,25,26,37,38,39,40,41,42,45,46,48,50,51,60,61,62,63,64,66,68,69,70,71,72,73,75,80,81,83,84,90,91,],[-3,-4,-5,-8,-10,-12,-18,-19,-53,42,-53,-24,-1,-7,-9,60,-47,-48,-53,-11,-13,-53,-23,-2,-25,-53,-20,-50,-51,-26,83,-15,-21,-29,-30,-22,-38,-49,-52,-14,-16,-17,-6,]),',':([2,3,4,5,9,10,11,12,24,25,26,30,31,32,33,34,37,38,41,42,45,46,48,50,51,55,59,60,62,63,64,66,68,69,70,71,72,73,75,78,81,83,84,88,90,91,],[-3,-4,-5,-8,-10,-12,-18,-19,-53,-24,-1,-33,-34,-35,-36,-37,-7,-9,61,-53,-11,-13,-53,-23,-2,76,79,-25,-20,-50,-51,-26,84,85,-21,-29,-30,-22,-38,-39,-52,-14,-16,-46,84,-6,]),'IN':([2,3,4,5,9,10,11,12,21,24,25,26,37,38,42,45,46,48,50,51,60,62,63,64,66,67,70,71,72,73,75,81,82,83,91,],[-3,-4,-5,-8,-10,-12,-18,-19,43,-53,-24,-1,-7,-9,-53,-11,-13,-53,-23,-2,-25,-20,-50,-51,-26,-27,-21,-29,-30,-22,-38,-52,-28,-14,-6,]),'+':([2,5,9,10,11,12,24,25,26,37,38,42,45,46,48,50,62,63,64,70,71,72,73,75,81,83,91,],[17,-8,-10,-12,-18,-19,-53,-24,17,-7,-9,-53,-11,-13,-53,-23,-20,-50,-51,-21,-29,-30,-22,-38,-52,-14,17,]),'.':([5,9,10,11,12,24,25,37,38,42,45,46,48,50,62,63,64,70,71,72,73,75,81,83,],[18,-10,-12,-18,-19,-53,-24,18,-9,-53,-11,-13,-53,-23,-20,-50,-51,-21,-29,-30,-22,-38,-52,-14,]),'_':([9,10,11,12,24,25,38,42,45,46,48,50,62,63,64,70,71,72,73,75,81,83,],[23,-12,-18,-19,-53,-24,23,-53,-11,-13,-53,-23,-20,-50,-51,-21,-29,-30,-22,-38,-52,-14,]),'INTEGER':([16,23,36,47,52,77,79,85,],[32,46,32,69,32,32,32,69,]),'FLOAT':([16,36,52,77,79,],[33,33,33,33,33,]),'STRING':([16,35,36,52,76,77,79,],[34,56,34,34,56,34,34,]),'{':([16,24,36,48,50,52,73,77,79,],[35,-53,35,35,-23,35,-22,35,35,]),'[':([16,36,52,77,79,],[36,36,36,36,36,]),'DEFINE':([22,],[44,]),':':([24,56,],[49,77,]),'>':([28,29,30,31,32,33,34,52,74,75,78,],[-31,-32,-33,-34,-35,-36,-37,-53,86,-38,-39,]),']':([30,31,32,33,34,36,57,58,59,75,78,79,89,],[-33,-34,-35,-36,-37,-53,78,-40,-41,-38,-39,-53,-42,]),'}':([30,31,32,33,34,35,53,54,55,75,76,78,87,88,],[-33,-34,-35,-36,-37,-53,75,-43,-44,-38,-53,-39,-45,-46,]),'=':([42,],[65,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expr':([0,7,19,43,44,61,],[1,20,41,66,67,41,]),'choice':([0,7,15,19,43,44,61,86,],[2,2,26,2,2,2,2,91,]),'call':([0,7,19,43,44,61,],[3,3,3,3,3,3,]),'let_expr':([0,7,19,43,44,61,],[4,4,4,4,4,4,]),'term':([0,7,15,17,19,43,44,61,86,],[5,5,5,37,5,5,5,5,5,]),'concatenandum':([0,7,15,17,18,19,43,44,61,86,],[9,9,9,9,38,9,9,9,9,9,]),'factor':([0,7,15,17,18,19,43,44,61,86,],[10,10,10,10,10,10,10,10,10,10,]),'type':([0,7,15,17,18,19,43,44,61,86,],[11,11,11,11,11,11,11,11,11,11,]),'reference':([0,7,15,17,18,19,43,44,61,86,],[12,12,12,12,12,12,12,12,12,12,]),'defines_list':([8,67,],[21,82,]),'opt_literal':([16,52,],[27,74,]),'literal':([16,36,52,77,79,],[28,59,28,88,59,]),'empty':([16,19,24,35,36,42,48,52,61,76,79,],[29,40,50,54,58,64,72,29,40,54,58,]),'dict_literal':([16,36,48,52,77,79,],[30,30,71,30,30,30,]),'list_literal':([16,36,52,77,79,],[31,31,31,31,31,]),'exprlist':([19,61,],[39,80,]),'index_or_indices':([23,],[45,]),'opt_arbitrary':([24,],[48,]),'expr_dispatcher':([27,],[51,]),'keypair_list':([35,76,],[53,87,]),'keypair':([35,76,],[55,55,]),'literal_list':([36,79,],[57,89,]),'opt_assignment':([42,],[62,]),'assign_name':([42,],[63,]),'numeric_list':([47,85,],[68,90,]),'config':([48,],[70,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expr","S'",1,None,None,None),
  ('expr -> expr | choice','expr',3,'p_expr','_parser_rules.py',15),
  ('expr -> expr < opt_literal expr_dispatcher','expr',4,'p_expr','_parser_rules.py',16),
  ('expr -> choice','expr',1,'p_expr','_parser_rules.py',17),
  ('expr -> call','expr',1,'p_expr','_parser_rules.py',18),
  ('expr -> let_expr','expr',1,'p_expr','_parser_rules.py',19),
  ('expr_dispatcher -> | opt_literal > choice','expr_dispatcher',4,'p_expr_dispatcher','_parser_rules.py',32),
  ('choice -> choice + term','choice',3,'p_choice','_parser_rules.py',38),
  ('choice -> term','choice',1,'p_choice','_parser_rules.py',39),
  ('term -> term . concatenandum','term',3,'p_term','_parser_rules.py',48),
  ('term -> concatenandum','term',1,'p_term','_parser_rules.py',49),
  ('concatenandum -> concatenandum _ index_or_indices','concatenandum',3,'p_concatenandum','_parser_rules.py',58),
  ('concatenandum -> factor','concatenandum',1,'p_concatenandum','_parser_rules.py',59),
  ('index_or_indices -> INTEGER','index_or_indices',1,'p_index_or_indices','_parser_rules.py',68),
  ('index_or_indices -> ( numeric_list )','index_or_indices',3,'p_index_or_indices','_parser_rules.py',69),
  ('numeric_list -> INTEGER','numeric_list',1,'p_numeric_list','_parser_rules.py',79),
  ('numeric_list -> numeric_list ,','numeric_list',2,'p_numeric_list','_parser_rules.py',80),
  ('numeric_list -> INTEGER , numeric_list','numeric_list',3,'p_numeric_list','_parser_rules.py',81),
  ('factor -> type','factor',1,'p_factor','_parser_rules.py',91),
  ('factor -> reference','factor',1,'p_factor','_parser_rules.py',92),
  ('factor -> ( expr ) opt_assignment','factor',4,'p_factor','_parser_rules.py',93),
  ('type -> % IDENTIFIER opt_arbitrary config','type',4,'p_type','_parser_rules.py',102),
  ('opt_arbitrary -> : IDENTIFIER','opt_arbitrary',2,'p_opt_arbitrary','_parser_rules.py',107),
  ('opt_arbitrary -> empty','opt_arbitrary',1,'p_opt_arbitrary','_parser_rules.py',108),
  ('reference -> @ IDENTIFIER','reference',2,'p_reference','_parser_rules.py',114),
  ('call -> IDENTIFIER ( exprlist )','call',4,'p_call','_parser_rules.py',119),
  ('let_expr -> LET defines_list IN expr','let_expr',4,'p_let_expr','_parser_rules.py',125),
  ('defines_list -> IDENTIFIER DEFINE expr','defines_list',3,'p_defines_list','_parser_rules.py',131),
  ('defines_list -> IDENTIFIER DEFINE expr defines_list','defines_list',4,'p_defines_list','_parser_rules.py',132),
  ('config -> dict_literal','config',1,'p_config','_parser_rules.py',142),
  ('config -> empty','config',1,'p_config','_parser_rules.py',143),
  ('opt_literal -> literal','opt_literal',1,'p_opt_literal','_parser_rules.py',148),
  ('opt_literal -> empty','opt_literal',1,'p_opt_literal','_parser_rules.py',149),
  ('literal -> dict_literal','literal',1,'p_literal','_parser_rules.py',154),
  ('literal -> list_literal','literal',1,'p_literal','_parser_rules.py',155),
  ('literal -> INTEGER','literal',1,'p_literal','_parser_rules.py',156),
  ('literal -> FLOAT','literal',1,'p_literal','_parser_rules.py',157),
  ('literal -> STRING','literal',1,'p_literal','_parser_rules.py',158),
  ('dict_literal -> { keypair_list }','dict_literal',3,'p_dict_literal','_parser_rules.py',164),
  ('list_literal -> [ literal_list ]','list_literal',3,'p_list_literal','_parser_rules.py',170),
  ('literal_list -> empty','literal_list',1,'p_literal_list','_parser_rules.py',176),
  ('literal_list -> literal','literal_list',1,'p_literal_list','_parser_rules.py',177),
  ('literal_list -> literal , literal_list','literal_list',3,'p_literal_list','_parser_rules.py',178),
  ('keypair_list -> empty','keypair_list',1,'p_keypair_list','_parser_rules.py',188),
  ('keypair_list -> keypair','keypair_list',1,'p_keypair_list','_parser_rules.py',189),
  ('keypair_list -> keypair , keypair_list','keypair_list',3,'p_keypair_list','_parser_rules.py',190),
  ('keypair -> STRING : literal','keypair',3,'p_keypair','_parser_rules.py',200),
  ('exprlist -> empty','exprlist',1,'p_exprlist','_parser_rules.py',205),
  ('exprlist -> expr','exprlist',1,'p_exprlist','_parser_rules.py',206),
  ('exprlist -> expr , exprlist','exprlist',3,'p_exprlist','_parser_rules.py',207),
  ('opt_assignment -> assign_name','opt_assignment',1,'p_opt_assignment','_parser_rules.py',217),
  ('opt_assignment -> empty','opt_assignment',1,'p_opt_assignment','_parser_rules.py',218),
  ('assign_name -> = IDENTIFIER','assign_name',2,'p_assign_name','_parser_rules.py',223),
  ('empty -> <empty>','empty',0,'p_empty','_parser_rules.py',228),
]
