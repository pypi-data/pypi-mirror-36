{"version":3,"sources":["webpack:///./src/layouts/hass-subpage.js","webpack:///./src/common/string/compare.js","webpack:///./src/panels/config/overview/ha-overview-device-row.js","webpack:///./src/panels/config/overview/ha-config-overview.js"],"names":["HassSubpage","_polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_5__","_createClass","key","value","history","back","Object","_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_4__","a","_templateObject","header","String","customElements","define","compare","b","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","prototype","freeze","raw","computeEntityName","hass","entity","name","state","states","entity_id","compute_state_name","ha_overview_device_row_HaDeviceRow","events_mixin","polymer_element","HaDeviceRow","device","devices","filter","dev","hub_device_id","id","sort","dev1","dev2","entities","device_id","ent1","ent2","deviceId","find","ev","this","fire","entityId","model","html_tag","Array","_childDevices","type","computed","ha_config_overview_HaConfigOverview","ha_config_overview_createClass","HaConfigOverview","_get","__proto__","getPrototypeOf","call","_loadData","_this2","callWS","then","_entities","_devices","callApi","configs","_configs","conf1","conf2","title","localize","integration","configEntry","config_entries","includes","entry_id","get","ha_config_overview_templateObject","isWide","Boolean","_loading"],"mappings":"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","file":"a382e5f7e3c5d3449a33.chunk.js","sourcesContent":["import '@polymer/app-layout/app-header-layout/app-header-layout.js';\nimport '@polymer/app-layout/app-header/app-header.js';\nimport '@polymer/app-layout/app-toolbar/app-toolbar.js';\nimport '@polymer/paper-icon-button/paper-icon-button.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nclass HassSubpage extends PolymerElement {\n  static get template() {\n    return html`\n    <style include=\"ha-style\"></style>\n    <app-header-layout has-scrolling-region=\"\">\n      <app-header slot=\"header\" fixed=\"\">\n        <app-toolbar>\n          <paper-icon-button icon=\"hass:arrow-left\" on-click=\"_backTapped\"></paper-icon-button>\n          <div main-title=\"\">[[header]]</div>\n        </app-toolbar>\n      </app-header>\n\n      <slot></slot>\n    </app-header-layout>\n`;\n  }\n\n  static get properties() {\n    return {\n      header: String\n    };\n  }\n\n  _backTapped() {\n    history.back();\n  }\n}\n\ncustomElements.define('hass-subpage', HassSubpage);\n","export default (a, b) => {\n  if (a < b) {\n    return -1;\n  }\n  if (a > b) {\n    return 1;\n  }\n\n  return 0;\n};\n","import '@polymer/paper-card/paper-card.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport '../../../layouts/hass-subpage.js';\n\nimport EventsMixin from '../../../mixins/events-mixin.js';\nimport computeStateName from '../../../common/entity/compute_state_name.js';\nimport '../../../components/entity/state-badge.js';\nimport compare from '../../../common/string/compare.js';\n\nfunction computeEntityName(hass, entity) {\n  if (entity.name) return entity.name;\n  const state = hass.states[entity.entity_id];\n  return state ? computeStateName(state) : null;\n}\n\n/*\n * @appliesMixin EventsMixin\n */\nclass HaDeviceRow extends EventsMixin(PolymerElement) {\n  static get template() {\n    return html`\n    <style>\n      :host {\n        display: block;\n      }\n      .device-row {\n        display: flex;\n        flex-direction: row;\n        margin-bottom: 8px;\n      }\n      .device {\n        width: 30%;\n      }\n      .device .name {\n        font-weight: bold;\n      }\n      .device .model,\n      .device .manuf {\n        color: var(--secondary-text-color);\n      }\n      .entity-rows {\n        padding-top: 12px;\n        margin-left: 8px;\n      }\n      .entity-row {\n        margin: 8px 0;\n        display: flex;\n        flex-direction: row;\n      }\n      state-badge {\n        margin-right: 8px;\n        cursor: pointer;\n      }\n      .entity-row .entity-id {\n        color: var(--secondary-text-color);\n      }\n      ha-overview-device-row {\n        margin-left: 16px;\n      }\n    </style>\n    <div>\n      <div class='device-row'>\n      <div class='device'>\n        <div class='name'>[[device.name]]</div>\n        <div class='model'>[[device.model]]</div>\n        <div class='manuf'>by [[device.manufacturer]]</div>\n      </div>\n\n      <div class='entity-rows'>\n        <template is='dom-repeat' items='[[_computeDeviceEntities(hass, device, entities)]]' as='entity'>\n          <div class='entity-row'>\n            <state-badge\n              state-obj=\"[[_computeStateObj(entity, hass)]]\"\n              on-click='_openMoreInfo'\n            ></state-badge>\n            <div>\n              <div class='name'>[[_computeEntityName(entity, hass)]]</div>\n              <div class='entity-id'>[[entity.entity_id]]</div>\n            </div>\n          </div class='entity-row'>\n        </template>\n      </div>\n      </div>\n      <template is='dom-repeat' items='[[_childDevices]]' as='device'>\n        <ha-overview-device-row\n          hass='[[hass]]'\n          devices='[[devices]]'\n          device='[[device]]'\n          entities='[[entities]]'\n        ></ha-overview-device-row>\n      </template>\n    </div>\n    `;\n  }\n\n  static get properties() {\n    return {\n      device: Object,\n      devices: Array,\n      entities: Array,\n      hass: Object,\n      _childDevices: {\n        type: Array,\n        computed: '_computeChildDevices(device, devices)',\n      }\n    };\n  }\n\n  _computeChildDevices(device, devices) {\n    return devices\n      .filter(dev => dev.hub_device_id === device.id)\n      .sort((dev1, dev2) => compare(dev1.name, dev2.name));\n  }\n\n  _computeDeviceEntities(hass, device, entities) {\n    return entities\n      .filter(entity => entity.device_id === device.id)\n      .sort((ent1, ent2) => compare(\n        computeEntityName(hass, ent1) || `zzz${ent1.entity_id}`,\n        computeEntityName(hass, ent2) || `zzz${ent2.entity_id}`\n      ));\n  }\n\n  _computeStateObj(entity, hass) {\n    return hass.states[entity.entity_id];\n  }\n\n  _computeEntityName(entity, hass) {\n    return computeEntityName(hass, entity) || '(entity unavailable)';\n  }\n\n  _computeDeviceName(devices, deviceId) {\n    const device = devices.find(dev => dev.id === deviceId);\n    return device ? device.name : '(device unavailable)';\n  }\n\n  _openMoreInfo(ev) {\n    this.fire('hass-more-info', { entityId: ev.model.entity.entity_id });\n  }\n}\n\ncustomElements.define('ha-overview-device-row', HaDeviceRow);\n","import '@polymer/paper-card/paper-card.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport '../../../layouts/hass-subpage.js';\n\nimport computeStateName from '../../../common/entity/compute_state_name.js';\nimport '../../../components/entity/state-badge.js';\n\nimport './ha-overview-device-row.js';\nimport compare from '../../../common/string/compare.js';\n\nclass HaConfigOverview extends PolymerElement {\n  static get template() {\n    return html`\n    <style>\n      a {\n        color: var(--primary-color);\n      }\n      paper-card {\n        display: block;\n        margin: 16px auto;\n        max-width: 500px;\n      }\n      li {\n        color: var(--primary-text-color);\n      }\n      .secondary {\n        color: var(--secondary-text-color);\n      }\n      .device-row {\n        display: flex;\n        flex-direction: row;\n        margin-bottom: 8px;\n      }\n      .device {\n        width: 30%;\n      }\n      .device .name {\n        font-weight: bold;\n      }\n      .device .model,\n      .device .manuf,\n      .device .hub {\n        color: var(--secondary-text-color);\n      }\n      .entity-rows {\n        padding-top: 12px;\n        margin-left: 8px;\n      }\n      .entity-row {\n        margin: 8px 0;\n        display: flex;\n        flex-direction: row;\n      }\n      state-badge {\n        margin-right: 8px;\n      }\n      .entity-row .entity-id {\n        color: var(--secondary-text-color);\n      }\n    </style>\n    <hass-subpage header=\"Overview\">\n      <div class='content'>\n        <template is='dom-if' if='[[!_configs.length]]'>\n          <paper-card heading='No integrations'>\n            <div class='card-content'>\n              No integrations found. <a href='/config/integrations'>Configure an integration</a>\n            </div>\n          </paper-card>\n        </template>\n        <template is='dom-repeat' items='[[_configs]]' as='configEntry'>\n          <paper-card heading='[[configEntry.title]]'>\n            <div class='card-content'>\n              <!-- <h1>[[configEntry.title]] ([[_computeIntegrationTitle(localize, configEntry.domain)]])</h1> -->\n\n              <template is='dom-repeat' items='[[_computeConfigEntryDevices(configEntry, _devices)]]' as='device'>\n                <ha-overview-device-row\n                  hass='[[hass]]'\n                  devices='[[_devices]]'\n                  device='[[device]]'\n                  entities='[[_entities]]'\n                ></ha-overview-device-row>\n              </template>\n            </div>\n          </paper-card>\n        </dom-repeat>\n      </div>\n    </hass-subpage>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      isWide: Boolean,\n\n      _loading: {\n        type: Boolean,\n        computed: '_computeLoading(_configs, _devices, _entities)'\n      },\n      _configs: {\n        type: Array,\n        value: null,\n      },\n      _devices: {\n        type: Array,\n        value: null,\n      },\n      _entities: {\n        type: Array,\n        value: null,\n      }\n    };\n  }\n\n  ready() {\n    super.ready();\n    this._loadData();\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n  }\n\n  _loadData() {\n    this.hass.callWS({ type: 'config/entity_registry/list' })\n      .then((entities) => { this._entities = entities; });\n    this.hass.callWS({ type: 'config/device_registry/list' })\n      .then((devices) => { this._devices = devices; });\n    this.hass.callApi('get', 'config/config_entries/entry')\n      .then((configs) => {\n        this._configs = configs.sort((conf1, conf2) => compare(conf1.title, conf2.title));\n      });\n  }\n\n  _computeLoading(configs, devices, entities) {\n    return configs && devices && entities;\n  }\n\n  _computeIntegrationTitle(localize, integration) {\n    return localize(`component.${integration}.config.title`);\n  }\n\n  _computeConfigEntryDevices(configEntry, devices) {\n    return devices.filter(device =>\n      device.config_entries.includes(configEntry.entry_id) &&\n      !device.hub_device_id).sort((dev1, dev2) => compare(dev1.name, dev2.name));\n  }\n\n  _computeDeviceEntities(device, entities) {\n    return entities.filter(entity => entity.device_id === device.id);\n  }\n\n  _computeStateObj(entity, hass) {\n    return hass.states[entity.entity_id];\n  }\n\n  _computeEntityName(entity, hass) {\n    const state = hass.states[entity.entity_id];\n\n    if (state) {\n      return computeStateName(state);\n    }\n    return `${entity.name || ''} (entity unavailable)`;\n  }\n\n  _computeDeviceName(devices, deviceId) {\n    const device = devices.find(dev => dev.id === deviceId);\n    return device ? device.name : '(device unavailable)';\n  }\n}\n\ncustomElements.define('ha-config-overview', HaConfigOverview);\n"],"sourceRoot":""}