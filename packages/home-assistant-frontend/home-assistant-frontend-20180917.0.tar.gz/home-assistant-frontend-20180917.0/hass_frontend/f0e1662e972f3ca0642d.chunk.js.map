{"version":3,"sources":["webpack:///./node_modules/@polymer/paper-item/paper-item-body.js","webpack:///./src/panels/config/ha-config-section.js","webpack:///./src/layouts/hass-subpage.js","webpack:///./src/components/buttons/ha-progress-button.js","webpack:///./src/components/buttons/ha-call-api-button.js","webpack:///./src/panels/config/cloud/ha-config-cloud-account.js","webpack:///./src/panels/config/cloud/ha-config-cloud-forgot-password.js","webpack:///./src/panels/config/cloud/ha-config-cloud-login.js","webpack:///./src/panels/config/cloud/ha-config-cloud-register.js","webpack:///./src/panels/config/cloud/ha-config-cloud.js"],"names":["_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_5__","__webpack_require__","Object","_polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_4__","a","_template","is","203","module","__webpack_exports__","_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_0__","_polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_1__","customElements","define","template","properties","hass","type","narrow","Boolean","showMenu","value","isWide","computeContentClasses","classes","computeClasses","207","_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_4__","_polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_5__","header","String","_backTapped","history","back","_polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_3__","_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_2__","progress","disabled","tempClass","className","classList","this","$","container","add","setTimeout","remove","ready","super","addEventListener","ev","buttonTapped","stopPropagation","actionSuccess","actionError","computeDisabled","_mixins_events_mixin_js__WEBPACK_IMPORTED_MODULE_3__","path","method","data","eventData","callApi","then","resp","success","response","fire","events_mixin","polymer_element","html_tag","account","observer","handleLogout","_formatExpiration","date","format_date_time","Date","_accountChanged","newAccount","cloud","_accountUpdater","clearTimeout","email","notify","_requestInProgress","_error","_emailChanged","invalid","_keyDown","keyCode","_handleEmailPasswordReset","preventDefault","includes","flashMessage","err","setProperties","body","message","navigate_mixin","_password","observers","connectedCallback","requestAnimationFrame","flashRipple","simulatedRipple","_inputChanged","password","_handleLogin","focus","length","errCode","code","alert","navigate","props","_handleRegister","_handleForgotPassword","_dismissFlash","_verificationEmailSent","_handleResendVerifyEmail","LOGGED_IN_URLS","NOT_LOGGED_IN_URLS","loadingAccount","_flashMessage","route","_routeData","_routeTail","_loginEmail","detail","_checkRoute","substr","_debouncer","debounce","utils_async","timeOut","after","_equals","b"],"mappings":"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","file":"f0e1662e972f3ca0642d.chunk.js","sourcesContent":["/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n/*\nUse `<paper-item-body>` in a `<paper-item>` or `<paper-icon-item>` to make two- or\nthree- line items. It is a flex item that is a vertical flexbox.\n\n    <paper-item>\n      <paper-item-body two-line>\n        <div>Show your status</div>\n        <div secondary>Your status is visible to everyone</div>\n      </paper-item-body>\n    </paper-item>\n\nThe child elements with the `secondary` attribute is given secondary text styling.\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-item-body-two-line-min-height`   | Minimum height of a two-line item          | `72px`\n`--paper-item-body-three-line-min-height` | Minimum height of a three-line item        | `88px`\n`--paper-item-body-secondary-color`       | Foreground color for the `secondary` area  | `--secondary-text-color`\n`--paper-item-body-secondary`             | Mixin applied to the `secondary` area      | `{}`\n\n*/\n/*\n  FIXME(polymer-modulizer): the above comments were extracted\n  from HTML and may be out of place here. Review them and\n  then delete this comment!\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport '@polymer/paper-styles/default-theme.js';\nimport '@polymer/paper-styles/typography.js';\nimport { Polymer } from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        overflow: hidden; /* needed for text-overflow: ellipsis to work on ff */\n        @apply --layout-vertical;\n        @apply --layout-center-justified;\n        @apply --layout-flex;\n      }\n\n      :host([two-line]) {\n        min-height: var(--paper-item-body-two-line-min-height, 72px);\n      }\n\n      :host([three-line]) {\n        min-height: var(--paper-item-body-three-line-min-height, 88px);\n      }\n\n      :host > ::slotted(*) {\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n      }\n\n      :host > ::slotted([secondary]) {\n        @apply --paper-font-body1;\n\n        color: var(--paper-item-body-secondary-color, var(--secondary-text-color));\n\n        @apply --paper-item-body-secondary;\n      }\n    </style>\n\n    <slot></slot>\n`,\n\n  is: 'paper-item-body'\n});\n","import { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport '../../resources/ha-style.js';\n\nclass HaConfigSection extends PolymerElement {\n  static get template() {\n    return html`\n    <style include=\"iron-flex ha-style\">\n      .content {\n        padding: 28px 20px 0;\n        max-width: 1040px;\n        margin: 0 auto;\n      }\n\n      .header {\n        @apply --paper-font-display1;\n        opacity: var(--dark-primary-opacity);\n      }\n\n      .together {\n        margin-top: 32px;\n      }\n\n      .intro {\n        @apply --paper-font-subhead;\n        width: 100%;\n        max-width: 400px;\n        margin-right: 40px;\n        opacity: var(--dark-primary-opacity);\n      }\n\n      .panel {\n        margin-top: -24px;\n      }\n\n      .panel ::slotted(*) {\n        margin-top: 24px;\n        display: block;\n      }\n\n      .narrow.content {\n        max-width: 640px;\n      }\n      .narrow .together {\n        margin-top: 20px;\n      }\n      .narrow .header {\n        @apply --paper-font-headline;\n      }\n      .narrow .intro {\n        font-size: 14px;\n        padding-bottom: 20px;\n        margin-right: 0;\n        max-width: 500px;\n      }\n    </style>\n    <div class$=\"[[computeContentClasses(isWide)]]\">\n      <div class=\"header\"><slot name=\"header\"></slot></div>\n      <div class$=\"[[computeClasses(isWide)]]\">\n        <div class=\"intro\">\n          <slot name=\"introduction\"></slot>\n        </div>\n        <div class=\"panel flex-auto\">\n          <slot></slot>\n        </div>\n      </div>\n    </div>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n      },\n\n      narrow: {\n        type: Boolean,\n      },\n\n      showMenu: {\n        type: Boolean,\n        value: false,\n      },\n\n      isWide: {\n        type: Boolean,\n        value: false,\n      },\n    };\n  }\n\n  computeContentClasses(isWide) {\n    var classes = 'content ';\n\n    return isWide ? classes : classes + 'narrow';\n  }\n\n  computeClasses(isWide) {\n    var classes = 'together layout ';\n\n    return classes + (isWide ? 'horizontal' : 'vertical narrow');\n  }\n}\n\ncustomElements.define('ha-config-section', HaConfigSection);\n","import '@polymer/app-layout/app-header-layout/app-header-layout.js';\nimport '@polymer/app-layout/app-header/app-header.js';\nimport '@polymer/app-layout/app-toolbar/app-toolbar.js';\nimport '@polymer/paper-icon-button/paper-icon-button.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nclass HassSubpage extends PolymerElement {\n  static get template() {\n    return html`\n    <style include=\"ha-style\"></style>\n    <app-header-layout has-scrolling-region=\"\">\n      <app-header slot=\"header\" fixed=\"\">\n        <app-toolbar>\n          <paper-icon-button icon=\"hass:arrow-left\" on-click=\"_backTapped\"></paper-icon-button>\n          <div main-title=\"\">[[header]]</div>\n        </app-toolbar>\n      </app-header>\n\n      <slot></slot>\n    </app-header-layout>\n`;\n  }\n\n  static get properties() {\n    return {\n      header: String\n    };\n  }\n\n  _backTapped() {\n    history.back();\n  }\n}\n\ncustomElements.define('hass-subpage', HassSubpage);\n","import '@polymer/paper-button/paper-button.js';\nimport '@polymer/paper-spinner/paper-spinner.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nclass HaProgressButton extends PolymerElement {\n  static get template() {\n    return html`\n    <style>\n      .container {\n        position: relative;\n        display: inline-block;\n      }\n\n      paper-button {\n        transition: all 1s;\n      }\n\n      .success paper-button {\n        color: white;\n        background-color: var(--google-green-500);\n        transition: none;\n      }\n\n      .error paper-button {\n        color: white;\n        background-color: var(--google-red-500);\n        transition: none;\n      }\n\n      paper-button[disabled] {\n        color: #c8c8c8;\n      }\n\n      .progress {\n        @apply --layout;\n        @apply --layout-center-center;\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n      }\n    </style>\n    <div class=\"container\" id=\"container\">\n      <paper-button id=\"button\" disabled=\"[[computeDisabled(disabled, progress)]]\" on-click=\"buttonTapped\">\n        <slot></slot>\n      </paper-button>\n      <template is=\"dom-if\" if=\"[[progress]]\">\n        <div class=\"progress\">\n          <paper-spinner active=\"\"></paper-spinner>\n        </div>\n      </template>\n    </div>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n      },\n\n      progress: {\n        type: Boolean,\n        value: false,\n      },\n\n      disabled: {\n        type: Boolean,\n        value: false,\n      },\n    };\n  }\n\n  tempClass(className) {\n    var classList = this.$.container.classList;\n    classList.add(className);\n    setTimeout(() => {\n      classList.remove(className);\n    }, 1000);\n  }\n\n  ready() {\n    super.ready();\n    this.addEventListener('click', ev => this.buttonTapped(ev));\n  }\n\n  buttonTapped(ev) {\n    if (this.progress) ev.stopPropagation();\n  }\n\n  actionSuccess() {\n    this.tempClass('success');\n  }\n\n  actionError() {\n    this.tempClass('error');\n  }\n\n  computeDisabled(disabled, progress) {\n    return disabled || progress;\n  }\n}\n\ncustomElements.define('ha-progress-button', HaProgressButton);\n","import { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\n\nimport './ha-progress-button.js';\nimport EventsMixin from '../../mixins/events-mixin.js';\n\n/*\n * @appliesMixin EventsMixin\n */\nclass HaCallApiButton extends EventsMixin(PolymerElement) {\n  static get template() {\n    return html`\n    <ha-progress-button id=\"progress\" progress=\"[[progress]]\" on-click=\"buttonTapped\" disabled=\"[[disabled]]\"><slot></slot></ha-progress-button>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n\n      progress: {\n        type: Boolean,\n        value: false,\n      },\n\n      path: String,\n\n      method: {\n        type: String,\n        value: 'POST',\n      },\n\n      data: {\n        type: Object,\n        value: {},\n      },\n\n      disabled: {\n        type: Boolean,\n        value: false,\n      },\n    };\n  }\n\n  buttonTapped() {\n    this.progress = true;\n    const eventData = {\n      method: this.method,\n      path: this.path,\n      data: this.data,\n    };\n\n    this.hass.callApi(this.method, this.path, this.data)\n      .then((resp) => {\n        this.progress = false;\n        this.$.progress.actionSuccess();\n        eventData.success = true;\n        eventData.response = resp;\n      }, (resp) => {\n        this.progress = false;\n        this.$.progress.actionError();\n        eventData.success = false;\n        eventData.response = resp;\n      }).then(() => {\n        this.fire('hass-api-called', eventData);\n      });\n  }\n}\n\ncustomElements.define('ha-call-api-button', HaCallApiButton);\n","import '@polymer/paper-button/paper-button.js';\nimport '@polymer/paper-card/paper-card.js';\nimport '@polymer/paper-item/paper-item-body.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport '../../../components/buttons/ha-call-api-button.js';\nimport '../../../layouts/hass-subpage.js';\nimport '../../../resources/ha-style.js';\n\nimport '../ha-config-section.js';\n\nimport formatDateTime from '../../../common/datetime/format_date_time.js';\nimport EventsMixin from '../../../mixins/events-mixin.js';\n\n/*\n * @appliesMixin EventsMixin\n */\nclass HaConfigCloudAccount extends EventsMixin(PolymerElement) {\n  static get template() {\n    return html`\n    <style include=\"iron-flex ha-style\">\n      [slot=introduction] {\n        margin: -1em 0;\n      }\n      [slot=introduction] a {\n        color: var(--primary-color);\n      }\n      .content {\n        padding-bottom: 24px;\n      }\n      paper-card {\n        display: block;\n      }\n      .account-row {\n        display: flex;\n        padding: 0 16px;\n      }\n      paper-button {\n        align-self: center;\n      }\n      .soon {\n        font-style: italic;\n        margin-top: 24px;\n        text-align: center;\n      }\n      .nowrap {\n        white-space: nowrap;;\n      }\n      .wrap {\n        white-space: normal;\n      }\n      .status {\n        text-transform: capitalize;\n        padding: 16px;\n      }\n      paper-button {\n        color: var(--primary-color);\n        font-weight: 500;\n      }\n      a {\n        color: var(--primary-color);\n      }\n    </style>\n    <hass-subpage header=\"Home Assistant Cloud\">\n      <div class=\"content\">\n        <ha-config-section is-wide=\"[[isWide]]\">\n          <span slot=\"header\">Home Assistant Cloud</span>\n          <div slot=\"introduction\">\n            <p>\n              Thank you for being part of Home Assistant Cloud. It's because of people like you that we are able to make a great home automation experience for everyone. Thank you!\n            </p>\n          </div>\n\n          <paper-card heading=\"Nabu Casa Account\">\n            <div class=\"account-row\">\n              <paper-item-body two-line=\"\">\n                [[account.email]]\n                <div secondary=\"\" class=\"wrap\">\n                  <span class=\"nowrap\">Subscription expires on </span>\n                  <span class=\"nowrap\">[[_formatExpiration(account.sub_exp)]]</span>\n                </div>\n              </paper-item-body>\n            </div>\n\n            <div class=\"account-row\">\n              <paper-item-body>\n                Cloud connection status\n              </paper-item-body>\n              <div class=\"status\">[[account.cloud]]</div>\n            </div>\n\n            <div class='card-actions'>\n              <a href='https://account.nabucasa.com' target='_blank'><paper-button>Manage Account</paper-button></a>\n              <paper-button style='float: right' on-click=\"handleLogout\">Sign out</paper-button>\n            </div>\n          </paper-card>\n        </ha-config-section>\n\n        <ha-config-section is-wide=\"[[isWide]]\">\n          <span slot=\"header\">Integrations</span>\n          <div slot=\"introduction\">\n            <p>\n              Integrations for Home Assistant Cloud allow you to connect with services in the cloud without having to expose your Home Assistant instance publicly on the internet.\n            </p>\n            <p>\n              Check the website for <a href='https://www.nabucasa.com/cloud/' target='_blank'>all available features</a>.\n            </p>\n          </div>\n\n          <paper-card heading=\"Alexa\">\n            <div class=\"card-content\">\n              With the Alexa integration for Home Assistant Cloud you'll be able to control all your Home Assistant devices via any Alexa-enabled device.\n              <ul>\n                <li>\n                  To activate, search in the Alexa app for the Home Assistant Smart Home skill.\n                </li>\n                <li>\n                  <a href=\"https://www.home-assistant.io/cloud/alexa/\" target=\"_blank\">\n                    Config documentation\n                  </a>\n                </li>\n              </ul>\n              <p><em>This integration requires an Alexa-enabled device like the Amazon Echo.</em></p>\n            </div>\n          </paper-card>\n\n          <paper-card heading=\"Google Assistant\">\n            <div class=\"card-content\">\n              With the Google Assistant integration for Home Assistant Cloud you'll be able to control all your Home Assistant devices via any Google Assistant-enabled device.\n              <ul>\n                <li>\n                  <a href=\"https://assistant.google.com/services/a/uid/00000091fd5fb875\" target=\"_blank\">\n                    Activate the Home Assistant skill for Google Assistant\n                  </a>\n                </li>\n                <li>\n                  <a href=\"https://www.home-assistant.io/cloud/google_assistant/\" target=\"_blank\">\n                    Config documentation\n                  </a>\n                </li>\n              </ul>\n              <p><em>This integration requires a Google Assistant-enabled device like the Google Home or Android phone.</em></p>\n            </div>\n            <div class=\"card-actions\">\n              <ha-call-api-button hass=\"[[hass]]\" path=\"cloud/google_actions/sync\">Sync devices</ha-call-api-button>\n            </div>\n          </paper-card>\n        </ha-config-section>\n      </div>\n    </hass-subpage>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      isWide: Boolean,\n      account: {\n        type: Object,\n        observer: '_accountChanged',\n      },\n    };\n  }\n\n  handleLogout() {\n    this.hass.callApi('post', 'cloud/logout').then(() => this.fire('ha-account-refreshed', { account: null }));\n  }\n\n  _formatExpiration(date) {\n    return formatDateTime(new Date(date));\n  }\n\n  _accountChanged(newAccount) {\n    if (!newAccount || newAccount.cloud !== 'connecting') {\n      if (this._accountUpdater) {\n        clearTimeout(this._accountUpdater);\n        this._accountUpdater = null;\n      }\n      return;\n    } else if (this._accountUpdater) {\n      return;\n    }\n    setTimeout(() => {\n      this._accountUpdater = null;\n      this.hass.callApi('get', 'cloud/account')\n        .then(account => this.fire('ha-account-refreshed', { account }));\n    }, 5000);\n  }\n}\n\ncustomElements.define('ha-config-cloud-account', HaConfigCloudAccount);\n","import '@polymer/paper-card/paper-card.js';\nimport '@polymer/paper-input/paper-input.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport '../../../components/buttons/ha-progress-button.js';\nimport '../../../layouts/hass-subpage.js';\nimport '../../../resources/ha-style.js';\nimport EventsMixin from '../../../mixins/events-mixin.js';\n\n/*\n * @appliesMixin EventsMixin\n */\nclass HaConfigCloudForgotPassword extends EventsMixin(PolymerElement) {\n  static get template() {\n    return html`\n    <style include=\"iron-flex ha-style\">\n      .content {\n        padding-bottom: 24px;\n      }\n\n      paper-card {\n        display: block;\n        max-width: 600px;\n        margin: 0 auto;\n        margin-top: 24px;\n      }\n      h1 {\n        @apply --paper-font-headline;\n        margin: 0;\n      }\n      .error {\n        color: var(--google-red-500);\n      }\n      .card-actions {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n      }\n      .card-actions a {\n        color: var(--primary-text-color);\n      }\n      [hidden] {\n        display: none;\n      }\n    </style>\n    <hass-subpage header=\"Forgot Password\">\n      <div class=\"content\">\n        <paper-card>\n          <div class=\"card-content\">\n            <h1>Forgot your password?</h1>\n            <p>\n              Enter your email address and we will send you a link to reset your password.\n            </p>\n            <div class=\"error\" hidden$=\"[[!_error]]\">[[_error]]</div>\n            <paper-input autofocus=\"\" id=\"email\" label=\"E-mail\" value=\"{{email}}\" type=\"email\" on-keydown=\"_keyDown\" error-message=\"Invalid email\"></paper-input>\n          </div>\n          <div class=\"card-actions\">\n            <ha-progress-button on-click=\"_handleEmailPasswordReset\" progress=\"[[_requestInProgress]]\">Send reset email</ha-progress-button>\n          </div>\n        </paper-card>\n      </div>\n    </hass-subpage>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      email: {\n        type: String,\n        notify: true,\n        observer: '_emailChanged'\n      },\n      _requestInProgress: {\n        type: Boolean,\n        value: false,\n      },\n      _error: {\n        type: String,\n        value: '',\n      }\n    };\n  }\n\n  _emailChanged() {\n    this._error = '';\n    this.$.email.invalid = false;\n  }\n\n  _keyDown(ev) {\n    // validate on enter\n    if (ev.keyCode === 13) {\n      this._handleEmailPasswordReset();\n      ev.preventDefault();\n    }\n  }\n\n  _handleEmailPasswordReset() {\n    if (!this.email || !this.email.includes('@')) {\n      this.$.email.invalid = true;\n    }\n\n    if (this.$.email.invalid) return;\n\n    this._requestInProgress = true;\n\n    this.hass.callApi('post', 'cloud/forgot_password', {\n      email: this.email,\n    }).then(() => {\n      this._requestInProgress = false;\n      this.fire('cloud-done', {\n        flashMessage: 'Check your email for instructions on how to reset your password.'\n      });\n    }, err => this.setProperties({\n      _requestInProgress: false,\n      _error: err && err.body && err.body.message ?\n        err.body.message : 'Unknown error',\n    }));\n  }\n}\n\ncustomElements.define('ha-config-cloud-forgot-password', HaConfigCloudForgotPassword);\n","import '@polymer/paper-button/paper-button.js';\nimport '@polymer/paper-card/paper-card.js';\nimport '@polymer/paper-icon-button/paper-icon-button.js';\nimport '@polymer/paper-input/paper-input.js';\nimport '@polymer/paper-item/paper-item-body.js';\nimport '@polymer/paper-item/paper-item.js';\nimport '@polymer/paper-ripple/paper-ripple.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport '../../../components/buttons/ha-progress-button.js';\nimport '../../../layouts/hass-subpage.js';\nimport '../../../resources/ha-style.js';\n\nimport '../ha-config-section.js';\nimport EventsMixin from '../../../mixins/events-mixin.js';\nimport NavigateMixin from '../../../mixins/navigate-mixin.js';\n\n/*\n * @appliesMixin NavigateMixin\n * @appliesMixin EventsMixin\n */\nclass HaConfigCloudLogin extends\n  NavigateMixin(EventsMixin(PolymerElement)) {\n  static get template() {\n    return html`\n    <style include=\"iron-flex ha-style\">\n      .content {\n        padding-bottom: 24px;\n      }\n      [slot=introduction] {\n        margin: -1em 0;\n      }\n      [slot=introduction] a {\n        color: var(--primary-color);\n      }\n      paper-card {\n        display: block;\n      }\n      paper-item {\n        cursor: pointer;\n      }\n      paper-card:last-child {\n        margin-top: 24px;\n      }\n      h1 {\n        @apply --paper-font-headline;\n        margin: 0;\n      }\n      .error {\n        color: var(--google-red-500);\n      }\n      .card-actions {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n      }\n      [hidden] {\n        display: none;\n      }\n      .flash-msg {\n        padding-right: 44px;\n      }\n      .flash-msg paper-icon-button {\n        position: absolute;\n        top: 8px;\n        right: 8px;\n        color: var(--secondary-text-color);\n      }\n    </style>\n    <hass-subpage header=\"Cloud Login\">\n      <div class=\"content\">\n        <ha-config-section is-wide=\"[[isWide]]\">\n          <span slot=\"header\">Home Assistant Cloud</span>\n          <div slot=\"introduction\">\n            <p>\n              Home Assistant Cloud connects your local instance securely to cloud-only services Amazon Alexa and Google Assistant.\n            </p>\n            <p>\n              This service is run by our partner <a href='https://www.nabucasa.com' target='_blank'>Nabu&nbsp;Casa,&nbsp;Inc</a>, a company founded by the founders of Home Assistant and Hass.io.\n            </p>\n            <p>\n              Home Assistant Cloud is a subscription service with a free one month trial. No payment information necessary.\n            </p>\n            <p><a href=\"https://www.nabucasa.com/cloud/\" target=\"_blank\">Learn more about Home Assistant Cloud</a></p>\n          </div>\n\n          <paper-card hidden$=\"[[!flashMessage]]\">\n            <div class=\"card-content flash-msg\">\n              [[flashMessage]]\n              <paper-icon-button icon=\"hass:close\" on-click=\"_dismissFlash\">Dismiss</paper-icon-button>\n              <paper-ripple id=\"flashRipple\" noink=\"\"></paper-ripple>\n            </div>\n          </paper-card>\n\n          <paper-card>\n            <div class=\"card-content\">\n              <h1>Sign In</h1>\n              <div class=\"error\" hidden$=\"[[!_error]]\">[[_error]]</div>\n              <paper-input label=\"Email\" id=\"email\" type=\"email\" value=\"{{email}}\" on-keydown=\"_keyDown\" error-message=\"Invalid email\"></paper-input>\n              <paper-input id=\"password\" label=\"Password\" value=\"{{_password}}\" type=\"password\" on-keydown=\"_keyDown\" error-message=\"Passwords are at least 8 characters\"></paper-input>\n            </div>\n            <div class=\"card-actions\">\n              <ha-progress-button on-click=\"_handleLogin\" progress=\"[[_requestInProgress]]\">Sign in</ha-progress-button>\n              <button class=\"link\" hidden=\"[[_requestInProgress]]\" on-click=\"_handleForgotPassword\">forgot password?</button>\n            </div>\n          </paper-card>\n\n          <paper-card>\n            <paper-item on-click=\"_handleRegister\">\n              <paper-item-body two-line=\"\">\n                Start your free 1 month trial\n                <div secondary=\"\">No payment information necessary</div>\n              </paper-item-body>\n              <iron-icon icon=\"hass:chevron-right\"></iron-icon>\n            </paper-item>\n          </paper-card>\n        </ha-config-section>\n      </div>\n    </hass-subpage>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      isWide: Boolean,\n      email: {\n        type: String,\n        notify: true,\n      },\n      _password: {\n        type: String,\n        value: '',\n      },\n      _requestInProgress: {\n        type: Boolean,\n        value: false,\n      },\n      flashMessage: {\n        type: String,\n        notify: true,\n      },\n      _error: String,\n    };\n  }\n\n  static get observers() {\n    return [\n      '_inputChanged(email, _password)'\n    ];\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    if (this.flashMessage) {\n      // Wait for DOM to be drawn\n      requestAnimationFrame(() =>\n        requestAnimationFrame(() =>\n          this.$.flashRipple.simulatedRipple()));\n    }\n  }\n\n  _inputChanged() {\n    this.$.email.invalid = false;\n    this.$.password.invalid = false;\n    this._error = false;\n  }\n\n  _keyDown(ev) {\n    // validate on enter\n    if (ev.keyCode === 13) {\n      this._handleLogin();\n      ev.preventDefault();\n    }\n  }\n\n  _handleLogin() {\n    let invalid = false;\n\n    if (!this.email || !this.email.includes('@')) {\n      this.$.email.invalid = true;\n      this.$.email.focus();\n      invalid = true;\n    }\n\n    if (this._password.length < 8) {\n      this.$.password.invalid = true;\n\n      if (!invalid) {\n        invalid = true;\n        this.$.password.focus();\n      }\n    }\n\n    if (invalid) return;\n\n    this._requestInProgress = true;\n\n    this.hass.callApi('post', 'cloud/login', {\n      email: this.email,\n      password: this._password,\n    }).then((account) => {\n      this.fire('ha-account-refreshed', { account: account });\n      this.setProperties({\n        email: '',\n        _password: '',\n      });\n    }, (err) => {\n      // Do this before setProperties because changing it clears errors.\n      this._password = '';\n\n      const errCode = err && err.body && err.body.code;\n      if (errCode === 'PasswordChangeRequired') {\n        alert('You need to change your password before logging in.');\n        this.navigate('/config/cloud/forgot-password');\n        return;\n      }\n\n      const props = {\n        _requestInProgress: false,\n        _error: (err && err.body && err.body.message) ? err.body.message : 'Unknown error',\n      };\n\n      if (errCode === 'UserNotConfirmed') {\n        props._error = 'You need to confirm your email before logging in.';\n      }\n\n      this.setProperties(props);\n      this.$.email.focus();\n    });\n  }\n\n  _handleRegister() {\n    this.flashMessage = '';\n    this.navigate('/config/cloud/register');\n  }\n\n  _handleForgotPassword() {\n    this.flashMessage = '';\n    this.navigate('/config/cloud/forgot-password');\n  }\n\n  _dismissFlash() {\n    // give some time to let the ripple finish.\n    setTimeout(() => { this.flashMessage = ''; }, 200);\n  }\n}\n\ncustomElements.define('ha-config-cloud-login', HaConfigCloudLogin);\n","import '@polymer/paper-card/paper-card.js';\nimport '@polymer/paper-input/paper-input.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport '../../../components/buttons/ha-progress-button.js';\nimport '../../../layouts/hass-subpage.js';\nimport '../../../resources/ha-style.js';\nimport '../ha-config-section.js';\nimport EventsMixin from '../../../mixins/events-mixin.js';\n\n/*\n * @appliesMixin EventsMixin\n */\nclass HaConfigCloudRegister extends EventsMixin(PolymerElement) {\n  static get template() {\n    return html`\n    <style include=\"iron-flex ha-style\">\n      [slot=introduction] {\n        margin: -1em 0;\n      }\n      [slot=introduction] a {\n        color: var(--primary-color);\n      }\n      a {\n        color: var(--primary-color);\n      }\n      paper-card {\n        display: block;\n      }\n      paper-item {\n        cursor: pointer;\n      }\n      paper-card:last-child {\n        margin-top: 24px;\n      }\n      h1 {\n        @apply --paper-font-headline;\n        margin: 0;\n      }\n      .error {\n        color: var(--google-red-500);\n      }\n      .card-actions {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n      }\n      [hidden] {\n        display: none;\n      }\n    </style>\n    <hass-subpage header=\"Register Account\">\n      <div class=\"content\">\n        <ha-config-section is-wide=\"[[isWide]]\">\n          <span slot=\"header\">Start your free trial</span>\n          <div slot=\"introduction\">\n            <p>\n              Create an account to start your free one month trial with Home Assistant Cloud. No payment information necessary.\n            </p>\n            <p>\n              The trial will give you access to all the benefits of Home Assistant Cloud, including:\n            </p>\n            <ul>\n              <li>Integration with Google Assistant</li>\n              <li>Integration with Amazon Alexa</li>\n            </ul>\n            <p>\n              This service is run by our partner <a href='https://www.nabucasa.com' target='_blank'>Nabu&nbsp;Casa,&nbsp;Inc</a>, a company founded by the founders of Home Assistant and Hass.io.\n            </p>\n\n            <p>\n              By registering an account you agree to the following terms and conditions.\n              </p><ul>\n                <li><a href=\"https://home-assistant.io/tos/\" target=\"_blank\">Terms and Conditions</a></li>\n                <li><a href=\"https://home-assistant.io/privacy/\" target=\"_blank\">Privacy Policy</a></li>\n              </ul>\n            </p>\n          </div>\n\n          <paper-card>\n            <div class=\"card-content\">\n              <div class=\"header\">\n                <h1>Create Account</h1>\n                <div class=\"error\" hidden$=\"[[!_error]]\">[[_error]]</div>\n              </div>\n              <paper-input autofocus=\"\" id=\"email\" label=\"Email address\" type=\"email\" value=\"{{email}}\" on-keydown=\"_keyDown\" error-message=\"Invalid email\"></paper-input>\n              <paper-input id=\"password\" label=\"Password\" value=\"{{_password}}\" type=\"password\" on-keydown=\"_keyDown\" error-message=\"Your password needs to be at least 8 characters\"></paper-input>\n            </div>\n            <div class=\"card-actions\">\n              <ha-progress-button on-click=\"_handleRegister\" progress=\"[[_requestInProgress]]\">Start trial</ha-progress-button>\n              <button class=\"link\" hidden=\"[[_requestInProgress]]\" on-click=\"_handleResendVerifyEmail\">Resend confirmation email</button>\n            </div>\n          </paper-card>\n        </ha-config-section>\n      </div>\n    </hass-subpage>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      isWide: Boolean,\n      email: {\n        type: String,\n        notify: true,\n      },\n\n      _requestInProgress: {\n        type: Boolean,\n        value: false,\n      },\n      _password: {\n        type: String,\n        value: '',\n      },\n      _error: {\n        type: String,\n        value: '',\n      },\n    };\n  }\n\n  static get observers() {\n    return [\n      '_inputChanged(email, _password)'\n    ];\n  }\n\n  _inputChanged() {\n    this._error = '';\n    this.$.email.invalid = false;\n    this.$.password.invalid = false;\n  }\n\n  _keyDown(ev) {\n    // validate on enter\n    if (ev.keyCode === 13) {\n      this._handleRegister();\n      ev.preventDefault();\n    }\n  }\n\n  _handleRegister() {\n    let invalid = false;\n\n    if (!this.email || !this.email.includes('@')) {\n      this.$.email.invalid = true;\n      this.$.email.focus();\n      invalid = true;\n    }\n\n    if (this._password.length < 8) {\n      this.$.password.invalid = true;\n\n      if (!invalid) {\n        invalid = true;\n        this.$.password.focus();\n      }\n    }\n\n    if (invalid) return;\n\n    this._requestInProgress = true;\n\n    this.hass.callApi('post', 'cloud/register', {\n      email: this.email,\n      password: this._password,\n    }).then(() => this._verificationEmailSent(), (err) => {\n      // Do this before setProperties because changing it clears errors.\n      this._password = '';\n\n      this.setProperties({\n        _requestInProgress: false,\n        _error: err && err.body && err.body.message ? err.body.message : 'Unknown error'\n      });\n    });\n  }\n\n  _handleResendVerifyEmail() {\n    if (!this.email) {\n      this.$.email.invalid = true;\n      return;\n    }\n\n    this.hass.callApi('post', 'cloud/resend_confirm', {\n      email: this.email,\n    }).then(() => this._verificationEmailSent(), err => this.setProperties({\n      _error: err && err.body && err.body.message ? err.body.message : 'Unknown error'\n    }));\n  }\n\n  _verificationEmailSent() {\n    this.setProperties({\n      _requestInProgress: false,\n      _password: '',\n    });\n    this.fire('cloud-done', {\n      flashMessage: 'Account created! Check your email for instructions on how to activate your account.'\n    });\n  }\n}\n\ncustomElements.define('ha-config-cloud-register', HaConfigCloudRegister);\n","import '@polymer/app-route/app-route.js';\nimport { timeOut } from '@polymer/polymer/lib/utils/async.js';\nimport { Debouncer } from '@polymer/polymer/lib/utils/debounce.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\n\nimport '../ha-config-section.js';\nimport './ha-config-cloud-account.js';\nimport './ha-config-cloud-forgot-password.js';\nimport './ha-config-cloud-login.js';\nimport './ha-config-cloud-register.js';\nimport NavigateMixin from '../../../mixins/navigate-mixin.js';\n\nconst LOGGED_IN_URLS = [\n  '/cloud/account',\n];\nconst NOT_LOGGED_IN_URLS = [\n  '/cloud/login',\n  '/cloud/register',\n  '/cloud/forgot-password',\n];\n\n/*\n * @appliesMixin NavigateMixin\n */\nclass HaConfigCloud extends NavigateMixin(PolymerElement) {\n  static get template() {\n    return html`\n  <app-route route=\"[[route]]\" pattern=\"/cloud/:page\" data=\"{{_routeData}}\" tail=\"{{_routeTail}}\"></app-route>\n\n  <template is=\"dom-if\" if=\"[[_equals(_routeData.page, &quot;account&quot;)]]\" restamp=\"\">\n    <ha-config-cloud-account hass=\"[[hass]]\" account=\"[[account]]\" is-wide=\"[[isWide]]\"></ha-config-cloud-account>\n  </template>\n\n  <template is=\"dom-if\" if=\"[[_equals(_routeData.page, &quot;login&quot;)]]\" restamp=\"\">\n    <ha-config-cloud-login page-name=\"login\" hass=\"[[hass]]\" is-wide=\"[[isWide]]\" email=\"{{_loginEmail}}\" flash-message=\"{{_flashMessage}}\"></ha-config-cloud-login>\n  </template>\n\n  <template is=\"dom-if\" if=\"[[_equals(_routeData.page, &quot;register&quot;)]]\" restamp=\"\">\n    <ha-config-cloud-register page-name=\"register\" hass=\"[[hass]]\" is-wide=\"[[isWide]]\" email=\"{{_loginEmail}}\"></ha-config-cloud-register>\n  </template>\n\n  <template is=\"dom-if\" if=\"[[_equals(_routeData.page, &quot;forgot-password&quot;)]]\" restamp=\"\">\n    <ha-config-cloud-forgot-password page-name=\"forgot-password\" hass=\"[[hass]]\" email=\"{{_loginEmail}}\"></ha-config-cloud-forgot-password>\n  </template>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      isWide: Boolean,\n      loadingAccount: {\n        type: Boolean,\n        value: false\n      },\n      account: {\n        type: Object,\n      },\n      _flashMessage: {\n        type: String,\n        value: '',\n      },\n\n      route: Object,\n\n      _routeData: Object,\n      _routeTail: Object,\n      _loginEmail: String,\n    };\n  }\n\n  static get observers() {\n    return [\n      '_checkRoute(route, account)'\n    ];\n  }\n\n  ready() {\n    super.ready();\n    this.addEventListener('cloud-done', (ev) => {\n      this._flashMessage = ev.detail.flashMessage;\n      this.navigate('/config/cloud/login');\n    });\n  }\n\n  _checkRoute(route) {\n    if (!route || route.path.substr(0, 6) !== '/cloud') return;\n\n    this._debouncer = Debouncer.debounce(\n      this._debouncer,\n      timeOut.after(0),\n      () => {\n        if (!this.account && !NOT_LOGGED_IN_URLS.includes(route.path)) {\n          this.navigate('/config/cloud/login', true);\n        } else if (this.account && !LOGGED_IN_URLS.includes(route.path)) {\n          this.navigate('/config/cloud/account', true);\n        }\n      }\n    );\n  }\n\n  _equals(a, b) {\n    return a === b;\n  }\n}\n\ncustomElements.define('ha-config-cloud', HaConfigCloud);\n"],"sourceRoot":""}