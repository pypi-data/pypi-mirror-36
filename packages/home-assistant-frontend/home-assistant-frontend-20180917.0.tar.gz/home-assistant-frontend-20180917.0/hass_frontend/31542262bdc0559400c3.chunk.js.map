{"version":3,"sources":["webpack:///./src/panels/config/ha-panel-config.js"],"names":["Promise","all","__webpack_require__","e","then","bind","customElements","define","Object","_mixins_navigate_mixin_js__WEBPACK_IMPORTED_MODULE_6__","a","_polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_3__","template","_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_2__","properties","hass","narrow","Boolean","showMenu","account","type","value","route","observer","_routeData","wide","wideSidebar","isWide","computed","ready","super","_common_config_is_component_loaded_js__WEBPACK_IMPORTED_MODULE_5__","this","callApi","addEventListener","ev","detail","computeIsWide","_routeChanged","path","prefix","navigate","_equals","b"],"mappings":"2JAUAA,QAAAC,KAAAC,EAAAC,EAAA,GAAAD,EAAAC,EAAA,GAAAD,EAAAC,EAAA,GAAAD,EAAAC,EAAA,IAAAD,EAAAC,EAAA,MAAAC,KAAAF,EAAAG,KAAA,WACAH,EAAAC,EAAA,IAAAC,KAAAF,EAAAG,KAAA,WACAH,EAAAC,EAAA,IAAAC,KAAAF,EAAAG,KAAA,WACAH,EAAAC,EAAA,IAAAC,KAAAF,EAAAG,KAAA,WACAH,EAAAC,EAAA,IAAAC,KAAAF,EAAAG,KAAA,WACAH,EAAAC,EAAA,IAAAC,KAAAF,EAAAG,KAAA,WACAL,QAAAC,KAAAC,EAAAC,EAAA,GAAAD,EAAAC,EAAA,GAAAD,EAAAC,EAAA,GAAAD,EAAAC,EAAA,IAAAD,EAAAC,EAAA,MAAAC,KAAAF,EAAAG,KAAA,WACAH,EAAAC,EAAA,IAAAC,KAAAF,EAAAG,KAAA,WACAH,EAAAC,EAAA,IAAAC,KAAAF,EAAAG,KAAA,WACAH,EAAAC,EAAA,IAAAC,KAAAF,EAAAG,KAAA,WAiKAC,eAAeC,OAAO,gCA5JMC,OAAAC,EAAAC,EA4JN,CA5JoBC,EAAAD,IACxCE,sBACE,OAAOC,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAqGTC,wBACE,OACEC,KAAMP,OACNQ,OAAQC,QACRC,SAAUD,QACVE,SACEC,KAAMZ,OACNa,MAAO,MAGTC,OACEF,KAAMZ,OACNe,SAAU,iBAGZC,WAAYhB,OAEZiB,KAAMR,QACNS,YAAaT,QAEbU,QACEP,KAAMH,QACNW,SAAU,+CAKhBC,QACEC,MAAMD,QACFrB,OAAAuB,EAAArB,EAAAF,CAAkBwB,KAAKjB,KAAM,UAC/BiB,KAAKjB,KAAKkB,QAAQ,MAAO,iBACtB7B,KAAMe,IAAca,KAAKb,QAAUA,GAAY,QAEpDa,KAAKE,iBAAiB,uBAAyBC,IAC7CH,KAAKb,QAAUgB,EAAGC,OAAOjB,UAI7BkB,cAAcnB,EAAUQ,EAAaD,GACnC,OAAOP,EAAWQ,EAAcD,EAGlCa,cAAchB,GACO,KAAfA,EAAMiB,MAAgC,YAAjBjB,EAAMkB,QAC7BR,KAAKS,SAAS,wBAIlBC,QAAQhC,EAAGiC,GACT,OAAOjC,IAAMiC","file":"31542262bdc0559400c3.chunk.js","sourcesContent":["import '@polymer/app-route/app-route.js';\nimport '@polymer/iron-media-query/iron-media-query.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport '../../layouts/hass-error-screen.js';\n\nimport isComponentLoaded from '../../common/config/is_component_loaded.js';\nimport NavigateMixin from '../../mixins/navigate-mixin.js';\n\nimport(/* webpackChunkName: \"panel-config-automation\" */ './automation/ha-config-automation.js');\nimport(/* webpackChunkName: \"panel-config-cloud\" */ './cloud/ha-config-cloud.js');\nimport(/* webpackChunkName: \"panel-config-config\" */ './config-entries/ha-config-entries.js');\nimport(/* webpackChunkName: \"panel-config-core\" */ './core/ha-config-core.js');\nimport(/* webpackChunkName: \"panel-config-customize\" */ './customize/ha-config-customize.js');\nimport(/* webpackChunkName: \"panel-config-dashboard\" */ './dashboard/ha-config-dashboard.js');\nimport(/* webpackChunkName: \"panel-config-script\" */ './script/ha-config-script.js');\nimport(/* webpackChunkName: \"panel-config-users\" */ './users/ha-config-users.js');\nimport(/* webpackChunkName: \"panel-config-zwave\" */ './zwave/ha-config-zwave.js');\nimport(/* webpackChunkName: \"panel-config-overview\" */ './overview/ha-config-overview.js');\n\n/*\n * @appliesMixin NavigateMixin\n */\nclass HaPanelConfig extends NavigateMixin(PolymerElement) {\n  static get template() {\n    return html`\n    <app-route\n      route='[[route]]'\n      pattern='/:page'\n      data=\"{{_routeData}}\"\n    ></app-route>\n\n    <iron-media-query query=\"(min-width: 1040px)\" query-matches=\"{{wide}}\">\n    </iron-media-query>\n    <iron-media-query query=\"(min-width: 1296px)\" query-matches=\"{{wideSidebar}}\">\n    </iron-media-query>\n\n    <template is=\"dom-if\" if='[[_equals(_routeData.page, \"core\")]]' restamp>\n      <ha-config-core\n        page-name='core'\n        hass='[[hass]]'\n        is-wide='[[isWide]]'\n      ></ha-config-core>\n    </template>\n\n    <template is=\"dom-if\" if='[[_equals(_routeData.page, \"cloud\")]]' restamp>\n      <ha-config-cloud\n        page-name='cloud'\n        route='[[route]]'\n        hass='[[hass]]'\n        is-wide='[[isWide]]'\n        account='[[account]]'\n      ></ha-config-cloud>\n    </template>\n\n    <template is=\"dom-if\" if='[[_equals(_routeData.page, \"dashboard\")]]'>\n      <ha-config-dashboard\n        page-name='dashboard'\n        hass='[[hass]]'\n        is-wide='[[isWide]]'\n        account='[[account]]'\n        narrow='[[narrow]]'\n        show-menu='[[showMenu]]'\n      ></ha-config-dashboard>\n    </template>\n\n    <template is=\"dom-if\" if='[[_equals(_routeData.page, \"automation\")]]' restamp>\n      <ha-config-automation\n        page-name='automation'\n        route='[[route]]'\n        hass='[[hass]]'\n        is-wide='[[isWide]]'\n      ></ha-config-automation>\n    </template>\n\n    <template is=\"dom-if\" if='[[_equals(_routeData.page, \"script\")]]' restamp>\n      <ha-config-script\n        page-name='script'\n        route='[[route]]'\n        hass='[[hass]]'\n        is-wide='[[isWide]]'\n      ></ha-config-script>\n    </template>\n\n    <template is=\"dom-if\" if='[[_equals(_routeData.page, \"zwave\")]]' restamp>\n      <ha-config-zwave\n        page-name='zwave'\n        hass='[[hass]]'\n        is-wide='[[isWide]]'\n      ></ha-config-zwave>\n    </template>\n\n    <template is=\"dom-if\" if='[[_equals(_routeData.page, \"customize\")]]' restamp>\n      <ha-config-customize\n        page-name='customize'\n        hass='[[hass]]'\n        is-wide='[[isWide]]'\n      ></ha-config-customize>\n    </template>\n\n    <template is=\"dom-if\" if='[[_equals(_routeData.page, \"integrations\")]]' restamp>\n      <ha-config-entries\n        page-name='integrations'\n        hass='[[hass]]'\n        is-wide='[[isWide]]'\n      ></ha-config-entries>\n    </template>\n\n    <template is=\"dom-if\" if='[[_equals(_routeData.page, \"users\")]]' restamp>\n      <ha-config-users\n        page-name='users'\n        route='[[route]]'\n        hass='[[hass]]'\n      ></ha-config-users>\n    </template>\n\n    <template is=\"dom-if\" if='[[_equals(_routeData.page, \"overview\")]]' restamp>\n      <ha-config-overview\n        page-name='overview'\n        route='[[route]]'\n        hass='[[hass]]'\n      ></ha-config-overview>\n    </template>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      narrow: Boolean,\n      showMenu: Boolean,\n      account: {\n        type: Object,\n        value: null,\n      },\n\n      route: {\n        type: Object,\n        observer: '_routeChanged',\n      },\n\n      _routeData: Object,\n\n      wide: Boolean,\n      wideSidebar: Boolean,\n\n      isWide: {\n        type: Boolean,\n        computed: 'computeIsWide(showMenu, wideSidebar, wide)'\n      },\n    };\n  }\n\n  ready() {\n    super.ready();\n    if (isComponentLoaded(this.hass, 'cloud')) {\n      this.hass.callApi('get', 'cloud/account')\n        .then((account) => { this.account = account; }, () => {});\n    }\n    this.addEventListener('ha-account-refreshed', (ev) => {\n      this.account = ev.detail.account;\n    });\n  }\n\n  computeIsWide(showMenu, wideSidebar, wide) {\n    return showMenu ? wideSidebar : wide;\n  }\n\n  _routeChanged(route) {\n    if (route.path === '' && route.prefix === '/config') {\n      this.navigate('/config/dashboard', true);\n    }\n  }\n\n  _equals(a, b) {\n    return a === b;\n  }\n}\n\ncustomElements.define('ha-panel-config', HaPanelConfig);\n"],"sourceRoot":""}