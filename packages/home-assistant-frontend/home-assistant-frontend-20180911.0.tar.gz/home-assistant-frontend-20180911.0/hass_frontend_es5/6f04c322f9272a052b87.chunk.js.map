{"version":3,"sources":["webpack:///./node_modules/@polymer/paper-checkbox/paper-checkbox.js","webpack:///./src/components/ha-paper-slider.js","webpack:///./src/components/ha-form.js","webpack:///./node_modules/@polymer/paper-dialog-scrollable/paper-dialog-scrollable.js","webpack:///./src/panels/profile/ha-mfa-module-setup-flow.js"],"names":["_polymer_paper_behaviors_paper_inky_focus_behavior_js__WEBPACK_IMPORTED_MODULE_5__","__webpack_require__","$_documentContainer","document","createElement","setAttribute","innerHTML","head","appendChild","content","Object","_polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_3__","a","is","behaviors","_polymer_paper_behaviors_paper_checked_element_behavior_js__WEBPACK_IMPORTED_MODULE_2__","hostAttributes","role","aria-checked","tabindex","properties","ariaActiveAttribute","type","String","value","attached","_polymer_polymer_lib_utils_render_status_js__WEBPACK_IMPORTED_MODULE_4__","this","getComputedStyleValue","trim","checkboxSizeText","units","unitsMatches","match","checkboxSize","parseFloat","defaultInkSize","Math","floor","updateStyles","--paper-checkbox-ink-size","_computeCheckboxClass","checked","invalid","className","_computeCheckmarkClass","_createRipple","_rippleContainer","$","checkboxContainer","b","call","PaperSliderClass","customElements","get","HaPaperSlider","tpl","template","styleEl","querySelector","define","HaForm","_mixins_events_mixin_js__WEBPACK_IMPORTED_MODULE_9__","_polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_7__","_createClass","key","val","Array","isArray","schema","indexOf","obj","item","name","ev","set","model","detail","unmaskedPassword","_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_6__","_templateObject","data","notify","error","computeLabel","Function","computeError","_polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_4__","_template","_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_5__","dialogElement","scrollTarget","scrollable","ready","_ensureTarget","classList","add","requestAnimationFrame","updateScrollState","bind","toggleClass","scrollTop","offsetHeight","scrollHeight","parentElement","_polymer_paper_dialog_behavior_paper_dialog_behavior_js__WEBPACK_IMPORTED_MODULE_2__","sizingTarget","remove","619","module","__webpack_exports__","r","_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_4__","_polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_5__","_mixins_localize_mixin_js__WEBPACK_IMPORTED_MODULE_10__","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","prototype","freeze","raw","instance","HaMfaModuleSetupFlow","_this2","__proto__","getPrototypeOf","addEventListener","keyCode","_submitStep","_this3","hass","_ref","continueFlowId","mfaModuleId","dialogClosedCallback","_instance","_dialogClosedCallback","_createdFromHandler","_loading","_opened","fetchStep","callWS","flow_id","mfa_module_id","curInstance","then","step","_processStep","setTimeout","dialog","center","_this4","_errorMsg","_step","user_input","_stepData","err","body","message","errors","keys","flowFinished","includes","_flowDone","localize","handler","reason","step_id","args","placeholders","description_placeholders","forEach","push","_hass","Number","Boolean"],"mappings":"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","file":"6f04c322f9272a052b87.chunk.js","sourcesContent":["/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n/**\nMaterial design: [Checkbox](https://www.google.com/design/spec/components/selection-controls.html#selection-controls-checkbox)\n\n`paper-checkbox` is a button that can be either checked or unchecked.  User\ncan tap the checkbox to check or uncheck it.  Usually you use checkboxes\nto allow user to select multiple options from a set.  If you have a single\nON/OFF option, avoid using a single checkbox and use `paper-toggle-button`\ninstead.\n\nExample:\n\n    <paper-checkbox>label</paper-checkbox>\n\n    <paper-checkbox checked> label</paper-checkbox>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-checkbox-unchecked-background-color` | Checkbox background color when the input is not checked | `transparent`\n`--paper-checkbox-unchecked-color` | Checkbox border color when the input is not checked | `--primary-text-color`\n`--paper-checkbox-unchecked-ink-color` | Selected/focus ripple color when the input is not checked | `--primary-text-color`\n`--paper-checkbox-checked-color` | Checkbox color when the input is checked | `--primary-color`\n`--paper-checkbox-checked-ink-color` | Selected/focus ripple color when the input is checked | `--primary-color`\n`--paper-checkbox-checkmark-color` | Checkmark color | `white`\n`--paper-checkbox-label-color` | Label color | `--primary-text-color`\n`--paper-checkbox-label-checked-color` | Label color when the input is checked | `--paper-checkbox-label-color`\n`--paper-checkbox-label-spacing` | Spacing between the label and the checkbox | `8px`\n`--paper-checkbox-label` | Mixin applied to the label | `{}`\n`--paper-checkbox-label-checked` | Mixin applied to the label when the input is checked | `{}`\n`--paper-checkbox-error-color` | Checkbox color when invalid | `--error-color`\n`--paper-checkbox-size` | Size of the checkbox | `18px`\n`--paper-checkbox-ink-size` | Size of the ripple | `48px`\n`--paper-checkbox-margin` | Margin around the checkbox container | `initial`\n`--paper-checkbox-vertical-align` | Vertical alignment of the checkbox container | `middle`\n\nThis element applies the mixin `--paper-font-common-base` but does not import `paper-styles/typography.html`.\nIn order to apply the `Roboto` font to this element, make sure you've imported `paper-styles/typography.html`.\n\n@demo demo/index.html\n*/\n/*\n  FIXME(polymer-modulizer): the above comments were extracted\n  from HTML and may be out of place here. Review them and\n  then delete this comment!\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport '@polymer/paper-styles/default-theme.js';\nimport { PaperCheckedElementBehavior } from '@polymer/paper-behaviors/paper-checked-element-behavior.js';\nimport { Polymer } from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport { afterNextRender } from '@polymer/polymer/lib/utils/render-status.js';\nimport { PaperInkyFocusBehaviorImpl } from '@polymer/paper-behaviors/paper-inky-focus-behavior.js';\nconst $_documentContainer = document.createElement('template');\n$_documentContainer.setAttribute('style', 'display: none;');\n\n$_documentContainer.innerHTML = `<dom-module id=\"paper-checkbox\">\n  <template strip-whitespace=\"\">\n    <style>\n      :host {\n        display: inline-block;\n        white-space: nowrap;\n        cursor: pointer;\n        --calculated-paper-checkbox-size: var(--paper-checkbox-size, 18px);\n        /* -1px is a sentinel for the default and is replaced in \\`attached\\`. */\n        --calculated-paper-checkbox-ink-size: var(--paper-checkbox-ink-size, -1px);\n        @apply --paper-font-common-base;\n        line-height: 0;\n        -webkit-tap-highlight-color: transparent;\n      }\n\n      :host([hidden]) {\n        display: none !important;\n      }\n\n      :host(:focus) {\n        outline: none;\n      }\n\n      .hidden {\n        display: none;\n      }\n\n      #checkboxContainer {\n        display: inline-block;\n        position: relative;\n        width: var(--calculated-paper-checkbox-size);\n        height: var(--calculated-paper-checkbox-size);\n        min-width: var(--calculated-paper-checkbox-size);\n        margin: var(--paper-checkbox-margin, initial);\n        vertical-align: var(--paper-checkbox-vertical-align, middle);\n        background-color: var(--paper-checkbox-unchecked-background-color, transparent);\n      }\n\n      #ink {\n        position: absolute;\n\n        /* Center the ripple in the checkbox by negative offsetting it by\n         * (inkWidth - rippleWidth) / 2 */\n        top: calc(0px - (var(--calculated-paper-checkbox-ink-size) - var(--calculated-paper-checkbox-size)) / 2);\n        left: calc(0px - (var(--calculated-paper-checkbox-ink-size) - var(--calculated-paper-checkbox-size)) / 2);\n        width: var(--calculated-paper-checkbox-ink-size);\n        height: var(--calculated-paper-checkbox-ink-size);\n        color: var(--paper-checkbox-unchecked-ink-color, var(--primary-text-color));\n        opacity: 0.6;\n        pointer-events: none;\n      }\n\n      #ink:dir(rtl) {\n        right: calc(0px - (var(--calculated-paper-checkbox-ink-size) - var(--calculated-paper-checkbox-size)) / 2);\n        left: auto;\n      }\n\n      #ink[checked] {\n        color: var(--paper-checkbox-checked-ink-color, var(--primary-color));\n      }\n\n      #checkbox {\n        position: relative;\n        box-sizing: border-box;\n        height: 100%;\n        border: solid 2px;\n        border-color: var(--paper-checkbox-unchecked-color, var(--primary-text-color));\n        border-radius: 2px;\n        pointer-events: none;\n        -webkit-transition: background-color 140ms, border-color 140ms;\n        transition: background-color 140ms, border-color 140ms;\n      }\n\n      /* checkbox checked animations */\n      #checkbox.checked #checkmark {\n        -webkit-animation: checkmark-expand 140ms ease-out forwards;\n        animation: checkmark-expand 140ms ease-out forwards;\n      }\n\n      @-webkit-keyframes checkmark-expand {\n        0% {\n          -webkit-transform: scale(0, 0) rotate(45deg);\n        }\n        100% {\n          -webkit-transform: scale(1, 1) rotate(45deg);\n        }\n      }\n\n      @keyframes checkmark-expand {\n        0% {\n          transform: scale(0, 0) rotate(45deg);\n        }\n        100% {\n          transform: scale(1, 1) rotate(45deg);\n        }\n      }\n\n      #checkbox.checked {\n        background-color: var(--paper-checkbox-checked-color, var(--primary-color));\n        border-color: var(--paper-checkbox-checked-color, var(--primary-color));\n      }\n\n      #checkmark {\n        position: absolute;\n        width: 36%;\n        height: 70%;\n        border-style: solid;\n        border-top: none;\n        border-left: none;\n        border-right-width: calc(2/15 * var(--calculated-paper-checkbox-size));\n        border-bottom-width: calc(2/15 * var(--calculated-paper-checkbox-size));\n        border-color: var(--paper-checkbox-checkmark-color, white);\n        -webkit-transform-origin: 97% 86%;\n        transform-origin: 97% 86%;\n        box-sizing: content-box; /* protect against page-level box-sizing */\n      }\n\n      #checkmark:dir(rtl) {\n        -webkit-transform-origin: 50% 14%;\n        transform-origin: 50% 14%;\n      }\n\n      /* label */\n      #checkboxLabel {\n        position: relative;\n        display: inline-block;\n        vertical-align: middle;\n        padding-left: var(--paper-checkbox-label-spacing, 8px);\n        white-space: normal;\n        line-height: normal;\n        color: var(--paper-checkbox-label-color, var(--primary-text-color));\n        @apply --paper-checkbox-label;\n      }\n\n      :host([checked]) #checkboxLabel {\n        color: var(--paper-checkbox-label-checked-color, var(--paper-checkbox-label-color, var(--primary-text-color)));\n        @apply --paper-checkbox-label-checked;\n      }\n\n      #checkboxLabel:dir(rtl) {\n        padding-right: var(--paper-checkbox-label-spacing, 8px);\n        padding-left: 0;\n      }\n\n      #checkboxLabel[hidden] {\n        display: none;\n      }\n\n      /* disabled state */\n\n      :host([disabled]) #checkbox {\n        opacity: 0.5;\n        border-color: var(--paper-checkbox-unchecked-color, var(--primary-text-color));\n      }\n\n      :host([disabled][checked]) #checkbox {\n        background-color: var(--paper-checkbox-unchecked-color, var(--primary-text-color));\n        opacity: 0.5;\n      }\n\n      :host([disabled]) #checkboxLabel  {\n        opacity: 0.65;\n      }\n\n      /* invalid state */\n      #checkbox.invalid:not(.checked) {\n        border-color: var(--paper-checkbox-error-color, var(--error-color));\n      }\n    </style>\n\n    <div id=\"checkboxContainer\">\n      <div id=\"checkbox\" class\\$=\"[[_computeCheckboxClass(checked, invalid)]]\">\n        <div id=\"checkmark\" class\\$=\"[[_computeCheckmarkClass(checked)]]\"></div>\n      </div>\n    </div>\n\n    <div id=\"checkboxLabel\"><slot></slot></div>\n  </template>\n\n  \n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\nPolymer({\n  is: 'paper-checkbox',\n\n  behaviors: [PaperCheckedElementBehavior],\n\n  /** @private */\n  hostAttributes: {role: 'checkbox', 'aria-checked': false, tabindex: 0},\n\n  properties: {\n    /**\n     * Fired when the checked state changes due to user interaction.\n     *\n     * @event change\n     */\n\n    /**\n     * Fired when the checked state changes.\n     *\n     * @event iron-change\n     */\n    ariaActiveAttribute: {type: String, value: 'aria-checked'}\n  },\n\n  attached: function() {\n    // Wait until styles have resolved to check for the default sentinel.\n    // See polymer#4009 for more details.\n    afterNextRender(this, function() {\n      var inkSize =\n          this.getComputedStyleValue('--calculated-paper-checkbox-ink-size')\n              .trim();\n      // If unset, compute and set the default `--paper-checkbox-ink-size`.\n      if (inkSize === '-1px') {\n        var checkboxSizeText =\n            this.getComputedStyleValue('--calculated-paper-checkbox-size')\n                .trim();\n\n        var units = 'px';\n        var unitsMatches = checkboxSizeText.match(/[A-Za-z]+$/);\n        if (unitsMatches !== null) {\n          units = unitsMatches[0];\n        }\n\n        var checkboxSize = parseFloat(checkboxSizeText);\n        var defaultInkSize = (8 / 3) * checkboxSize;\n\n        if (units === 'px') {\n          defaultInkSize = Math.floor(defaultInkSize);\n\n          // The checkbox and ripple need to have the same parity so that their\n          // centers align.\n          if (defaultInkSize % 2 !== checkboxSize % 2) {\n            defaultInkSize++;\n          }\n        }\n\n        this.updateStyles({\n          '--paper-checkbox-ink-size': defaultInkSize + units,\n        });\n      }\n    });\n  },\n\n  _computeCheckboxClass: function(checked, invalid) {\n    var className = '';\n    if (checked) {\n      className += 'checked ';\n    }\n    if (invalid) {\n      className += 'invalid';\n    }\n    return className;\n  },\n\n  _computeCheckmarkClass: function(checked) {\n    return checked ? '' : 'hidden';\n  },\n\n  // create ripple inside the checkboxContainer\n  _createRipple: function() {\n    this._rippleContainer = this.$.checkboxContainer;\n    return PaperInkyFocusBehaviorImpl._createRipple.call(this);\n  }\n\n});\n","import '@polymer/paper-slider/paper-slider.js';\n\n/**\n* @polymer\n* @customElement\n* @appliesMixin paper-slider\n*/\nconst PaperSliderClass = customElements.get('paper-slider');\n\nclass HaPaperSlider extends PaperSliderClass {\n  static get template() {\n    const tpl = document.createElement('template');\n    tpl.innerHTML = PaperSliderClass.template.innerHTML;\n    const styleEl = tpl.content.querySelector('style');\n    styleEl.setAttribute('include', 'paper-slider');\n    styleEl.innerHTML = `\n      .pin > .slider-knob > .slider-knob-inner {\n        font-size:  var(--ha-paper-slider-pin-font-size, 10px);\n        line-height: normal;\n      }\n\n      .pin > .slider-knob > .slider-knob-inner::before {\n        top: unset;\n        margin-left: unset;\n\n        bottom: calc(15px + var(--calculated-paper-slider-height)/2);\n        left: 50%;\n        width: 2.2em;\n        height: 2.2em;\n\n        -webkit-transform-origin: left bottom;\n        transform-origin: left bottom;\n        -webkit-transform: rotate(-45deg) scale(0) translate(0);\n        transform: rotate(-45deg) scale(0) translate(0);\n      }\n\n      .pin.expand > .slider-knob > .slider-knob-inner::before {\n        -webkit-transform: rotate(-45deg) scale(1) translate(7px, -7px);\n        transform: rotate(-45deg) scale(1) translate(7px, -7px);\n      }\n\n      .pin > .slider-knob > .slider-knob-inner::after {\n        top: unset;\n        font-size: unset;\n\n        bottom: calc(15px + var(--calculated-paper-slider-height)/2);\n        left: 50%;\n        margin-left: -1.1em;\n        width: 2.2em;\n        height: 2.1em;\n\n        -webkit-transform-origin: center bottom;\n        transform-origin: center bottom;\n        -webkit-transform: scale(0) translate(0);\n        transform: scale(0) translate(0);\n      }\n\n      .pin.expand > .slider-knob > .slider-knob-inner::after {\n        -webkit-transform: scale(1) translate(0, -10px);\n        transform: scale(1) translate(0, -10px);\n      }\n    `;\n    return tpl;\n  }\n}\ncustomElements.define('ha-paper-slider', HaPaperSlider);\n","import '@polymer/paper-checkbox/paper-checkbox.js';\nimport '@polymer/paper-dropdown-menu/paper-dropdown-menu.js';\nimport '@polymer/paper-icon-button/paper-icon-button.js';\nimport '@polymer/paper-input/paper-input.js';\nimport '@polymer/paper-item/paper-item.js';\nimport '@polymer/paper-listbox/paper-listbox.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport './ha-paper-slider.js';\nimport EventsMixin from '../mixins/events-mixin.js';\n\n/*\n * @appliesMixin EventsMixin\n */\nclass HaForm extends EventsMixin(PolymerElement) {\n  static get template() {\n    return html`\n    <style>\n      .error {\n        color: red;\n      }\n    </style>\n    <template is=\"dom-if\" if=\"[[_isArray(schema)]]\" restamp=\"\">\n      <template is=\"dom-if\" if=\"[[error.base]]\">\n          <div class='error'>[[computeError(error.base, schema)]]</div>\n      </template>\n\n      <template is=\"dom-repeat\" items=\"[[schema]]\">\n        <ha-form data=\"[[_getValue(data, item)]]\" schema=\"[[item]]\" error=\"[[_getValue(error, item)]]\" on-data-changed=\"_valueChanged\" compute-label=\"[[computeLabel]]\" compute-error=\"[[computeError]]\"></ha-form>\n      </template>\n    </template>\n    <template is=\"dom-if\" if=\"[[!_isArray(schema)]]\" restamp=\"\">\n      <template is=\"dom-if\" if=\"[[error]]\">\n        <div class=\"error\">[[computeError(error, schema)]]</div>\n      </template>\n\n      <template is=\"dom-if\" if=\"[[_equals(schema.type, &quot;string&quot;)]]\" restamp=\"\">\n        <template is=\"dom-if\" if=\"[[_includes(schema.name, &quot;password&quot;)]]\" restamp=\"\">\n          <paper-input\n            type=\"[[_passwordFieldType(unmaskedPassword)]]\"\n            label=\"[[computeLabel(schema)]]\"\n            value=\"{{data}}\"\n            required=\"[[schema.required]]\"\n            auto-validate=\"[[schema.required]]\"\n            error-message='Required'\n          >\n            <paper-icon-button toggles\n              active=\"{{unmaskedPassword}}\"\n              slot=\"suffix\"\n              icon=\"[[_passwordFieldIcon(unmaskedPassword)]]\"\n              id=\"iconButton\"\n              title=\"Click to toggle between masked and clear password\">\n            </paper-icon-button>\n          </paper-input>\n        </template>\n        <template is=\"dom-if\" if=\"[[!_includes(schema.name, &quot;password&quot;)]]\" restamp=\"\">\n          <paper-input\n            label=\"[[computeLabel(schema)]]\"\n            value=\"{{data}}\"\n            required=\"[[schema.required]]\"\n            auto-validate=\"[[schema.required]]\"\n            error-message='Required'\n          ></paper-input>\n        </template>\n      </template>\n\n      <template is=\"dom-if\" if=\"[[_equals(schema.type, &quot;integer&quot;)]]\" restamp=\"\">\n        <template is=\"dom-if\" if=\"[[_isRange(schema)]]\" restamp=\"\">\n          <div>\n            [[computeLabel(schema)]]\n            <ha-paper-slider pin=\"\" value=\"{{data}}\" min=\"[[schema.valueMin]]\" max=\"[[schema.valueMax]]\"></ha-paper-slider>\n          </div>\n        </template>\n        <template is=\"dom-if\" if=\"[[!_isRange(schema)]]\" restamp=\"\">\n          <paper-input\n            label=\"[[computeLabel(schema)]]\"\n            value=\"{{data}}\"\n            type=\"number\"\n            required=\"[[schema.required]]\"\n            auto-validate=\"[[schema.required]]\"\n            error-message='Required'\n          ></paper-input>\n        </template>\n      </template>\n\n      <template is=\"dom-if\" if=\"[[_equals(schema.type, &quot;float&quot;)]]\" restamp=\"\">\n        <!--TODO-->\n        <paper-input\n          label=\"[[computeLabel(schema)]]\"\n          value=\"{{data}}\"\n          required=\"[[schema.required]]\"\n          auto-validate=\"[[schema.required]]\"\n          error-message='Required'\n        ></paper-input>\n      </template>\n\n      <template is=\"dom-if\" if=\"[[_equals(schema.type, &quot;boolean&quot;)]]\" restamp=\"\">\n        <paper-checkbox checked=\"{{data}}\">[[computeLabel(schema)]]</paper-checkbox>\n      </template>\n\n      <template is=\"dom-if\" if=\"[[_equals(schema.type, &quot;select&quot;)]]\" restamp=\"\">\n        <paper-dropdown-menu label=\"[[computeLabel(schema)]]\">\n          <paper-listbox slot=\"dropdown-content\" attr-for-selected=\"item-name\" selected=\"{{data}}\">\n            <template is=\"dom-repeat\" items=\"[[schema.options]]\">\n              <paper-item item-name$=\"[[_optionValue(item)]]\">[[_optionLabel(item)]]</paper-item>\n            </template>\n          </paper-listbox>\n        </paper-dropdown-menu>\n      </template>\n\n    </template>\n`;\n  }\n\n  static get properties() {\n    return {\n      data: {\n        type: Object,\n        notify: true,\n      },\n      schema: Object,\n      error: Object,\n\n      // A function that will computes the label to be displayed for a given\n      // schema object.\n      computeLabel: {\n        type: Function,\n        value: () => schema => schema && schema.name,\n      },\n\n      // A function that will computes an error message to be displayed for a\n      // given error ID, and relevant schema object\n      computeError: {\n        type: Function,\n        value: () => (error, schema) => error, // eslint-disable-line no-unused-vars\n      },\n    };\n  }\n\n  _isArray(val) {\n    return Array.isArray(val);\n  }\n\n  _isRange(schema) {\n    return ('valueMin' in schema) && ('valueMax' in schema);\n  }\n\n  _equals(a, b) {\n    return a === b;\n  }\n\n  _includes(a, b) {\n    return a.indexOf(b) >= 0;\n  }\n\n  _getValue(obj, item) {\n    if (obj) {\n      return obj[item.name];\n    }\n    return null;\n  }\n\n  _valueChanged(ev) {\n    this.set(['data', ev.model.item.name], ev.detail.value);\n  }\n\n  _passwordFieldType(unmaskedPassword) {\n    return unmaskedPassword ? 'text' : 'password';\n  }\n\n  _passwordFieldIcon(unmaskedPassword) {\n    return unmaskedPassword ? 'hass:eye-off' : 'hass:eye';\n  }\n\n  _optionValue(item) {\n    return Array.isArray(item) ? item[0] : item;\n  }\n\n  _optionLabel(item) {\n    return Array.isArray(item) ? item[1] : item;\n  }\n}\n\ncustomElements.define('ha-form', HaForm);\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n/**\nMaterial design: [Dialogs](https://www.google.com/design/spec/components/dialogs.html)\n\n`paper-dialog-scrollable` implements a scrolling area used in a Material Design dialog. It shows\na divider at the top and/or bottom indicating more content, depending on scroll position. Use this\ntogether with elements implementing `Polymer.PaperDialogBehavior`.\n\n    <paper-dialog-impl>\n      <h2>Header</h2>\n      <paper-dialog-scrollable>\n        Lorem ipsum...\n      </paper-dialog-scrollable>\n      <div class=\"buttons\">\n        <paper-button>OK</paper-button>\n      </div>\n    </paper-dialog-impl>\n\nIt shows a top divider after scrolling if it is not the first child in its parent container,\nindicating there is more content above. It shows a bottom divider if it is scrollable and it is not\nthe last child in its parent container, indicating there is more content below. The bottom divider\nis hidden if it is scrolled to the bottom.\n\nIf `paper-dialog-scrollable` is not a direct child of the element implementing `Polymer.PaperDialogBehavior`,\nremember to set the `dialogElement`:\n\n    <paper-dialog-impl id=\"myDialog\">\n      <h2>Header</h2>\n      <div class=\"my-content-wrapper\">\n        <h4>Sub-header</h4>\n        <paper-dialog-scrollable>\n          Lorem ipsum...\n        </paper-dialog-scrollable>\n      </div>\n      <div class=\"buttons\">\n        <paper-button>OK</paper-button>\n      </div>\n    </paper-dialog-impl>\n\n    <script>\n      var scrollable = Polymer.dom(myDialog).querySelector('paper-dialog-scrollable');\n      scrollable.dialogElement = myDialog;\n    </script>\n\n### Styling\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-dialog-scrollable` | Mixin for the scrollable content | {}\n\n@group Paper Elements\n@element paper-dialog-scrollable\n@demo demo/index.html\n@hero hero.svg\n*/\n/*\n  FIXME(polymer-modulizer): the above comments were extracted\n  from HTML and may be out of place here. Review them and\n  then delete this comment!\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport { PaperDialogBehaviorImpl } from '@polymer/paper-dialog-behavior/paper-dialog-behavior.js';\nimport '@polymer/paper-styles/default-theme.js';\nimport { Polymer } from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nPolymer({\n  _template: html`\n    <style>\n\n      :host {\n        display: block;\n        @apply --layout-relative;\n      }\n\n      :host(.is-scrolled:not(:first-child))::before {\n        content: '';\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        height: 1px;\n        background: var(--divider-color);\n      }\n\n      :host(.can-scroll:not(.scrolled-to-bottom):not(:last-child))::after {\n        content: '';\n        position: absolute;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        height: 1px;\n        background: var(--divider-color);\n      }\n\n      .scrollable {\n        padding: 0 24px;\n\n        @apply --layout-scroll;\n        @apply --paper-dialog-scrollable;\n      }\n\n      .fit {\n        @apply --layout-fit;\n      }\n    </style>\n\n    <div id=\"scrollable\" class=\"scrollable\" on-scroll=\"updateScrollState\">\n      <slot></slot>\n    </div>\n`,\n\n  is: 'paper-dialog-scrollable',\n\n  properties: {\n\n    /**\n     * The dialog element that implements `Polymer.PaperDialogBehavior`\n     * containing this element.\n     * @type {?Node}\n     */\n    dialogElement: {type: Object}\n\n  },\n\n  /**\n   * Returns the scrolling element.\n   */\n  get scrollTarget() {\n    return this.$.scrollable;\n  },\n\n  ready: function() {\n    this._ensureTarget();\n    this.classList.add('no-padding');\n  },\n\n  attached: function() {\n    this._ensureTarget();\n    requestAnimationFrame(this.updateScrollState.bind(this));\n  },\n\n  updateScrollState: function() {\n    this.toggleClass('is-scrolled', this.scrollTarget.scrollTop > 0);\n    this.toggleClass(\n        'can-scroll',\n        this.scrollTarget.offsetHeight < this.scrollTarget.scrollHeight);\n    this.toggleClass(\n        'scrolled-to-bottom',\n        this.scrollTarget.scrollTop + this.scrollTarget.offsetHeight >=\n            this.scrollTarget.scrollHeight);\n  },\n\n  _ensureTarget: function() {\n    // Read parentElement instead of parentNode in order to skip shadowRoots.\n    this.dialogElement = this.dialogElement || this.parentElement;\n    // Check if dialog implements paper-dialog-behavior. If not, fit\n    // scrollTarget to host.\n    if (this.dialogElement && this.dialogElement.behaviors &&\n        this.dialogElement.behaviors.indexOf(PaperDialogBehaviorImpl) >=\n            0) {\n      this.dialogElement.sizingTarget = this.scrollTarget;\n      this.scrollTarget.classList.remove('fit');\n    } else if (this.dialogElement) {\n      this.scrollTarget.classList.add('fit');\n    }\n  }\n});\n","import '@polymer/paper-button/paper-button.js';\nimport '@polymer/paper-dialog-scrollable/paper-dialog-scrollable.js';\nimport '@polymer/paper-dialog/paper-dialog.js';\nimport '@polymer/paper-spinner/paper-spinner.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport '../../components/ha-form.js';\nimport '../../components/ha-markdown.js';\nimport '../../resources/ha-style.js';\n\nimport EventsMixin from '../../mixins/events-mixin.js';\nimport LocalizeMixin from '../../mixins/localize-mixin.js';\n\nlet instance = 0;\n\n/*\n * @appliesMixin LocalizeMixin\n * @appliesMixin EventsMixin\n */\nclass HaMfaModuleSetupFlow extends\n  LocalizeMixin(EventsMixin(PolymerElement)) {\n  static get template() {\n    return html`\n    <style include=\"ha-style-dialog\">\n      .error {\n        color: red;\n      }\n      paper-dialog {\n        max-width: 500px;\n      }\n      ha-markdown img:first-child:last-child,\n      ha-markdown svg:first-child:last-child {\n        display: block;\n        margin: 0 auto;\n      }\n      ha-markdown a {\n        color: var(--primary-color);\n      }\n      .init-spinner {\n        padding: 10px 100px 34px;\n        text-align: center;\n      }\n      .submit-spinner {\n        margin-right: 16px;\n      }\n    </style>\n    <paper-dialog id=\"dialog\" with-backdrop=\"\" opened=\"{{_opened}}\" on-opened-changed=\"_openedChanged\">\n      <h2>\n        <template is=\"dom-if\" if=\"[[_equals(_step.type, 'abort')]]\">\n          Aborted\n        </template>\n        <template is=\"dom-if\" if=\"[[_equals(_step.type, 'create_entry')]]\">\n          Success!\n        </template>\n        <template is=\"dom-if\" if=\"[[_equals(_step.type, 'form')]]\">\n          [[_computeStepTitle(localize, _step)]]\n        </template>\n      </h2>\n      <paper-dialog-scrollable>\n        <template is=\"dom-if\" if=\"[[_errorMsg]]\">\n          <div class='error'>[[_errorMsg]]</div>\n        </template>\n        <template is=\"dom-if\" if=\"[[!_step]]\">\n          <div class='init-spinner'><paper-spinner active></paper-spinner></div>\n        </template>\n        <template is=\"dom-if\" if=\"[[_step]]\">\n          <template is=\"dom-if\" if=\"[[_equals(_step.type, 'abort')]]\">\n            <ha-markdown content=\"[[_computeStepAbortedReason(localize, _step)]]\"></ha-markdown>\n          </template>\n\n          <template is=\"dom-if\" if=\"[[_equals(_step.type, 'create_entry')]]\">\n            <p>Setup done for [[_step.title]]</p>\n          </template>\n\n          <template is=\"dom-if\" if=\"[[_equals(_step.type, 'form')]]\">\n            <template is=\"dom-if\" if=\"[[_computeStepDescription(localize, _step)]]\">\n              <ha-markdown content=\"[[_computeStepDescription(localize, _step)]]\" allow-svg></ha-markdown>\n            </template>\n\n            <ha-form\n              data=\"{{_stepData}}\"\n              schema=\"[[_step.data_schema]]\"\n              error=\"[[_step.errors]]\"\n              compute-label=\"[[_computeLabelCallback(localize, _step)]]\"\n              compute-error=\"[[_computeErrorCallback(localize, _step)]]\"\n            ></ha-form>\n          </template>\n        </template>\n      </paper-dialog-scrollable>\n      <div class=\"buttons\">\n        <template is=\"dom-if\" if=\"[[_equals(_step.type, 'abort')]]\">\n          <paper-button on-click=\"_flowDone\">Close</paper-button>\n        </template>\n        <template is=\"dom-if\" if=\"[[_equals(_step.type, 'create_entry')]]\">\n          <paper-button on-click=\"_flowDone\">Close</paper-button>\n        </template>\n        <template is=\"dom-if\" if=\"[[_equals(_step.type, 'form')]]\">\n          <template is=\"dom-if\" if=\"[[_loading]]\">\n            <div class='submit-spinner'><paper-spinner active></paper-spinner></div>\n          </template>\n          <template is=\"dom-if\" if=\"[[!_loading]]\">\n            <paper-button on-click=\"_submitStep\">Submit</paper-button>\n          </template>\n        </template>\n      </div>\n    </paper-dialog>\n`;\n  }\n\n  static get properties() {\n    return {\n      _hass: Object,\n      _dialogClosedCallback: Function,\n      _instance: Number,\n\n      _loading: {\n        type: Boolean,\n        value: false,\n      },\n\n      // Error message when can't talk to server etc\n      _errorMsg: String,\n\n      _opened: {\n        type: Boolean,\n        value: false,\n      },\n\n      _step: {\n        type: Object,\n        value: null,\n      },\n\n      /*\n       * Store user entered data.\n       */\n      _stepData: Object,\n    };\n  }\n\n  ready() {\n    super.ready();\n    this.addEventListener('keypress', (ev) => {\n      if (ev.keyCode === 13) {\n        this._submitStep();\n      }\n    });\n  }\n\n  showDialog({ hass, continueFlowId, mfaModuleId, dialogClosedCallback }) {\n    this.hass = hass;\n    this._instance = instance++;\n    this._dialogClosedCallback = dialogClosedCallback;\n    this._createdFromHandler = !!mfaModuleId;\n    this._loading = true;\n    this._opened = true;\n\n    const fetchStep = continueFlowId ?\n      this.hass.callWS({\n        type: 'auth/setup_mfa',\n        flow_id: continueFlowId,\n      }) :\n      this.hass.callWS({\n        type: 'auth/setup_mfa',\n        mfa_module_id: mfaModuleId,\n      });\n\n    const curInstance = this._instance;\n\n    fetchStep.then((step) => {\n      if (curInstance !== this._instance) return;\n\n      this._processStep(step);\n      this._loading = false;\n      // When the flow changes, center the dialog.\n      // Don't do it on each step or else the dialog keeps bouncing.\n      setTimeout(() => this.$.dialog.center(), 0);\n    });\n  }\n\n  _submitStep() {\n    this._loading = true;\n    this._errorMsg = null;\n\n    const curInstance = this._instance;\n\n    this.hass.callWS({\n      type: 'auth/setup_mfa',\n      flow_id: this._step.flow_id,\n      user_input: this._stepData,\n    }).then(\n      (step) => {\n        if (curInstance !== this._instance) return;\n\n        this._processStep(step);\n        this._loading = false;\n      },\n      (err) => {\n        this._errorMsg = (err && err.body && err.body.message) || 'Unknown error occurred';\n        this._loading = false;\n      }\n    );\n  }\n\n  _processStep(step) {\n    if (!step.errors) step.errors = {};\n    this._step = step;\n    // We got a new form if there are no errors.\n    if (Object.keys(step.errors).length === 0) {\n      this._stepData = {};\n    }\n  }\n\n  _flowDone() {\n    this._opened = false;\n    const flowFinished = this._step && ['create_entry', 'abort'].includes(this._step.type);\n\n    if (this._step && !flowFinished && this._createdFromHandler) {\n      // console.log('flow not finish');\n    }\n\n    this._dialogClosedCallback({\n      flowFinished,\n    });\n\n    this._errorMsg = null;\n    this._step = null;\n    this._stepData = {};\n    this._dialogClosedCallback = null;\n  }\n\n  _equals(a, b) {\n    return a === b;\n  }\n\n  _openedChanged(ev) {\n    // Closed dialog by clicking on the overlay\n    if (this._step && !ev.detail.value) {\n      this._flowDone();\n    }\n  }\n\n  _computeStepAbortedReason(localize, step) {\n    return localize(`component.auth.mfa_setup.${step.handler}.abort.${step.reason}`);\n  }\n\n  _computeStepTitle(localize, step) {\n    return localize(`component.auth.mfa_setup.${step.handler}.step.${step.step_id}.title`)\n     || 'Setup Multi-factor Authentication';\n  }\n\n  _computeStepDescription(localize, step) {\n    const args = [`component.auth.mfa_setup.${step.handler}.step.${step.step_id}.description`];\n    const placeholders = step.description_placeholders || {};\n    Object.keys(placeholders).forEach((key) => {\n      args.push(key);\n      args.push(placeholders[key]);\n    });\n    return localize(...args);\n  }\n\n  _computeLabelCallback(localize, step) {\n    // Returns a callback for ha-form to calculate labels per schema object\n    return schema => localize(`component.auth.mfa_setup.${step.handler}.step.${step.step_id}.data.${schema.name}`)\n      || schema.name;\n  }\n\n  _computeErrorCallback(localize, step) {\n    // Returns a callback for ha-form to calculate error messages\n    return error => localize(`component.auth.mfa_setup.${step.handler}.error.${error}`) || error;\n  }\n}\n\ncustomElements.define('ha-mfa-module-setup-flow', HaMfaModuleSetupFlow);\n"],"sourceRoot":""}