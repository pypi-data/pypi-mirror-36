{"version":3,"file":"3cb9cbd8a1e12213696f.chunk.js","sources":["webpack:///3cb9cbd8a1e12213696f.chunk.js"],"sourcesContent":["(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{654:function(e,t,a){\"use strict\";a.r(t),a(155),a(154),a(153),a(197),a(120),a(55),a(122);var s=a(0),r=a(4),o=(a(135),a(121),a(14));a(210),a(125),customElements.define(\"ha-change-password-card\",class extends r.a{static get template(){return s[\"a\"]`\n    <style include=\"ha-style\">\n      .error {\n        color: red;\n      }\n      .status {\n        color: var(--primary-color);\n      }\n      .error, .status {\n        position: absolute;\n        top: -4px;\n      }\n      paper-card {\n        display: block;\n      }\n      .currentPassword {\n        margin-top: -4px;\n      }\n    </style>\n    <div>\n      <paper-card heading=\"Change Password\">\n        <div class=\"card-content\">\n          <template is=\"dom-if\" if=\"[[_errorMsg]]\">\n            <div class='error'>[[_errorMsg]]</div>\n          </template>\n          <template is=\"dom-if\" if=\"[[_statusMsg]]\">\n            <div class=\"status\">[[_statusMsg]]</div>\n          </template>\n          <paper-input\n            class='currentPassword'\n            label='Current Password'\n            type='password'\n            value='{{_currentPassword}}'\n            required\n            auto-validate\n            error-message='Required'\n          ></paper-input>\n          <template is='dom-if' if='[[_currentPassword]]'>\n            <paper-input\n              label='New Password'\n              type='password'\n              value='{{_password1}}'\n              required\n              auto-validate\n              error-message='Required'\n            ></paper-input>\n            <paper-input\n              label='Confirm New Password'\n              type='password'\n              value='{{_password2}}'\n              required\n              auto-validate\n              error-message='Required'\n            ></paper-input>\n          </template>\n        </div>\n        <div class=\"card-actions\">\n          <template is=\"dom-if\" if=\"[[_loading]]\">\n            <div><paper-spinner active></paper-spinner></div>\n          </template>\n          <template is=\"dom-if\" if=\"[[!_loading]]\">\n            <paper-button on-click=\"_changePassword\">Submit</paper-button>\n          </template>\n        </div>\n      </paper-card>\n    </div>\n`}static get properties(){return{hass:Object,_loading:{type:Boolean,value:!1},_statusMsg:String,_errorMsg:String,_currentPassword:String,_password1:String,_password2:String}}ready(){super.ready(),this.addEventListener(\"keypress\",e=>{this._statusMsg=null,13===e.keyCode&&this._changePassword()})}async _changePassword(){if(this._statusMsg=null,this._currentPassword&&this._password1&&this._password2)if(this._password1===this._password2)if(this._currentPassword!==this._password1){this._loading=!0,this._errorMsg=null;try{await this.hass.callWS({type:\"config/auth_provider/homeassistant/change_password\",current_password:this._currentPassword,new_password:this._password1}),this.setProperties({_statusMsg:\"Password changed successfully\",_currentPassword:null,_password1:null,_password2:null})}catch(e){this._errorMsg=e.message}this._loading=!1}else this._errorMsg=\"New password must be different than current password\";else this._errorMsg=\"New password confirmation doesn't match\"}});var i=a(13);let n=!1;customElements.define(\"ha-mfa-modules-card\",class extends(Object(o.a)(Object(i.a)(r.a))){static get template(){return s[\"a\"]`\n    <style include=\"iron-flex ha-style\">\n      .error {\n        color: red;\n      }\n      .status {\n        color: var(--primary-color);\n      }\n      .error, .status {\n        position: absolute;\n        top: -4px;\n      }\n      paper-card {\n        display: block;\n        max-width: 600px;\n        margin: 16px auto;\n      }\n      paper-button {\n        color: var(--primary-color);\n        font-weight: 500;\n        margin-right: -.57em;\n      }\n    </style>\n    <paper-card heading=\"Multi-factor Authentication Modules\">\n      <template is=\"dom-repeat\" items=\"[[mfaModules]]\" as=\"module\">\n        <paper-item>\n          <paper-item-body two-line=\"\">\n            <div>[[module.name]]</div>\n            <div secondary=\"\">[[module.id]]</div>\n          </paper-item-body>\n          <template is=\"dom-if\" if=\"[[module.enabled]]\">\n            <paper-button on-click=\"_disable\">Disable</paper-button>\n          </template>\n          <template is=\"dom-if\" if=\"[[!module.enabled]]\">\n            <paper-button on-click=\"_enable\">Enable</paper-button>\n          </template>\n        </paper-item>\n      </template>\n    </paper-card>\n`}static get properties(){return{hass:Object,_loading:{type:Boolean,value:!1},_statusMsg:String,_errorMsg:String,mfaModules:Array}}connectedCallback(){super.connectedCallback(),n||(n=!0,this.fire(\"register-dialog\",{dialogShowEvent:\"show-mfa-module-setup-flow\",dialogTag:\"ha-mfa-module-setup-flow\",dialogImport:()=>a.e(58).then(a.bind(null,649))}))}_enable(e){this.fire(\"show-mfa-module-setup-flow\",{hass:this.hass,mfaModuleId:e.model.module.id,dialogClosedCallback:()=>this._refreshCurrentUser()})}_disable(e){if(!confirm(`Are you sure you want to disable ${e.model.module.name}?`))return;const t=e.model.module.id;this.hass.callWS({type:\"auth/depose_mfa\",mfa_module_id:t}).then(()=>{this._refreshCurrentUser()})}_refreshCurrentUser(){this.fire(\"hass-refresh-current-user\")}}),a(62),a(257);var l=a(77);customElements.define(\"ha-settings-row\",class extends r.a{static get template(){return s[\"a\"]`\n    <style>\n      :host {\n        display: flex;\n        padding: 0 16px;\n        align-content: normal;\n        align-self: auto;\n        align-items: center;\n      }\n      :host([narrow]) {\n        align-items: normal;\n        flex-direction: column;\n        border-top: 1px solid var(--divider-color);\n        padding-bottom: 8px;\n      }\n      paper-item-body {\n        padding-right: 16px;\n      }\n    </style>\n    <paper-item-body two-line$='[[!threeLine]]' three-line$='[[threeLine]]'>\n      <slot name=\"heading\"></slot>\n      <div secondary><slot name=\"description\"></slot></div>\n    </paper-item-body>\n    <slot></slot>\n    `}static get properties(){return{narrow:{type:Boolean,reflectToAttribute:!0},threeLine:{type:Boolean,value:!1}}}}),customElements.define(\"ha-refresh-tokens-card\",class extends(Object(i.a)(Object(o.a)(r.a))){static get template(){return s[\"a\"]`\n    <style>\n      paper-card {\n        display: block;\n      }\n      paper-icon-button {\n        color: var(--primary-text-color);\n      }\n      paper-icon-button[disabled] {\n        color: var(--disabled-text-color);\n      }\n    </style>\n    <paper-card heading=\"[[localize('ui.panel.profile.refresh_tokens.header')]]\">\n      <div class=\"card-content\">[[localize('ui.panel.profile.refresh_tokens.description')]]</div>\n      <template is='dom-repeat' items='[[_computeTokens(refreshTokens)]]'>\n        <ha-settings-row three-line>\n          <span slot='heading'>[[_formatTitle(item.client_id)]]</span>\n          <div slot='description'>[[_formatCreatedAt(item.created_at)]]</div>\n          <div slot='description'>[[_formatLastUsed(item)]]</div>\n          <div>\n            <template is='dom-if' if='[[item.is_current]]'>\n              <paper-tooltip\n                position=\"left\"\n              >[[localize('ui.panel.profile.refresh_tokens.current_token_tooltip')]]</paper-tooltip>\n            </template>\n            <paper-icon-button\n              icon=\"hass:delete\"\n              on-click='_handleDelete'\n              disabled=\"[[item.is_current]]\"\n            ></paper-icon-button>\n          </div>\n        </ha-settings-row>\n      </template>\n    </paper-card>\n    `}static get properties(){return{hass:Object,refreshTokens:Array}}_computeTokens(e){return e.filter(e=>\"normal\"===e.type).reverse()}_formatTitle(e){return this.localize(\"ui.panel.profile.refresh_tokens.token_title\",\"clientId\",e)}_formatCreatedAt(e){return this.localize(\"ui.panel.profile.refresh_tokens.created_at\",\"date\",Object(l.a)(new Date(e)))}_formatLastUsed(e){return e.last_used_at?this.localize(\"ui.panel.profile.refresh_tokens.last_used\",\"date\",Object(l.a)(new Date(e.last_used_at)),\"location\",e.last_used_ip):this.localize(\"ui.panel.profile.refresh_tokens.not_used\")}async _handleDelete(e){if(confirm(this.localize(\"ui.panel.profile.refresh_tokens.confirm_delete\",\"name\",e.model.item.client_id)))try{await this.hass.callWS({type:\"auth/delete_refresh_token\",refresh_token_id:e.model.item.id}),this.fire(\"hass-refresh-tokens\")}catch(e){console.error(e),alert(this.localize(\"ui.panel.profile.refresh_tokens.delete_failed\"))}}}),customElements.define(\"ha-long-lived-access-tokens-card\",class extends(Object(i.a)(Object(o.a)(r.a))){static get template(){return s[\"a\"]`\n    <style include=\"ha-style\">\n      paper-card {\n        display: block;\n      }\n      .card-content {\n        margin: -1em 0;\n      }\n      a {\n        color: var(--primary-color);\n      }\n      paper-icon-button {\n        color: var(--primary-text-color);\n      }\n    </style>\n    <paper-card heading=\"[[localize('ui.panel.profile.long_lived_access_tokens.header')]]\">\n      <div class=\"card-content\">\n        <p>\n          [[localize('ui.panel.profile.long_lived_access_tokens.description')]]\n          <a href='https://developers.home-assistant.io/docs/en/auth_api.html#making-authenticated-requests' target='_blank'>\n            [[localize('ui.panel.profile.long_lived_access_tokens.learn_auth_requests')]]\n          </a>\n        </p>\n        <template is='dom-if' if='[[!_tokens.length]]'>\n          <p>[[localize('ui.panel.profile.long_lived_access_tokens.empty_state')]]</p>\n        </template>\n      </div>\n      <template is='dom-repeat' items='[[_tokens]]'>\n        <ha-settings-row three-line>\n          <span slot='heading'>[[item.client_name]]</span>\n          <div slot='description'>[[_formatCreatedAt(item.created_at)]]</div>\n          <div slot='description'>[[_formatLastUsed(item)]]</div>\n          <paper-icon-button icon=\"hass:delete\" on-click='_handleDelete'></paper-icon-button>\n        </ha-settings-row>\n      </template>\n      <div class='card-actions'>\n        <paper-button on-click='_handleCreate'>\n          [[localize('ui.panel.profile.long_lived_access_tokens.create')]]\n        </paper-button>\n      </div>\n    </paper-card>\n    `}static get properties(){return{hass:Object,refreshTokens:Array,_tokens:{type:Array,computed:\"_computeTokens(refreshTokens)\"}}}_computeTokens(e){return e.filter(e=>\"long_lived_access_token\"===e.type).reverse()}_formatTitle(e){return this.localize(\"ui.panel.profile.long_lived_access_tokens.token_title\",\"name\",e)}_formatCreatedAt(e){return this.localize(\"ui.panel.profile.long_lived_access_tokens.created_at\",\"date\",Object(l.a)(new Date(e)))}_formatLastUsed(e){return e.last_used_at?this.localize(\"ui.panel.profile.refresh_tokens.last_used\",\"date\",Object(l.a)(new Date(e.last_used_at)),\"location\",e.last_used_ip):this.localize(\"ui.panel.profile.refresh_tokens.not_used\")}async _handleCreate(){const e=prompt(this.localize(\"ui.panel.profile.long_lived_access_tokens.prompt_name\"));if(e)try{const t=await this.hass.callWS({type:\"auth/long_lived_access_token\",lifespan:3650,client_name:e});prompt(this.localize(\"ui.panel.profile.long_lived_access_tokens.prompt_copy_token\"),t),this.fire(\"hass-refresh-tokens\")}catch(e){console.error(e),alert(this.localize(\"ui.panel.profile.long_lived_access_tokens.create_failed\"))}}async _handleDelete(e){if(confirm(this.localize(\"ui.panel.profile.long_lived_access_tokens.confirm_delete\",\"name\",e.model.item.client_name)))try{await this.hass.callWS({type:\"auth/delete_refresh_token\",refresh_token_id:e.model.item.id}),this.fire(\"hass-refresh-tokens\")}catch(e){console.error(e),alert(this.localize(\"ui.panel.profile.long_lived_access_tokens.delete_failed\"))}}}),a(124),a(123),customElements.define(\"ha-pick-language-row\",class extends(Object(i.a)(Object(o.a)(r.a))){static get template(){return s[\"a\"]`\n    <style>\n      a { color: var(--primary-color); }\n    </style>\n    <ha-settings-row narrow='[[narrow]]'>\n      <span slot='heading'>[[localize('ui.panel.profile.language.header')]]</span>\n      <span slot='description'>\n        <a\n          href='https://developers.home-assistant.io/docs/en/internationalization_translation.html'\n          target='_blank'>[[localize('ui.panel.profile.language.link_promo')]]</a>\n      </span>\n      <paper-dropdown-menu label=\"[[localize('ui.panel.profile.language.dropdown_label')]]\" dynamic-align=\"\">\n        <paper-listbox slot=\"dropdown-content\" attr-for-selected=\"language-tag\" selected=\"{{languageSelection}}\">\n          <template is=\"dom-repeat\" items=\"[[languages]]\">\n            <paper-item language-tag$=\"[[item.tag]]\">[[item.nativeName]]</paper-item>\n          </template>\n        </paper-listbox>\n      </paper-dropdown-menu>\n    </ha-settings-row>\n    `}static get properties(){return{hass:Object,narrow:Boolean,languageSelection:{type:String,observer:\"languageSelectionChanged\"},languages:{type:Array,computed:\"computeLanguages(hass)\"}}}static get observers(){return[\"setLanguageSelection(language)\"]}computeLanguages(e){return e&&e.translationMetadata?Object.keys(e.translationMetadata.translations).map(t=>({tag:t,nativeName:e.translationMetadata.translations[t].nativeName})):[]}setLanguageSelection(e){this.languageSelection=e}languageSelectionChanged(e){e!==this.language&&this.fire(\"hass-language-select\",{language:e})}}),customElements.define(\"ha-pick-theme-row\",class extends(Object(i.a)(Object(o.a)(r.a))){static get template(){return s[\"a\"]`\n    <style>\n      a { color: var(--primary-color); }\n    </style>\n    <ha-settings-row narrow='[[narrow]]'>\n      <span slot='heading'>[[localize('ui.panel.profile.themes.header')]]</span>\n      <span slot='description'>\n        <template is='dom-if' if='[[!_hasThemes]]'>\n        [[localize('ui.panel.profile.themes.error_no_theme')]]\n        </template>\n        <a\n          href='https://www.home-assistant.io/components/frontend/#defining-themes'\n          target='_blank'>[[localize('ui.panel.profile.themes.link_promo')]]</a>\n      </span>\n      <paper-dropdown-menu\n        label=\"[[localize('ui.panel.profile.themes.dropdown_label')]]\"\n        dynamic-align\n        disabled='[[!_hasThemes]]'\n      >\n        <paper-listbox slot=\"dropdown-content\" selected=\"{{selectedTheme}}\">\n          <template is=\"dom-repeat\" items=\"[[themes]]\" as=\"theme\">\n            <paper-item>[[theme]]</paper-item>\n          </template>\n        </paper-listbox>\n      </paper-dropdown-menu>\n    </ha-settings-row>\n    `}static get properties(){return{hass:Object,narrow:Boolean,_hasThemes:{type:Boolean,computed:\"_compHasThemes(hass)\"},themes:{type:Array,computed:\"_computeThemes(hass)\"},selectedTheme:{type:Number}}}static get observers(){return[\"selectionChanged(hass, selectedTheme)\"]}_compHasThemes(e){return e.themes&&e.themes.themes&&Object.keys(e.themes.themes).length}ready(){super.ready(),this.hass.selectedTheme&&this.themes.indexOf(this.hass.selectedTheme)>0?this.selectedTheme=this.themes.indexOf(this.hass.selectedTheme):this.hass.selectedTheme||(this.selectedTheme=0)}_computeThemes(e){return e?[\"Backend-selected\",\"default\"].concat(Object.keys(e.themes.themes).sort()):[]}selectionChanged(e,t){t>0&&t<this.themes.length?e.selectedTheme!==this.themes[t]&&this.fire(\"settheme\",this.themes[t]):0===t&&\"\"!==e.selectedTheme&&this.fire(\"settheme\",\"\")}}),a(31),a(441);var p=a(136);a(159);const c=\"serviceWorker\"in navigator&&\"PushManager\"in window&&(\"https:\"===document.location.protocol||\"localhost\"===document.location.hostname||\"127.0.0.1\"===document.location.hostname);customElements.define(\"ha-push-notifications-toggle\",class extends(Object(o.a)(r.a)){static get template(){return s[\"a\"]`\n    <paper-toggle-button\n      disabled=\"[[_compDisabled(disabled, loading)]]\"\n      checked=\"{{pushChecked}}\"\n    ></paper-toggle-button>\n`}static get properties(){return{hass:{type:Object,value:null},disabled:{type:Boolean,value:!1},pushChecked:{type:Boolean,value:\"Notification\"in window&&\"granted\"===Notification.permission,observer:\"handlePushChange\"},loading:{type:Boolean,value:!0}}}async connectedCallback(){if(super.connectedCallback(),c)try{const e=await navigator.serviceWorker.ready;if(!e.pushManager)return;e.pushManager.getSubscription().then(e=>{this.loading=!1,this.pushChecked=!!e})}catch(e){}}handlePushChange(e){c&&(e?this.subscribePushNotifications():this.unsubscribePushNotifications())}async subscribePushNotifications(){const e=await navigator.serviceWorker.ready;try{const t=await e.pushManager.subscribe({userVisibleOnly:!0});let a;a=navigator.userAgent.toLowerCase().indexOf(\"firefox\")>-1?\"firefox\":\"chrome\",await this.hass.callApi(\"POST\",\"notify.html5\",{subscription:t,browser:a})}catch(e){const t=e.message||\"Notification registration failed.\";console.error(e),this.fire(\"hass-notification\",{message:t}),this.pushChecked=!1}}async unsubscribePushNotifications(){const e=await navigator.serviceWorker.ready;try{const t=await e.pushManager.getSubscription();if(!t)return;await this.hass.callApi(\"DELETE\",\"notify.html5\",{subscription:t}),await t.unsubscribe()}catch(e){const t=e.message||\"Failed unsubscribing for push notifications.\";console.error(\"Error in unsub push\",e),this.fire(\"hass-notification\",{message:t}),this.pushChecked=!0}}_compDisabled(e,t){return e||t}}),customElements.define(\"ha-push-notifications-row\",class extends(Object(i.a)(r.a)){static get template(){return s[\"a\"]`\n    <style>\n      a { color: var(--primary-color); }\n    </style>\n    <ha-settings-row narrow='[[narrow]]'>\n      <span slot='heading'>[[localize('ui.panel.profile.push_notifications.header')]]</span>\n      <span\n        slot='description'\n      >\n        [[_description(_platformLoaded, _pushSupported)]]\n        <a\n          href='https://www.home-assistant.io/components/notify.html5/'\n          target='_blank'>[[localize('ui.panel.profile.push_notifications.link_promo')]]</a>\n      </span>\n      <ha-push-notifications-toggle\n        hass=\"[[hass]]\"\n        disabled='[[_error]]'\n      ></ha-push-notifications-toggle>\n    </ha-settings-row>\n    `}static get properties(){return{hass:Object,narrow:Boolean,_platformLoaded:{type:Boolean,computed:\"_compPlatformLoaded(hass)\"},_pushSupported:{type:Boolean,value:c},_error:{type:Boolean,computed:\"_compError(_platformLoaded, _pushSupported)\"}}}_compPlatformLoaded(e){return Object(p.a)(e,\"notify.html5\")}_compError(e,t){return!e||!t}_description(e,t){let a;return a=t?e?\"description\":\"error_load_platform\":\"error_use_https\",this.localize(`ui.panel.profile.push_notifications.${a}`)}}),customElements.define(\"ha-panel-profile\",class extends(Object(o.a)(r.a)){static get template(){return s[\"a\"]`\n    <style include=\"ha-style\">\n      :host {\n        -ms-user-select: initial;\n        -webkit-user-select: initial;\n        -moz-user-select: initial;\n      }\n\n      .content {\n        display: block;\n        max-width: 600px;\n        margin: 0 auto;\n      }\n\n      .content > * {\n        display: block;\n        margin: 24px 0;\n      }\n    </style>\n\n    <app-header-layout has-scrolling-region>\n      <app-header slot=\"header\" fixed>\n        <app-toolbar>\n          <ha-menu-button narrow='[[narrow]]' show-menu='[[showMenu]]'></ha-menu-button>\n          <div main-title>Profile</div>\n        </app-toolbar>\n      </app-header>\n\n      <div class='content'>\n        <paper-card heading='[[hass.user.name]]'>\n          <div class='card-content'>\n            You are currently logged in as [[hass.user.name]].\n            <template is='dom-if' if='[[hass.user.is_owner]]'>You are an owner.</template>\n          </div>\n\n          <ha-pick-language-row\n            narrow=\"[[narrow]]\"\n            hass=\"[[hass]]\"\n          ></ha-pick-language-row>\n          <ha-pick-theme-row\n            narrow=\"[[narrow]]\"\n            hass=\"[[hass]]\"\n          ></ha-pick-theme-row>\n          <ha-push-notifications-row\n            narrow=\"[[narrow]]\"\n            hass=\"[[hass]]\"\n          ></ha-push-notifications-row>\n\n          <div class='card-actions'>\n            <paper-button\n              class='warning'\n              on-click='_handleLogOut'\n            >Log out</paper-button>\n          </div>\n        </paper-card>\n\n        <template is=\"dom-if\" if=\"[[_canChangePassword(hass.user)]]\">\n          <ha-change-password-card hass=\"[[hass]]\"></ha-change-password-card>\n        </template>\n\n        <ha-mfa-modules-card\n          hass='[[hass]]'\n          mfa-modules='[[hass.user.mfa_modules]]'\n        ></ha-mfa-modules-card>\n\n        <ha-refresh-tokens-card\n          hass='[[hass]]'\n          refresh-tokens='[[_refreshTokens]]'\n          on-hass-refresh-tokens='_refreshRefreshTokens'\n        ></ha-refresh-tokens-card>\n\n        <ha-long-lived-access-tokens-card\n          hass='[[hass]]'\n          refresh-tokens='[[_refreshTokens]]'\n          on-hass-refresh-tokens='_refreshRefreshTokens'\n        ></ha-long-lived-access-tokens-card>\n      </div>\n    </app-header-layout>\n    `}static get properties(){return{hass:Object,narrow:Boolean,showMenu:Boolean,_refreshTokens:Array}}connectedCallback(){super.connectedCallback(),this._refreshRefreshTokens()}async _refreshRefreshTokens(){this._refreshTokens=await this.hass.callWS({type:\"auth/refresh_tokens\"})}_handleLogOut(){this.fire(\"hass-logout\")}_canChangePassword(e){return e.credentials.some(e=>\"homeassistant\"===e.auth_provider_type)}})}}]);"],"mappingssourceRoot":""}