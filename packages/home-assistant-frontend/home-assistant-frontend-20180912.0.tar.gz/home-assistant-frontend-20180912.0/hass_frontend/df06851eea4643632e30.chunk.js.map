{"version":3,"sources":["webpack:///./src/panels/profile/ha-change-password-card.js","webpack:///./src/panels/profile/ha-mfa-modules-card.js","webpack:///./src/panels/profile/ha-settings-row.js","webpack:///./src/panels/profile/ha-refresh-tokens-card.js","webpack:///./src/panels/profile/ha-long-lived-access-tokens-card.js","webpack:///./src/panels/profile/ha-pick-language-row.js","webpack:///./src/panels/profile/ha-pick-theme-row.js","webpack:///./src/components/ha-push-notifications-toggle.js","webpack:///./src/panels/profile/ha-push-notifications-row.js","webpack:///./src/panels/profile/ha-panel-profile.js"],"names":["customElements","define","polymer_element","a","template","html_tag","properties","hass","Object","_loading","type","Boolean","value","_statusMsg","String","_errorMsg","_currentPassword","_password1","_password2","ready","super","this","addEventListener","ev","keyCode","_changePassword","[object Object]","callWS","current_password","new_password","setProperties","err","message","localize_mixin","__webpack_require__","registeredDialog","events_mixin","mfaModules","Array","connectedCallback","fire","dialogShowEvent","dialogTag","dialogImport","e","then","bind","_enable","mfaModuleId","model","module","id","dialogClosedCallback","_refreshCurrentUser","_disable","confirm","name","mfa_module_id","format_date_time","narrow","reflectToAttribute","threeLine","refreshTokens","_computeTokens","filter","tkn","reverse","_formatTitle","clientId","localize","_formatCreatedAt","created","Date","_formatLastUsed","item","last_used_at","last_used_ip","client_id","refresh_token_id","console","error","alert","_tokens","computed","prompt","token","lifespan","client_name","languageSelection","observer","languages","observers","computeLanguages","translationMetadata","keys","translations","map","key","tag","nativeName","setLanguageSelection","language","languageSelectionChanged","newVal","_hasThemes","themes","selectedTheme","Number","_compHasThemes","length","indexOf","_computeThemes","concat","sort","selectionChanged","selection","is_component_loaded","pushSupported","navigator","window","document","location","protocol","hostname","disabled","pushChecked","Notification","permission","loading","reg","serviceWorker","pushManager","getSubscription","subscription","handlePushChange","subscribePushNotifications","unsubscribePushNotifications","sub","subscribe","userVisibleOnly","browserName","userAgent","toLowerCase","callApi","browser","unsubscribe","_compDisabled","_platformLoaded","_pushSupported","_error","_compPlatformLoaded","_compError","platformLoaded","pushSupported_","_description","showMenu","_refreshTokens","_refreshRefreshTokens","_handleLogOut","_canChangePassword","user","credentials","some","cred","auth_provider_type"],"mappings":"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","file":"df06851eea4643632e30.chunk.js","sourcesContent":["import '@polymer/paper-button/paper-button.js';\nimport '@polymer/paper-dialog/paper-dialog.js';\nimport '@polymer/paper-spinner/paper-spinner.js';\nimport '@polymer/paper-card/paper-card.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport '../../resources/ha-style.js';\n\nclass HaChangePasswordCard extends PolymerElement {\n  static get template() {\n    return html`\n    <style include=\"ha-style\">\n      .error {\n        color: red;\n      }\n      .status {\n        color: var(--primary-color);\n      }\n      .error, .status {\n        position: absolute;\n        top: -4px;\n      }\n      paper-card {\n        display: block;\n      }\n      .currentPassword {\n        margin-top: -4px;\n      }\n    </style>\n    <div>\n      <paper-card heading=\"Change Password\">\n        <div class=\"card-content\">\n          <template is=\"dom-if\" if=\"[[_errorMsg]]\">\n            <div class='error'>[[_errorMsg]]</div>\n          </template>\n          <template is=\"dom-if\" if=\"[[_statusMsg]]\">\n            <div class=\"status\">[[_statusMsg]]</div>\n          </template>\n          <paper-input\n            class='currentPassword'\n            label='Current Password'\n            type='password'\n            value='{{_currentPassword}}'\n            required\n            auto-validate\n            error-message='Required'\n          ></paper-input>\n          <template is='dom-if' if='[[_currentPassword]]'>\n            <paper-input\n              label='New Password'\n              type='password'\n              value='{{_password1}}'\n              required\n              auto-validate\n              error-message='Required'\n            ></paper-input>\n            <paper-input\n              label='Confirm New Password'\n              type='password'\n              value='{{_password2}}'\n              required\n              auto-validate\n              error-message='Required'\n            ></paper-input>\n          </template>\n        </div>\n        <div class=\"card-actions\">\n          <template is=\"dom-if\" if=\"[[_loading]]\">\n            <div><paper-spinner active></paper-spinner></div>\n          </template>\n          <template is=\"dom-if\" if=\"[[!_loading]]\">\n            <paper-button on-click=\"_changePassword\">Submit</paper-button>\n          </template>\n        </div>\n      </paper-card>\n    </div>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n\n      _loading: {\n        type: Boolean,\n        value: false,\n      },\n\n      // Error message when can't talk to server etc\n      _statusMsg: String,\n      _errorMsg: String,\n\n      _currentPassword: String,\n      _password1: String,\n      _password2: String,\n    };\n  }\n\n  ready() {\n    super.ready();\n    this.addEventListener('keypress', (ev) => {\n      this._statusMsg = null;\n      if (ev.keyCode === 13) {\n        this._changePassword();\n      }\n    });\n  }\n\n  async _changePassword() {\n    this._statusMsg = null;\n    if (!this._currentPassword || !this._password1 || !this._password2) return;\n\n    if (this._password1 !== this._password2) {\n      this._errorMsg = \"New password confirmation doesn't match\";\n      return;\n    }\n\n    if (this._currentPassword === this._password1) {\n      this._errorMsg = 'New password must be different than current password';\n      return;\n    }\n\n    this._loading = true;\n    this._errorMsg = null;\n\n    try {\n      await this.hass.callWS({\n        type: 'config/auth_provider/homeassistant/change_password',\n        current_password: this._currentPassword,\n        new_password: this._password1,\n      });\n\n      this.setProperties({\n        _statusMsg: 'Password changed successfully',\n        _currentPassword: null,\n        _password1: null,\n        _password2: null\n      });\n    } catch (err) {\n      this._errorMsg = err.message;\n    }\n\n    this._loading = false;\n  }\n}\n\ncustomElements.define('ha-change-password-card', HaChangePasswordCard);\n","import '@polymer/paper-button/paper-button.js';\nimport '@polymer/paper-card/paper-card.js';\nimport '@polymer/paper-item/paper-item-body.js';\nimport '@polymer/paper-item/paper-item.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport '../../resources/ha-style.js';\n\nimport EventsMixin from '../../mixins/events-mixin.js';\nimport LocalizeMixin from '../../mixins/localize-mixin.js';\n\nlet registeredDialog = false;\n\n/*\n * @appliesMixin EventsMixin\n * @appliesMixin LocalizeMixin\n */\nclass HaMfaModulesCard extends EventsMixin(LocalizeMixin(PolymerElement)) {\n  static get template() {\n    return html`\n    <style include=\"iron-flex ha-style\">\n      .error {\n        color: red;\n      }\n      .status {\n        color: var(--primary-color);\n      }\n      .error, .status {\n        position: absolute;\n        top: -4px;\n      }\n      paper-card {\n        display: block;\n        max-width: 600px;\n        margin: 16px auto;\n      }\n      paper-button {\n        color: var(--primary-color);\n        font-weight: 500;\n        margin-right: -.57em;\n      }\n    </style>\n    <paper-card heading=\"Multi-factor Authentication Modules\">\n      <template is=\"dom-repeat\" items=\"[[mfaModules]]\" as=\"module\">\n        <paper-item>\n          <paper-item-body two-line=\"\">\n            <div>[[module.name]]</div>\n            <div secondary=\"\">[[module.id]]</div>\n          </paper-item-body>\n          <template is=\"dom-if\" if=\"[[module.enabled]]\">\n            <paper-button on-click=\"_disable\">Disable</paper-button>\n          </template>\n          <template is=\"dom-if\" if=\"[[!module.enabled]]\">\n            <paper-button on-click=\"_enable\">Enable</paper-button>\n          </template>\n        </paper-item>\n      </template>\n    </paper-card>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n\n      _loading: {\n        type: Boolean,\n        value: false,\n      },\n\n      // Error message when can't talk to server etc\n      _statusMsg: String,\n      _errorMsg: String,\n\n      mfaModules: Array,\n    };\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    if (!registeredDialog) {\n      registeredDialog = true;\n      this.fire('register-dialog', {\n        dialogShowEvent: 'show-mfa-module-setup-flow',\n        dialogTag: 'ha-mfa-module-setup-flow',\n        dialogImport: () => import('./ha-mfa-module-setup-flow.js'),\n      });\n    }\n  }\n\n  _enable(ev) {\n    this.fire('show-mfa-module-setup-flow', {\n      hass: this.hass,\n      mfaModuleId: ev.model.module.id,\n      dialogClosedCallback: () => this._refreshCurrentUser(),\n    });\n  }\n\n  _disable(ev) {\n    if (!confirm(`Are you sure you want to disable ${ev.model.module.name}?`)) return;\n\n    const mfaModuleId = ev.model.module.id;\n\n    this.hass.callWS({\n      type: 'auth/depose_mfa',\n      mfa_module_id: mfaModuleId,\n    }).then(() => {\n      this._refreshCurrentUser();\n    });\n  }\n\n  _refreshCurrentUser() {\n    this.fire('hass-refresh-current-user');\n  }\n}\n\ncustomElements.define('ha-mfa-modules-card', HaMfaModulesCard);\n","import { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nclass HaSettingsRow extends PolymerElement {\n  static get template() {\n    return html`\n    <style>\n      :host {\n        display: flex;\n        padding: 0 16px;\n        align-content: normal;\n        align-self: auto;\n        align-items: center;\n      }\n      :host([narrow]) {\n        align-items: normal;\n        flex-direction: column;\n        border-top: 1px solid var(--divider-color);\n        padding-bottom: 8px;\n      }\n      paper-item-body {\n        padding-right: 16px;\n      }\n    </style>\n    <paper-item-body two-line$='[[!threeLine]]' three-line$='[[threeLine]]'>\n      <slot name=\"heading\"></slot>\n      <div secondary><slot name=\"description\"></slot></div>\n    </paper-item-body>\n    <slot></slot>\n    `;\n  }\n\n  static get properties() {\n    return {\n      narrow: {\n        type: Boolean,\n        reflectToAttribute: true,\n      },\n      threeLine: {\n        type: Boolean,\n        value: false,\n      }\n    };\n  }\n}\n\ncustomElements.define('ha-settings-row', HaSettingsRow);\n","import '@polymer/paper-icon-button/paper-icon-button.js';\nimport '@polymer/paper-tooltip/paper-tooltip.js';\n\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport EventsMixin from '../../mixins/events-mixin.js';\nimport LocalizeMixin from '../../mixins/localize-mixin.js';\nimport formatDateTime from '../../common/datetime/format_date_time.js';\n\nimport './ha-settings-row.js';\n\n/*\n * @appliesMixin EventsMixin\n * @appliesMixin LocalizeMixin\n */\nclass HaRefreshTokens extends LocalizeMixin(EventsMixin(PolymerElement)) {\n  static get template() {\n    return html`\n    <style>\n      paper-card {\n        display: block;\n      }\n      paper-icon-button {\n        color: var(--primary-text-color);\n      }\n      paper-icon-button[disabled] {\n        color: var(--disabled-text-color);\n      }\n    </style>\n    <paper-card heading=\"[[localize('ui.panel.profile.refresh_tokens.header')]]\">\n      <div class=\"card-content\">[[localize('ui.panel.profile.refresh_tokens.description')]]</div>\n      <template is='dom-repeat' items='[[_computeTokens(refreshTokens)]]'>\n        <ha-settings-row three-line>\n          <span slot='heading'>[[_formatTitle(item.client_id)]]</span>\n          <div slot='description'>[[_formatCreatedAt(item.created_at)]]</div>\n          <div slot='description'>[[_formatLastUsed(item)]]</div>\n          <div>\n            <template is='dom-if' if='[[item.is_current]]'>\n              <paper-tooltip\n                position=\"left\"\n              >[[localize('ui.panel.profile.refresh_tokens.current_token_tooltip')]]</paper-tooltip>\n            </template>\n            <paper-icon-button\n              icon=\"hass:delete\"\n              on-click='_handleDelete'\n              disabled=\"[[item.is_current]]\"\n            ></paper-icon-button>\n          </div>\n        </ha-settings-row>\n      </template>\n    </paper-card>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      refreshTokens: Array,\n    };\n  }\n\n  _computeTokens(refreshTokens) {\n    return refreshTokens.filter(tkn => tkn.type === 'normal').reverse();\n  }\n\n  _formatTitle(clientId) {\n    return this.localize(\n      'ui.panel.profile.refresh_tokens.token_title',\n      'clientId', clientId\n    );\n  }\n\n  _formatCreatedAt(created) {\n    return this.localize(\n      'ui.panel.profile.refresh_tokens.created_at',\n      'date', formatDateTime(new Date(created))\n    );\n  }\n\n  _formatLastUsed(item) {\n    return item.last_used_at ? this.localize(\n      'ui.panel.profile.refresh_tokens.last_used',\n      'date', formatDateTime(new Date(item.last_used_at)),\n      'location', item.last_used_ip\n    ) : this.localize('ui.panel.profile.refresh_tokens.not_used');\n  }\n\n  async _handleDelete(ev) {\n    if (!confirm(this.localize('ui.panel.profile.refresh_tokens.confirm_delete', 'name', ev.model.item.client_id))) {\n      return;\n    }\n    try {\n      await this.hass.callWS({\n        type: 'auth/delete_refresh_token',\n        refresh_token_id: ev.model.item.id,\n      });\n      this.fire('hass-refresh-tokens');\n    } catch (err) {\n      // eslint-disable-next-line\n      console.error(err);\n      alert(this.localize('ui.panel.profile.refresh_tokens.delete_failed'));\n    }\n  }\n}\n\ncustomElements.define('ha-refresh-tokens-card', HaRefreshTokens);\n","import '@polymer/paper-button/paper-button.js';\n\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport EventsMixin from '../../mixins/events-mixin.js';\nimport LocalizeMixin from '../../mixins/localize-mixin.js';\nimport formatDateTime from '../../common/datetime/format_date_time.js';\n\nimport '../../resources/ha-style.js';\n\nimport './ha-settings-row.js';\n\n/*\n * @appliesMixin EventsMixin\n * @appliesMixin LocalizeMixin\n */\nclass HaLongLivedTokens extends LocalizeMixin(EventsMixin(PolymerElement)) {\n  static get template() {\n    return html`\n    <style include=\"ha-style\">\n      paper-card {\n        display: block;\n      }\n      .card-content {\n        margin: -1em 0;\n      }\n      a {\n        color: var(--primary-color);\n      }\n      paper-icon-button {\n        color: var(--primary-text-color);\n      }\n    </style>\n    <paper-card heading=\"[[localize('ui.panel.profile.long_lived_access_tokens.header')]]\">\n      <div class=\"card-content\">\n        <p>\n          [[localize('ui.panel.profile.long_lived_access_tokens.description')]]\n          <a href='https://developers.home-assistant.io/docs/en/auth_api.html#making-authenticated-requests' target='_blank'>\n            [[localize('ui.panel.profile.long_lived_access_tokens.learn_auth_requests')]]\n          </a>\n        </p>\n        <template is='dom-if' if='[[!_tokens.length]]'>\n          <p>[[localize('ui.panel.profile.long_lived_access_tokens.empty_state')]]</p>\n        </template>\n      </div>\n      <template is='dom-repeat' items='[[_tokens]]'>\n        <ha-settings-row three-line>\n          <span slot='heading'>[[item.client_name]]</span>\n          <div slot='description'>[[_formatCreatedAt(item.created_at)]]</div>\n          <div slot='description'>[[_formatLastUsed(item)]]</div>\n          <paper-icon-button icon=\"hass:delete\" on-click='_handleDelete'></paper-icon-button>\n        </ha-settings-row>\n      </template>\n      <div class='card-actions'>\n        <paper-button on-click='_handleCreate'>\n          [[localize('ui.panel.profile.long_lived_access_tokens.create')]]\n        </paper-button>\n      </div>\n    </paper-card>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      refreshTokens: Array,\n      _tokens: {\n        type: Array,\n        computed: '_computeTokens(refreshTokens)'\n      }\n    };\n  }\n\n  _computeTokens(refreshTokens) {\n    return refreshTokens.filter(tkn => tkn.type === 'long_lived_access_token').reverse();\n  }\n\n  _formatTitle(name) {\n    return this.localize(\n      'ui.panel.profile.long_lived_access_tokens.token_title',\n      'name', name\n    );\n  }\n\n  _formatCreatedAt(created) {\n    return this.localize(\n      'ui.panel.profile.long_lived_access_tokens.created_at',\n      'date', formatDateTime(new Date(created))\n    );\n  }\n\n  _formatLastUsed(item) {\n    return item.last_used_at ? this.localize(\n      'ui.panel.profile.refresh_tokens.last_used',\n      'date', formatDateTime(new Date(item.last_used_at)),\n      'location', item.last_used_ip\n    ) : this.localize('ui.panel.profile.refresh_tokens.not_used');\n  }\n\n  async _handleCreate() {\n    const name = prompt(this.localize('ui.panel.profile.long_lived_access_tokens.prompt_name'));\n    if (!name) return;\n    try {\n      const token = await this.hass.callWS({\n        type: 'auth/long_lived_access_token',\n        lifespan: 3650,\n        client_name: name,\n      });\n      prompt(this.localize('ui.panel.profile.long_lived_access_tokens.prompt_copy_token'), token);\n      this.fire('hass-refresh-tokens');\n    } catch (err) {\n      // eslint-disable-next-line\n      console.error(err);\n      alert(this.localize('ui.panel.profile.long_lived_access_tokens.create_failed'));\n    }\n  }\n\n  async _handleDelete(ev) {\n    if (!confirm(this.localize('ui.panel.profile.long_lived_access_tokens.confirm_delete', 'name', ev.model.item.client_name))) {\n      return;\n    }\n    try {\n      await this.hass.callWS({\n        type: 'auth/delete_refresh_token',\n        refresh_token_id: ev.model.item.id,\n      });\n      this.fire('hass-refresh-tokens');\n    } catch (err) {\n      // eslint-disable-next-line\n      console.error(err);\n      alert(this.localize('ui.panel.profile.long_lived_access_tokens.delete_failed'));\n    }\n  }\n}\n\ncustomElements.define('ha-long-lived-access-tokens-card', HaLongLivedTokens);\n","import '@polymer/paper-card/paper-card.js';\nimport '@polymer/paper-dropdown-menu/paper-dropdown-menu.js';\nimport '@polymer/paper-item/paper-item.js';\nimport '@polymer/paper-listbox/paper-listbox.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport EventsMixin from '../../mixins/events-mixin.js';\nimport LocalizeMixin from '../../mixins/localize-mixin.js';\n\nimport './ha-settings-row.js';\n\n/*\n * @appliesMixin LocalizeMixin\n * @appliesMixin EventsMixin\n */\nclass HaPickLanguageRow extends\n  LocalizeMixin(EventsMixin(PolymerElement)) {\n  static get template() {\n    return html`\n    <style>\n      a { color: var(--primary-color); }\n    </style>\n    <ha-settings-row narrow='[[narrow]]'>\n      <span slot='heading'>[[localize('ui.panel.profile.language.header')]]</span>\n      <span slot='description'>\n        <a\n          href='https://developers.home-assistant.io/docs/en/internationalization_translation.html'\n          target='_blank'>[[localize('ui.panel.profile.language.link_promo')]]</a>\n      </span>\n      <paper-dropdown-menu label=\"[[localize('ui.panel.profile.language.dropdown_label')]]\" dynamic-align=\"\">\n        <paper-listbox slot=\"dropdown-content\" attr-for-selected=\"language-tag\" selected=\"{{languageSelection}}\">\n          <template is=\"dom-repeat\" items=\"[[languages]]\">\n            <paper-item language-tag$=\"[[item.tag]]\">[[item.nativeName]]</paper-item>\n          </template>\n        </paper-listbox>\n      </paper-dropdown-menu>\n    </ha-settings-row>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      narrow: Boolean,\n      languageSelection: {\n        type: String,\n        observer: 'languageSelectionChanged',\n      },\n      languages: {\n        type: Array,\n        computed: 'computeLanguages(hass)',\n      },\n    };\n  }\n  static get observers() { return ['setLanguageSelection(language)']; }\n\n  computeLanguages(hass) {\n    if (!hass || !hass.translationMetadata) {\n      return [];\n    }\n    return Object.keys(hass.translationMetadata.translations).map(key => ({\n      tag: key,\n      nativeName: hass.translationMetadata.translations[key].nativeName,\n    }));\n  }\n\n  setLanguageSelection(language) {\n    this.languageSelection = language;\n  }\n\n  languageSelectionChanged(newVal) {\n    // Only fire event if language was changed. This prevents select updates when\n    // responding to hass changes.\n    if (newVal !== this.language) {\n      this.fire('hass-language-select', { language: newVal });\n    }\n  }\n}\n\ncustomElements.define('ha-pick-language-row', HaPickLanguageRow);\n","import '@polymer/paper-card/paper-card.js';\nimport '@polymer/paper-dropdown-menu/paper-dropdown-menu.js';\nimport '@polymer/paper-item/paper-item.js';\nimport '@polymer/paper-listbox/paper-listbox.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\n\nimport EventsMixin from '../../mixins/events-mixin.js';\nimport LocalizeMixin from '../../mixins/localize-mixin.js';\n\n/*\n * @appliesMixin LocalizeMixin\n * @appliesMixin EventsMixin\n */\nclass HaPickThemeRow extends\n  LocalizeMixin(EventsMixin(PolymerElement)) {\n  static get template() {\n    return html`\n    <style>\n      a { color: var(--primary-color); }\n    </style>\n    <ha-settings-row narrow='[[narrow]]'>\n      <span slot='heading'>[[localize('ui.panel.profile.themes.header')]]</span>\n      <span slot='description'>\n        <template is='dom-if' if='[[!_hasThemes]]'>\n        [[localize('ui.panel.profile.themes.error_no_theme')]]\n        </template>\n        <a\n          href='https://www.home-assistant.io/components/frontend/#defining-themes'\n          target='_blank'>[[localize('ui.panel.profile.themes.link_promo')]]</a>\n      </span>\n      <paper-dropdown-menu\n        label=\"[[localize('ui.panel.profile.themes.dropdown_label')]]\"\n        dynamic-align\n        disabled='[[!_hasThemes]]'\n      >\n        <paper-listbox slot=\"dropdown-content\" selected=\"{{selectedTheme}}\">\n          <template is=\"dom-repeat\" items=\"[[themes]]\" as=\"theme\">\n            <paper-item>[[theme]]</paper-item>\n          </template>\n        </paper-listbox>\n      </paper-dropdown-menu>\n    </ha-settings-row>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      narrow: Boolean,\n      _hasThemes: {\n        type: Boolean,\n        computed: '_compHasThemes(hass)',\n      },\n      themes: {\n        type: Array,\n        computed: '_computeThemes(hass)',\n      },\n      selectedTheme: {\n        type: Number,\n      },\n    };\n  }\n\n  static get observers() {\n    return [\n      'selectionChanged(hass, selectedTheme)',\n    ];\n  }\n\n  _compHasThemes(hass) {\n    return hass.themes && hass.themes.themes &&\n      Object.keys(hass.themes.themes).length;\n  }\n\n  ready() {\n    super.ready();\n    if (this.hass.selectedTheme && this.themes.indexOf(this.hass.selectedTheme) > 0) {\n      this.selectedTheme = this.themes.indexOf(this.hass.selectedTheme);\n    } else if (!this.hass.selectedTheme) {\n      this.selectedTheme = 0;\n    }\n  }\n\n  _computeThemes(hass) {\n    if (!hass) return [];\n    return ['Backend-selected', 'default'].concat(Object.keys(hass.themes.themes).sort());\n  }\n\n  selectionChanged(hass, selection) {\n    if (selection > 0 && selection < this.themes.length) {\n      if (hass.selectedTheme !== this.themes[selection]) {\n        this.fire('settheme', this.themes[selection]);\n      }\n    } else if (selection === 0 && hass.selectedTheme !== '') {\n      this.fire('settheme', '');\n    }\n  }\n}\n\ncustomElements.define('ha-pick-theme-row', HaPickThemeRow);\n","import '@polymer/paper-toggle-button/paper-toggle-button.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport EventsMixin from '../mixins/events-mixin.js';\n\nexport const pushSupported = (\n  'serviceWorker' in navigator && 'PushManager' in window &&\n  (document.location.protocol === 'https:' ||\n    document.location.hostname === 'localhost' ||\n    document.location.hostname === '127.0.0.1'));\n\n/*\n * @appliesMixin EventsMixin\n */\nclass HaPushNotificationsToggle extends EventsMixin(PolymerElement) {\n  static get template() {\n    return html`\n    <paper-toggle-button\n      disabled=\"[[_compDisabled(disabled, loading)]]\"\n      checked=\"{{pushChecked}}\"\n    ></paper-toggle-button>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: { type: Object, value: null },\n      disabled: {\n        type: Boolean,\n        value: false,\n      },\n      pushChecked: {\n        type: Boolean,\n        value: 'Notification' in window && Notification.permission === 'granted',\n        observer: 'handlePushChange',\n      },\n      loading: {\n        type: Boolean,\n        value: true,\n      }\n    };\n  }\n\n  async connectedCallback() {\n    super.connectedCallback();\n\n    if (!pushSupported) return;\n\n    try {\n      const reg = await navigator.serviceWorker.ready;\n      if (!reg.pushManager) {\n        return;\n      }\n      reg.pushManager.getSubscription().then((subscription) => {\n        this.loading = false;\n        this.pushChecked = !!subscription;\n      });\n    } catch (err) {\n      // We don't set loading to `false` so we remain disabled\n    }\n  }\n\n  handlePushChange(pushChecked) {\n    // Somehow this is triggered on Safari on page load causing\n    // it to get into a loop and crash the page.\n    if (!pushSupported) return;\n\n    if (pushChecked) {\n      this.subscribePushNotifications();\n    } else {\n      this.unsubscribePushNotifications();\n    }\n  }\n\n  async subscribePushNotifications() {\n    const reg = await navigator.serviceWorker.ready;\n\n    try {\n      const sub = await reg.pushManager.subscribe({ userVisibleOnly: true });\n\n      let browserName;\n      if (navigator.userAgent.toLowerCase().indexOf('firefox') > -1) {\n        browserName = 'firefox';\n      } else {\n        browserName = 'chrome';\n      }\n\n      await this.hass.callApi('POST', 'notify.html5', {\n        subscription: sub,\n        browser: browserName\n      });\n    } catch (err) {\n      const message = err.message || 'Notification registration failed.';\n\n      // eslint-disable-next-line\n      console.error(err);\n\n      this.fire('hass-notification', { message });\n      this.pushChecked = false;\n    }\n  }\n\n  async unsubscribePushNotifications() {\n    const reg = await navigator.serviceWorker.ready;\n\n    try {\n      const sub = await reg.pushManager.getSubscription();\n\n      if (!sub) return;\n\n      await this.hass.callApi('DELETE', 'notify.html5', { subscription: sub });\n      await sub.unsubscribe();\n    } catch (err) {\n      const message = err.message || 'Failed unsubscribing for push notifications.';\n\n      // eslint-disable-next-line\n      console.error('Error in unsub push', err);\n\n      this.fire('hass-notification', { message });\n      this.pushChecked = true;\n    }\n  }\n\n  _compDisabled(disabled, loading) {\n    return disabled || loading;\n  }\n}\n\ncustomElements.define('ha-push-notifications-toggle', HaPushNotificationsToggle);\n","import '@polymer/iron-flex-layout/iron-flex-layout-classes.js';\nimport '@polymer/iron-label/iron-label.js';\nimport '@polymer/paper-card/paper-card.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport isComponentLoaded from '../../common/config/is_component_loaded.js';\nimport { pushSupported } from '../../components/ha-push-notifications-toggle.js';\n\nimport LocalizeMixin from '../../mixins/localize-mixin.js';\n\nimport './ha-settings-row.js';\n\n/*\n * @appliesMixin LocalizeMixin\n */\nclass HaPushNotificationsRow extends LocalizeMixin(PolymerElement) {\n  static get template() {\n    return html`\n    <style>\n      a { color: var(--primary-color); }\n    </style>\n    <ha-settings-row narrow='[[narrow]]'>\n      <span slot='heading'>[[localize('ui.panel.profile.push_notifications.header')]]</span>\n      <span\n        slot='description'\n      >\n        [[_description(_platformLoaded, _pushSupported)]]\n        <a\n          href='https://www.home-assistant.io/components/notify.html5/'\n          target='_blank'>[[localize('ui.panel.profile.push_notifications.link_promo')]]</a>\n      </span>\n      <ha-push-notifications-toggle\n        hass=\"[[hass]]\"\n        disabled='[[_error]]'\n      ></ha-push-notifications-toggle>\n    </ha-settings-row>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      narrow: Boolean,\n      _platformLoaded: {\n        type: Boolean,\n        computed: '_compPlatformLoaded(hass)'\n      },\n      _pushSupported: {\n        type: Boolean,\n        value: pushSupported,\n      },\n      _error: {\n        type: Boolean,\n        computed: '_compError(_platformLoaded, _pushSupported)',\n      },\n    };\n  }\n\n  _compPlatformLoaded(hass) {\n    return isComponentLoaded(hass, 'notify.html5');\n  }\n\n  _compError(platformLoaded, pushSupported_) {\n    return !platformLoaded || !pushSupported_;\n  }\n\n  _description(platformLoaded, pushSupported_) {\n    let key;\n    if (!pushSupported_) {\n      key = 'error_use_https';\n    } else if (!platformLoaded) {\n      key = 'error_load_platform';\n    } else {\n      key = 'description';\n    }\n    return this.localize(`ui.panel.profile.push_notifications.${key}`);\n  }\n}\n\ncustomElements.define('ha-push-notifications-row', HaPushNotificationsRow);\n","import '@polymer/app-layout/app-header-layout/app-header-layout.js';\nimport '@polymer/app-layout/app-header/app-header.js';\nimport '@polymer/paper-card/paper-card.js';\nimport '@polymer/paper-item/paper-item-body.js';\nimport '@polymer/paper-item/paper-item.js';\nimport '@polymer/paper-button/paper-button.js';\nimport '@polymer/app-layout/app-toolbar/app-toolbar.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport '../../components/ha-menu-button.js';\nimport '../../resources/ha-style.js';\n\nimport EventsMixin from '../../mixins/events-mixin.js';\n\nimport './ha-change-password-card.js';\nimport './ha-mfa-modules-card.js';\nimport './ha-refresh-tokens-card.js';\nimport './ha-long-lived-access-tokens-card.js';\n\nimport './ha-pick-language-row.js';\nimport './ha-pick-theme-row.js';\nimport './ha-push-notifications-row.js';\n\n/*\n * @appliesMixin EventsMixin\n */\nclass HaPanelProfile extends EventsMixin(PolymerElement) {\n  static get template() {\n    return html`\n    <style include=\"ha-style\">\n      :host {\n        -ms-user-select: initial;\n        -webkit-user-select: initial;\n        -moz-user-select: initial;\n      }\n\n      .content {\n        display: block;\n        max-width: 600px;\n        margin: 0 auto;\n      }\n\n      .content > * {\n        display: block;\n        margin: 24px 0;\n      }\n    </style>\n\n    <app-header-layout has-scrolling-region>\n      <app-header slot=\"header\" fixed>\n        <app-toolbar>\n          <ha-menu-button narrow='[[narrow]]' show-menu='[[showMenu]]'></ha-menu-button>\n          <div main-title>Profile</div>\n        </app-toolbar>\n      </app-header>\n\n      <div class='content'>\n        <paper-card heading='[[hass.user.name]]'>\n          <div class='card-content'>\n            You are currently logged in as [[hass.user.name]].\n            <template is='dom-if' if='[[hass.user.is_owner]]'>You are an owner.</template>\n          </div>\n\n          <ha-pick-language-row\n            narrow=\"[[narrow]]\"\n            hass=\"[[hass]]\"\n          ></ha-pick-language-row>\n          <ha-pick-theme-row\n            narrow=\"[[narrow]]\"\n            hass=\"[[hass]]\"\n          ></ha-pick-theme-row>\n          <ha-push-notifications-row\n            narrow=\"[[narrow]]\"\n            hass=\"[[hass]]\"\n          ></ha-push-notifications-row>\n\n          <div class='card-actions'>\n            <paper-button\n              class='warning'\n              on-click='_handleLogOut'\n            >Log out</paper-button>\n          </div>\n        </paper-card>\n\n        <template is=\"dom-if\" if=\"[[_canChangePassword(hass.user)]]\">\n          <ha-change-password-card hass=\"[[hass]]\"></ha-change-password-card>\n        </template>\n\n        <ha-mfa-modules-card\n          hass='[[hass]]'\n          mfa-modules='[[hass.user.mfa_modules]]'\n        ></ha-mfa-modules-card>\n\n        <ha-refresh-tokens-card\n          hass='[[hass]]'\n          refresh-tokens='[[_refreshTokens]]'\n          on-hass-refresh-tokens='_refreshRefreshTokens'\n        ></ha-refresh-tokens-card>\n\n        <ha-long-lived-access-tokens-card\n          hass='[[hass]]'\n          refresh-tokens='[[_refreshTokens]]'\n          on-hass-refresh-tokens='_refreshRefreshTokens'\n        ></ha-long-lived-access-tokens-card>\n      </div>\n    </app-header-layout>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      narrow: Boolean,\n      showMenu: Boolean,\n      _refreshTokens: Array,\n    };\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this._refreshRefreshTokens();\n  }\n\n  async _refreshRefreshTokens() {\n    this._refreshTokens = await this.hass.callWS({\n      type: 'auth/refresh_tokens'\n    });\n  }\n\n  _handleLogOut() {\n    this.fire('hass-logout');\n  }\n\n  _canChangePassword(user) {\n    return user.credentials.some(cred => cred.auth_provider_type === 'homeassistant');\n  }\n}\n\ncustomElements.define('ha-panel-profile', HaPanelProfile);\n"],"sourceRoot":""}