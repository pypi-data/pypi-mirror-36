{"version":3,"sources":["webpack:///./src/panels/profile/ha-change-password-card.js","webpack:///./src/panels/profile/ha-mfa-modules-card.js","webpack:///./src/panels/profile/ha-settings-row.js","webpack:///./src/panels/profile/ha-refresh-tokens-card.js","webpack:///./src/panels/profile/ha-long-lived-access-tokens-card.js","webpack:///./src/panels/profile/ha-pick-language-row.js","webpack:///./src/panels/profile/ha-pick-theme-row.js","webpack:///./src/components/ha-push-notifications-toggle.js","webpack:///./src/panels/profile/ha-push-notifications-row.js","webpack:///./src/panels/profile/ha-panel-profile.js"],"names":["ha_change_password_card_HaChangePasswordCard","polymer_element","_createClass","HaChangePasswordCard","key","value","_this2","this","prototype","__proto__","Object","getPrototypeOf","call","addEventListener","ev","_statusMsg","keyCode","_changePassword","_currentPassword","_password1","_password2","_errorMsg","_context","abrupt","_loading","prev","next","hass","callWS","type","current_password","new_password","setProperties","t0","catch","message","stop","_callee","_ref","apply","arguments","get","html_tag","a","_templateObject","Boolean","String","customElements","define","registeredDialog","ha_mfa_modules_card_HaMfaModulesCard","events_mixin","localize_mixin","ha_mfa_modules_card_createClass","HaMfaModulesCard","object","property","receiver","Function","desc","getOwnPropertyDescriptor","parent","getter","fire","dialogShowEvent","dialogTag","dialogImport","__webpack_require__","e","then","bind","mfaModuleId","model","module","id","dialogClosedCallback","_refreshCurrentUser","_this3","confirm","name","mfa_module_id","ha_mfa_modules_card_templateObject","mfaModules","Array","ha_settings_row_HaSettingsRow","ha_settings_row_createClass","HaSettingsRow","ha_settings_row_templateObject","narrow","reflectToAttribute","threeLine","ha_refresh_tokens_card_HaRefreshTokens","ha_refresh_tokens_card_createClass","HaRefreshTokens","refreshTokens","filter","tkn","reverse","clientId","localize","created","format_date_time","Date","item","last_used_at","last_used_ip","fn","regeneratorRuntime","mark","client_id","refresh_token_id","console","error","alert","gen","Promise","resolve","reject","step","arg","info","done","err","_x","ha_refresh_tokens_card_templateObject","ha_long_lived_access_tokens_card_HaLongLivedTokens","ha_long_lived_access_tokens_card_createClass","HaLongLivedTokens","ha_long_lived_access_tokens_card_asyncToGenerator","token","wrap","prompt","lifespan","client_name","_ref2","_callee2","_context2","ha_long_lived_access_tokens_card_templateObject","_tokens","computed","ha_pick_language_row_HaPickLanguageRow","ha_pick_language_row_createClass","HaPickLanguageRow","translationMetadata","keys","translations","map","tag","nativeName","language","languageSelection","newVal","ha_pick_language_row_templateObject","observer","languages","ha_pick_theme_row_HaPickThemeRow","ha_pick_theme_row_createClass","HaPickThemeRow","themes","length","selectedTheme","indexOf","concat","sort","selection","ha_pick_theme_row_templateObject","_hasThemes","Number","pushSupported","navigator","window","document","location","protocol","hostname","ha_push_notifications_toggle_HaPushNotificationsToggle","ha_push_notifications_toggle_createClass","HaPushNotificationsToggle","ha_push_notifications_toggle_asyncToGenerator","reg","ha_push_notifications_toggle_get","serviceWorker","ready","pushManager","getSubscription","subscription","loading","pushChecked","subscribePushNotifications","unsubscribePushNotifications","subscribe","userVisibleOnly","sub","browserName","userAgent","toLowerCase","callApi","browser","_ref3","_callee3","_context3","unsubscribe","disabled","ha_push_notifications_toggle_templateObject","Notification","permission","ha_push_notifications_row_HaPushNotificationsRow","ha_push_notifications_row_createClass","HaPushNotificationsRow","is_component_loaded","platformLoaded","pushSupported_","ha_push_notifications_row_templateObject","_platformLoaded","_pushSupported","_error","ha_panel_profile_HaPanelProfile","ha_panel_profile_createClass","HaPanelProfile","_refreshRefreshTokens","_refreshTokens","user","credentials","some","cred","auth_provider_type","ha_panel_profile_templateObject","showMenu"],"mappings":"o8IASMA,8qBAA6BC,EAAA,GAAAC,EAAAC,IAAAC,IAAA,QAAAC,MAAA,WA0FzB,IAAAC,EAAAC,iQACNJ,EAAAK,UAAAC,WAAAC,OAAAC,eAAAR,EAAAK,WAAA,QAAAD,MAAAK,KAAAL,MACAA,KAAKM,iBAAiB,WAAY,SAACC,GACjCR,EAAKS,WAAa,KACC,KAAfD,EAAGE,SACLV,EAAKW,6KAMTV,KAAKQ,WAAa,KACbR,KAAKW,kBAAqBX,KAAKY,YAAeZ,KAAKa,+DAEpDb,KAAKY,aAAeZ,KAAKa,kCAC3Bb,KAAKc,UAAY,0CAAAC,EAAAC,OAAA,oBAIfhB,KAAKW,mBAAqBX,KAAKY,kCACjCZ,KAAKc,UAAY,uDAAAC,EAAAC,OAAA,wBAInBhB,KAAKiB,YACLjB,KAAKc,UAAY,KAAAC,EAAAG,KAAA,GAAAH,EAAAI,KAAA,GAGTnB,KAAKoB,KAAKC,QACdC,KAAM,qDACNC,iBAAkBvB,KAAKW,iBACvBa,aAAcxB,KAAKY,qBAGrBZ,KAAKyB,eACHjB,WAAY,gCACZG,iBAAkB,KAClBC,WAAY,KACZC,WAAY,OAAAE,EAAAI,KAAA,iBAAAJ,EAAAG,KAAA,GAAAH,EAAAW,GAAAX,EAAAY,MAAA,IAGd3B,KAAKc,UAAYC,EAAAW,GAAIE,gBAGvB5B,KAAKiB,YAAW,yBAAAF,EAAAc,SAAAC,EAAA9B,OAAA,WAvCPU,wQAuCO,kBAAAqB,EAAAC,MAAAhC,KAAAiC,iBAAApC,IAAA,WAAAqC,IAAA,WApIhB,OAAO/B,OAAAgC,EAAAC,EAAAjC,CAAPkC,sCAsEA,OACEjB,KAAMjB,OAENc,UACEK,KAAMgB,QACNxC,UAIFU,WAAY+B,OACZzB,UAAWyB,OAEX5B,iBAAkB4B,OAClB3B,WAAY2B,OACZ1B,WAAY0B,cASL7B,QA/FPjB,GA0IN+C,eAAeC,OAAO,0BAA2BhD,inFCvI7CiD,KAMEC,8qBAAyBxC,OAAAyC,EAAA,EAAAzC,CAAYA,OAAA0C,EAAA,EAAA1C,CAAcT,EAAA,KAAAoD,EAAAC,IAAAlD,IAAA,oBAAAC,MAAA,qBAAAoC,EAAAc,EAAAC,EAAAC,GAAA,OAAAF,MAAAG,SAAAlD,WAAA,IAAAmD,EAAAjD,OAAAkD,yBAAAL,EAAAC,GAAA,YAAAG,EAAA,KAAAE,EAAAnD,OAAAC,eAAA4C,GAAA,cAAAM,OAAA,EAAApB,EAAAoB,EAAAL,EAAAC,GAAA,aAAAE,EAAA,OAAAA,EAAAtD,MAAA,IAAAyD,EAAAH,EAAAlB,IAAA,gBAAAqB,IAAAlD,KAAA6C,QAAA,IA8DrDH,EAAA9C,UAAAC,WAAAC,OAAAC,eAAA2C,EAAA9C,WAAA,oBAAAD,MAAAK,KAAAL,MAEK0C,IACHA,KACA1C,KAAKwD,KAAK,mBACRC,gBAAiB,6BACjBC,UAAW,2BACXC,aAAc,kBAAMC,EAAAC,EAAA,IAAAC,KAAAF,EAAAG,KAAA,kBAAAlE,IAAA,UAAAC,MAAA,SAKlBS,GAAI,IAAAR,EAAAC,KACVA,KAAKwD,KAAK,8BACRpC,KAAMpB,KAAKoB,KACX4C,YAAazD,EAAG0D,MAAMC,OAAOC,GAC7BC,qBAAsB,kBAAMrE,EAAKsE,0DAI5B9D,GAAI,IAAA+D,EAAAtE,KACX,GAAKuE,4CAA4ChE,EAAG0D,MAAMC,OAAOM,KAA5D,KAAL,CAEA,IAAMR,EAAczD,EAAG0D,MAAMC,OAAOC,GAEpCnE,KAAKoB,KAAKC,QACRC,KAAM,kBACNmD,cAAeT,IACdF,KAAK,WACNQ,EAAKD,uEAKPrE,KAAKwD,KAAK,kCAAA3D,IAAA,WAAAqC,IAAA,WA9FV,OAAO/B,OAAAgC,EAAAC,EAAAjC,CAAPuE,sCA2CA,OACEtD,KAAMjB,OAENc,UACEK,KAAMgB,QACNxC,UAIFU,WAAY+B,OACZzB,UAAWyB,OAEXoC,WAAYC,aAzDZjC,GAoGNH,eAAeC,OAAO,sBAAuBE,8oDCnHvCkC,8qBAAsBnF,EAAA,GAAAoF,EAAAC,EAAA,OAAAlF,IAAA,WAAAqC,IAAA,WAExB,OAAO/B,OAAAgC,EAAAC,EAAAjC,CAAP6E,sCA4BA,OACEC,QACE3D,KAAMgB,QACN4C,uBAEFC,WACE7D,KAAMgB,QACNxC,eAAOiF,EArCTF,GA2CNrC,eAAeC,OAAO,kBAAmBoC,25FC/BnCO,8qBAAwBjF,OAAA0C,EAAA,EAAA1C,CAAcA,OAAAyC,EAAA,EAAAzC,CAAYT,EAAA,KAAA2F,EAAAC,IAAAzF,IAAA,iBAAAC,MAAA,SA8CvCyF,GACb,OAAOA,EAAcC,OAAO,SAAAC,GAAA,MAAoB,WAAbA,EAAInE,OAAmBoE,+CAG/CC,GACX,OAAO3F,KAAK4F,SACV,8CACA,WAAYD,4CAICE,GACf,OAAO7F,KAAK4F,SACV,6CACA,OAAQzF,OAAA2F,EAAA1D,EAAAjC,CAAe,IAAI4F,KAAKF,6CAIpBG,GACd,OAAOA,EAAKC,aAAejG,KAAK4F,SAC9B,4CACA,OAAQzF,OAAA2F,EAAA1D,EAAAjC,CAAe,IAAI4F,KAAKC,EAAKC,eACrC,WAAYD,EAAKE,cACflG,KAAK4F,SAAS,+CAAA/F,IAAA,gBAAAC,OAAAqG,EAAAC,mBAAAC,KAAA,SAAAvE,EAGAvB,qFACbgE,QAAQvE,KAAK4F,SAAS,iDAAkD,OAAQrF,EAAG0D,MAAM+B,KAAKM,sFAI3FtG,KAAKoB,KAAKC,QACdC,KAAM,4BACNiF,iBAAkBhG,EAAG0D,MAAM+B,KAAK7B,YAElCnE,KAAKwD,KAAK,uBAAAzC,EAAAI,KAAA,gBAAAJ,EAAAG,KAAA,EAAAH,EAAAW,GAAAX,EAAAY,MAAA,GAGV6E,QAAQC,MAAR1F,EAAAW,IACAgF,MAAM1G,KAAK4F,SAAS,2EAAA7E,EAAAc,SAAAC,EAAA9B,OAAA,SAhBJ+B,EAAA,eAAA4E,EAAAR,EAAAnE,MAAAhC,KAAAiC,WAAA,WAAA2E,QAAA,SAAAC,EAAAC,GAAA,gBAAAC,EAAAlH,EAAAmH,GAAA,QAAAC,EAAAN,EAAA9G,GAAAmH,GAAAlH,EAAAmH,EAAAnH,MAAA,MAAA2G,GAAA,YAAAK,EAAAL,GAAA,IAAAQ,EAAAC,KAAA,OAAAN,QAAAC,QAAA/G,GAAAgE,KAAA,SAAAhE,GAAAiH,EAAA,OAAAjH,IAAA,SAAAqH,GAAAJ,EAAA,QAAAI,KAAAN,EAAA/G,GAAA,YAgBI,SAAAsH,GAAA,OAAArF,EAAAC,MAAAhC,KAAAiC,iBAAApC,IAAA,WAAAqC,IAAA,WAnFtB,OAAO/B,OAAAgC,EAAAC,EAAAjC,CAAPkH,sCAsCA,OACEjG,KAAMjB,OACNoF,cAAeX,aA2BC,IAAAuB,EAAApE,EArEhBqD,GA0FN5C,eAAeC,OAAO,yBAA0B2C,wwHCzF1CkC,8qBAA0BnH,OAAA0C,EAAA,EAAA1C,CAAcA,OAAAyC,EAAA,EAAAzC,CAAYT,EAAA,KAAA6H,EAAAC,IAAA3H,IAAA,iBAAAC,MAAA,SAyDzCyF,GACb,OAAOA,EAAcC,OAAO,SAAAC,GAAA,MAAoB,4BAAbA,EAAInE,OAAoCoE,+CAGhElB,GACX,OAAOxE,KAAK4F,SACV,wDACA,OAAQpB,4CAIKqB,GACf,OAAO7F,KAAK4F,SACV,uDACA,OAAQzF,OAAA2F,EAAA1D,EAAAjC,CAAe,IAAI4F,KAAKF,6CAIpBG,GACd,OAAOA,EAAKC,aAAejG,KAAK4F,SAC9B,4CACA,OAAQzF,OAAA2F,EAAA1D,EAAAjC,CAAe,IAAI4F,KAAKC,EAAKC,eACrC,WAAYD,EAAKE,cACflG,KAAK4F,SAAS,+CAAA/F,IAAA,gBAAAC,OAAAiC,EAAA0F,EAAArB,mBAAAC,KAAA,SAAAvE,IAAA,IAAA0C,EAAAkD,EAAA,OAAAtB,mBAAAuB,KAAA,SAAA5G,GAAA,cAAAA,EAAAG,KAAAH,EAAAI,MAAA,UAIZqD,EAAOoD,OAAO5H,KAAK4F,SAAS,2DAAA7E,EAAAI,KAAA,eAAAJ,EAAAC,OAAA,wBAAAD,EAAAG,KAAA,EAAAH,EAAAI,KAAA,EAGZnB,KAAKoB,KAAKC,QAC5BC,KAAM,+BACNuG,SAAU,KACVC,YAAatD,WAHTkD,SAKNE,OAAO5H,KAAK4F,SAAS,+DAAgE8B,GACrF1H,KAAKwD,KAAK,uBAAAzC,EAAAI,KAAA,iBAAAJ,EAAAG,KAAA,GAAAH,EAAAW,GAAAX,EAAAY,MAAA,GAGV6E,QAAQC,MAAR1F,EAAAW,IACAgF,MAAM1G,KAAK4F,SAAS,qFAAA7E,EAAAc,SAAAC,EAAA9B,OAAA,6BAAA+B,EAAAC,MAAAhC,KAAAiC,eAAApC,IAAA,gBAAAC,OAAAiI,EAAAN,EAAArB,mBAAAC,KAAA,SAAA2B,EAIJzH,qFACbgE,QAAQvE,KAAK4F,SAAS,2DAA4D,OAAQrF,EAAG0D,MAAM+B,KAAK8B,wFAIrG9H,KAAKoB,KAAKC,QACdC,KAAM,4BACNiF,iBAAkBhG,EAAG0D,MAAM+B,KAAK7B,YAElCnE,KAAKwD,KAAK,uBAAAyE,EAAA9G,KAAA,gBAAA8G,EAAA/G,KAAA,EAAA+G,EAAAvG,GAAAuG,EAAAtG,MAAA,GAGV6E,QAAQC,MAARwB,EAAAvG,IACAgF,MAAM1G,KAAK4F,SAAS,qFAAAqC,EAAApG,SAAAmG,EAAAhI,OAAA,mBAAAoH,GAAA,OAAAW,EAAA/F,MAAAhC,KAAAiC,iBAAApC,IAAA,WAAAqC,IAAA,WAhHtB,OAAO/B,OAAAgC,EAAAC,EAAAjC,CAAP+H,sCA6CA,OACE9G,KAAMjB,OACNoF,cAAeX,MACfuD,SACE7G,KAAMsD,MACNwD,SAAU,sCAAAZ,EA6CQ,IAAAO,EAjBJhG,EAhFhBuF,GAuHN9E,eAAeC,OAAO,mCAAoC6E,irECvHpDe,8qBACJlI,OAAA0C,EAAA,EAAA1C,CAAcA,OAAAyC,EAAA,EAAAzC,CAAYT,EAAA,KAAA4I,EAAAC,IAAA1I,IAAA,mBAAAC,MAAA,SAwCTsB,GACf,OAAKA,GAASA,EAAKoH,oBAGZrI,OAAOsI,KAAKrH,EAAKoH,oBAAoBE,cAAcC,IAAI,SAAA9I,GAAA,OAC5D+I,IAAK/I,EACLgJ,WAAYzH,EAAKoH,oBAAoBE,aAAa7I,GAAKgJ,8DAItCC,GACnB9I,KAAK+I,kBAAoBD,mDAGFE,GAGnBA,IAAWhJ,KAAK8I,UAClB9I,KAAKwD,KAAK,wBAA0BsF,SAAUE,uCAxDhD,OAAO7I,OAAAgC,EAAAC,EAAAjC,CAAP8I,sCAuBA,OACE7H,KAAMjB,OACN8E,OAAQ3C,QACRyG,mBACEzH,KAAMiB,OACN2G,SAAU,4BAEZC,WACE7H,KAAMsD,MACNwD,SAAU,8BAAAvI,IAAA,YAAAqC,IAAA,WAIS,OAAQ,sCAAAqG,EAvC7BF,GAgEN7F,eAAeC,OAAO,uBAAwB4F,i3ECjExCe,8qBACJjJ,OAAA0C,EAAA,EAAA1C,CAAcA,OAAAyC,EAAA,EAAAzC,CAAYT,EAAA,KAAA2J,EAAAC,IAAAzJ,IAAA,iBAAAC,MAAA,SAuDXsB,GACb,OAAOA,EAAKmI,QAAUnI,EAAKmI,OAAOA,QAChCpJ,OAAOsI,KAAKrH,EAAKmI,OAAOA,QAAQC,mSAIlCF,EAAArJ,UAAAC,WAAAC,OAAAC,eAAAkJ,EAAArJ,WAAA,QAAAD,MAAAK,KAAAL,MACIA,KAAKoB,KAAKqI,eAAiBzJ,KAAKuJ,OAAOG,QAAQ1J,KAAKoB,KAAKqI,eAAiB,EAC5EzJ,KAAKyJ,cAAgBzJ,KAAKuJ,OAAOG,QAAQ1J,KAAKoB,KAAKqI,eACzCzJ,KAAKoB,KAAKqI,gBACpBzJ,KAAKyJ,cAAgB,MAAA5J,IAAA,iBAAAC,MAAA,SAIVsB,GACb,OAAKA,GACG,mBAAoB,WAAWuI,OAAOxJ,OAAOsI,KAAKrH,EAAKmI,OAAOA,QAAQK,oDAG/DxI,EAAMyI,GACjBA,EAAY,GAAKA,EAAY7J,KAAKuJ,OAAOC,OACvCpI,EAAKqI,gBAAkBzJ,KAAKuJ,OAAOM,IACrC7J,KAAKwD,KAAK,WAAYxD,KAAKuJ,OAAOM,IAEb,IAAdA,GAA0C,KAAvBzI,EAAKqI,eACjCzJ,KAAKwD,KAAK,WAAY,SAAA3D,IAAA,WAAAqC,IAAA,WA9ExB,OAAO/B,OAAAgC,EAAAC,EAAAjC,CAAP2J,sCA8BA,OACE1I,KAAMjB,OACN8E,OAAQ3C,QACRyH,YACEzI,KAAMgB,QACN8F,SAAU,wBAEZmB,QACEjI,KAAMsD,MACNwD,SAAU,wBAEZqB,eACEnI,KAAM0I,2CAMV,OACE,6CAAAV,EApDAF,GAsFN5G,eAAeC,OAAO,oBAAqB2G,qqCC/FpC,IAAMa,EACX,kBAAmBC,WAAa,gBAAiBC,SACjB,WAA/BC,SAASC,SAASC,UACc,cAA/BF,SAASC,SAASE,UACa,cAA/BH,SAASC,SAASE,UAKhBC,8qBAAkCrK,OAAAyC,EAAA,EAAAzC,CAAYT,EAAA,IAAA+K,EAAAC,IAAA7K,IAAA,oBAAAC,OAAAiC,EAAA4I,EAAAvE,mBAAAC,KAAA,SAAAvE,IAAA,IAAA8I,EAAA7K,EAAAC,KAAA,OAAAoG,mBAAAuB,KAAA,SAAA5G,GAAA,cAAAA,EAAAG,KAAAH,EAAAI,MAAA,UA8BhD0J,EAAAH,EAAAzK,UAAAC,WAAAC,OAAAC,eAAAsK,EAAAzK,WAAA,oBAAAD,MAAAK,KAAAL,MAEKiK,4EAGeC,UAAUY,cAAcC,iBAApCH,UACGI,6DAGTJ,EAAII,YAAYC,kBAAkBnH,KAAK,SAACoH,GACtCnL,EAAKoL,WACLpL,EAAKqL,cAAgBF,kMAOVE,GAGVnB,IAEDmB,EACFpL,KAAKqL,6BAELrL,KAAKsL,+NAKWpB,UAAUY,cAAcC,oBAApCH,2BAGcA,EAAII,YAAYO,WAAYC,qBAAiB,cAAzDC,SAEFC,SAEFA,EADExB,UAAUyB,UAAUC,cAAclC,QAAQ,YAAc,EAC5C,UAEA,SAAAzB,EAAA9G,KAAA,GAGVnB,KAAKoB,KAAKyK,QAAQ,OAAQ,gBAC9BX,aAAcO,EACdK,QAASJ,8DAGL9J,EAAUqG,EAAAvG,GAAIE,SAAW,oCAG/B4E,QAAQC,MAARwB,EAAAvG,IAEA1B,KAAKwD,KAAK,qBAAuB5B,YACjC5B,KAAKoL,eAAc,yBAAAnD,EAAApG,SAAAmG,EAAAhI,OAAA,6BAAA+H,EAAA/F,MAAAhC,KAAAiC,eAAApC,IAAA,+BAAAC,OAAAiM,EAAApB,EAAAvE,mBAAAC,KAAA,SAAA2F,IAAA,IAAApB,EAAAa,EAAA7J,EAAA,OAAAwE,mBAAAuB,KAAA,SAAAsE,GAAA,cAAAA,EAAA/K,KAAA+K,EAAA9K,MAAA,cAAA8K,EAAA9K,KAAA,EAKH+I,UAAUY,cAAcC,oBAApCH,2BAGcA,EAAII,YAAYC,4BAA5BQ,2EAIAzL,KAAKoB,KAAKyK,QAAQ,SAAU,gBAAkBX,aAAcO,6BAC5DA,EAAIS,wEAEJtK,EAAUqK,EAAAvK,GAAIE,SAAW,+CAG/B4E,QAAQC,MAAM,sBAAdwF,EAAAvK,IAEA1B,KAAKwD,KAAK,qBAAuB5B,YACjC5B,KAAKoL,eAAc,yBAAAa,EAAApK,SAAAmK,EAAAhM,OAAA,6BAAA+L,EAAA/J,MAAAhC,KAAAiC,eAAApC,IAAA,gBAAAC,MAAA,SAITqM,EAAUhB,GACtB,OAAOgB,GAAYhB,qCA5GnB,OAAOhL,OAAAgC,EAAAC,EAAAjC,CAAPiM,sCASA,OACEhL,MAAQE,KAAMnB,OAAQL,MAAO,MAC7BqM,UACE7K,KAAMgB,QACNxC,UAEFsL,aACE9J,KAAMgB,QACNxC,MAAO,iBAAkBqK,QAAsC,YAA5BkC,aAAaC,WAChDpD,SAAU,oBAEZiC,SACE7J,KAAMgB,QACNxC,eAAO4K,EA4DU,IAAAqB,EA5BdT,EAxDyCvJ,EAA9CyI,GAkHNhI,eAAeC,OAAO,+BAAgC+H,ipDCjHhD+B,8qBAA+BpM,OAAA0C,EAAA,EAAA1C,CAAcT,EAAA,IAAA8M,EAAAC,IAAA5M,IAAA,sBAAAC,MAAA,SA2C7BsB,GAClB,OAAOjB,OAAAuM,EAAAtK,EAAAjC,CAAkBiB,EAAM,mBAAAvB,IAAA,aAAAC,MAAA,SAGtB6M,EAAgBC,GACzB,OAAQD,IAAmBC,uCAGhBD,EAAgBC,GAC3B,IAAI/M,EAQJ,OAFEA,EALG+M,EAEOD,EAGJ,cAFA,sBAFA,kBAMD3M,KAAK4F,SAAL,uCAAqD/F,sCA1D5D,OAAOM,OAAAgC,EAAAC,EAAAjC,CAAP0M,sCAuBA,OACEzL,KAAMjB,OACN8E,OAAQ3C,QACRwK,iBACExL,KAAMgB,QACN8F,SAAU,6BAEZ2E,gBACEzL,KAAMgB,QACNxC,MAAOmK,GAET+C,QACE1L,KAAMgB,QACN8F,SAAU,oDAAAqE,EAtCZF,GAgEN/J,eAAeC,OAAO,4BAA6B8J,29JCrD7CU,8qBAAuB9M,OAAAyC,EAAA,EAAAzC,CAAYT,EAAA,IAAAwN,EAAAC,IAAAtN,IAAA,oBAAAC,MAAA,qBAAAoC,EAAAc,EAAAC,EAAAC,GAAA,OAAAF,MAAAG,SAAAlD,WAAA,IAAAmD,EAAAjD,OAAAkD,yBAAAL,EAAAC,GAAA,YAAAG,EAAA,KAAAE,EAAAnD,OAAAC,eAAA4C,GAAA,cAAAM,OAAA,EAAApB,EAAAoB,EAAAL,EAAAC,GAAA,aAAAE,EAAA,OAAAA,EAAAtD,MAAA,IAAAyD,EAAAH,EAAAlB,IAAA,gBAAAqB,IAAAlD,KAAA6C,QAAA,IA6FrCiK,EAAAlN,UAAAC,WAAAC,OAAAC,eAAA+M,EAAAlN,WAAA,oBAAAD,MAAAK,KAAAL,MACAA,KAAKoN,oMAIuBpN,KAAKoB,KAAKC,QACpCC,KAAM,+BADRtB,KAAKqN,mEAJAD,wQAIAC,mFAMLrN,KAAKwD,KAAK,kBAAA3D,IAAA,qBAAAC,MAAA,SAGOwN,GACjB,OAAOA,EAAKC,YAAYC,KAAK,SAAAC,GAAA,MAAoC,kBAA5BA,EAAKC,wDA1G1C,OAAOvN,OAAAgC,EAAAC,EAAAjC,CAAPwN,sCAkFA,OACEvM,KAAMjB,OACN8E,OAAQ3C,QACRsL,SAAUtL,QACV+K,eAAgBzI,aAMbwI,QA9FHH,GAgHNzK,eAAeC,OAAO,mBAAoBwK","file":"cf75537675e9555df078.chunk.js","sourcesContent":["import '@polymer/paper-button/paper-button.js';\nimport '@polymer/paper-dialog/paper-dialog.js';\nimport '@polymer/paper-spinner/paper-spinner.js';\nimport '@polymer/paper-card/paper-card.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport '../../resources/ha-style.js';\n\nclass HaChangePasswordCard extends PolymerElement {\n  static get template() {\n    return html`\n    <style include=\"ha-style\">\n      .error {\n        color: red;\n      }\n      .status {\n        color: var(--primary-color);\n      }\n      .error, .status {\n        position: absolute;\n        top: -4px;\n      }\n      paper-card {\n        display: block;\n      }\n      .currentPassword {\n        margin-top: -4px;\n      }\n    </style>\n    <div>\n      <paper-card heading=\"Change Password\">\n        <div class=\"card-content\">\n          <template is=\"dom-if\" if=\"[[_errorMsg]]\">\n            <div class='error'>[[_errorMsg]]</div>\n          </template>\n          <template is=\"dom-if\" if=\"[[_statusMsg]]\">\n            <div class=\"status\">[[_statusMsg]]</div>\n          </template>\n          <paper-input\n            class='currentPassword'\n            label='Current Password'\n            type='password'\n            value='{{_currentPassword}}'\n            required\n            auto-validate\n            error-message='Required'\n          ></paper-input>\n          <template is='dom-if' if='[[_currentPassword]]'>\n            <paper-input\n              label='New Password'\n              type='password'\n              value='{{_password1}}'\n              required\n              auto-validate\n              error-message='Required'\n            ></paper-input>\n            <paper-input\n              label='Confirm New Password'\n              type='password'\n              value='{{_password2}}'\n              required\n              auto-validate\n              error-message='Required'\n            ></paper-input>\n          </template>\n        </div>\n        <div class=\"card-actions\">\n          <template is=\"dom-if\" if=\"[[_loading]]\">\n            <div><paper-spinner active></paper-spinner></div>\n          </template>\n          <template is=\"dom-if\" if=\"[[!_loading]]\">\n            <paper-button on-click=\"_changePassword\">Submit</paper-button>\n          </template>\n        </div>\n      </paper-card>\n    </div>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n\n      _loading: {\n        type: Boolean,\n        value: false,\n      },\n\n      // Error message when can't talk to server etc\n      _statusMsg: String,\n      _errorMsg: String,\n\n      _currentPassword: String,\n      _password1: String,\n      _password2: String,\n    };\n  }\n\n  ready() {\n    super.ready();\n    this.addEventListener('keypress', (ev) => {\n      this._statusMsg = null;\n      if (ev.keyCode === 13) {\n        this._changePassword();\n      }\n    });\n  }\n\n  async _changePassword() {\n    this._statusMsg = null;\n    if (!this._currentPassword || !this._password1 || !this._password2) return;\n\n    if (this._password1 !== this._password2) {\n      this._errorMsg = \"New password confirmation doesn't match\";\n      return;\n    }\n\n    if (this._currentPassword === this._password1) {\n      this._errorMsg = 'New password must be different than current password';\n      return;\n    }\n\n    this._loading = true;\n    this._errorMsg = null;\n\n    try {\n      await this.hass.callWS({\n        type: 'config/auth_provider/homeassistant/change_password',\n        current_password: this._currentPassword,\n        new_password: this._password1,\n      });\n\n      this.setProperties({\n        _statusMsg: 'Password changed successfully',\n        _currentPassword: null,\n        _password1: null,\n        _password2: null\n      });\n    } catch (err) {\n      this._errorMsg = err.message;\n    }\n\n    this._loading = false;\n  }\n}\n\ncustomElements.define('ha-change-password-card', HaChangePasswordCard);\n","import '@polymer/paper-button/paper-button.js';\nimport '@polymer/paper-card/paper-card.js';\nimport '@polymer/paper-item/paper-item-body.js';\nimport '@polymer/paper-item/paper-item.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport '../../resources/ha-style.js';\n\nimport EventsMixin from '../../mixins/events-mixin.js';\nimport LocalizeMixin from '../../mixins/localize-mixin.js';\n\nlet registeredDialog = false;\n\n/*\n * @appliesMixin EventsMixin\n * @appliesMixin LocalizeMixin\n */\nclass HaMfaModulesCard extends EventsMixin(LocalizeMixin(PolymerElement)) {\n  static get template() {\n    return html`\n    <style include=\"iron-flex ha-style\">\n      .error {\n        color: red;\n      }\n      .status {\n        color: var(--primary-color);\n      }\n      .error, .status {\n        position: absolute;\n        top: -4px;\n      }\n      paper-card {\n        display: block;\n        max-width: 600px;\n        margin: 16px auto;\n      }\n      paper-button {\n        color: var(--primary-color);\n        font-weight: 500;\n        margin-right: -.57em;\n      }\n    </style>\n    <paper-card heading=\"Multi-factor Authentication Modules\">\n      <template is=\"dom-repeat\" items=\"[[mfaModules]]\" as=\"module\">\n        <paper-item>\n          <paper-item-body two-line=\"\">\n            <div>[[module.name]]</div>\n            <div secondary=\"\">[[module.id]]</div>\n          </paper-item-body>\n          <template is=\"dom-if\" if=\"[[module.enabled]]\">\n            <paper-button on-click=\"_disable\">Disable</paper-button>\n          </template>\n          <template is=\"dom-if\" if=\"[[!module.enabled]]\">\n            <paper-button on-click=\"_enable\">Enable</paper-button>\n          </template>\n        </paper-item>\n      </template>\n    </paper-card>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n\n      _loading: {\n        type: Boolean,\n        value: false,\n      },\n\n      // Error message when can't talk to server etc\n      _statusMsg: String,\n      _errorMsg: String,\n\n      mfaModules: Array,\n    };\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    if (!registeredDialog) {\n      registeredDialog = true;\n      this.fire('register-dialog', {\n        dialogShowEvent: 'show-mfa-module-setup-flow',\n        dialogTag: 'ha-mfa-module-setup-flow',\n        dialogImport: () => import('./ha-mfa-module-setup-flow.js'),\n      });\n    }\n  }\n\n  _enable(ev) {\n    this.fire('show-mfa-module-setup-flow', {\n      hass: this.hass,\n      mfaModuleId: ev.model.module.id,\n      dialogClosedCallback: () => this._refreshCurrentUser(),\n    });\n  }\n\n  _disable(ev) {\n    if (!confirm(`Are you sure you want to disable ${ev.model.module.name}?`)) return;\n\n    const mfaModuleId = ev.model.module.id;\n\n    this.hass.callWS({\n      type: 'auth/depose_mfa',\n      mfa_module_id: mfaModuleId,\n    }).then(() => {\n      this._refreshCurrentUser();\n    });\n  }\n\n  _refreshCurrentUser() {\n    this.fire('hass-refresh-current-user');\n  }\n}\n\ncustomElements.define('ha-mfa-modules-card', HaMfaModulesCard);\n","import { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nclass HaSettingsRow extends PolymerElement {\n  static get template() {\n    return html`\n    <style>\n      :host {\n        display: flex;\n        padding: 0 16px;\n        align-content: normal;\n        align-self: auto;\n        align-items: center;\n      }\n      :host([narrow]) {\n        align-items: normal;\n        flex-direction: column;\n        border-top: 1px solid var(--divider-color);\n        padding-bottom: 8px;\n      }\n      paper-item-body {\n        padding-right: 16px;\n      }\n    </style>\n    <paper-item-body two-line$='[[!threeLine]]' three-line$='[[threeLine]]'>\n      <slot name=\"heading\"></slot>\n      <div secondary><slot name=\"description\"></slot></div>\n    </paper-item-body>\n    <slot></slot>\n    `;\n  }\n\n  static get properties() {\n    return {\n      narrow: {\n        type: Boolean,\n        reflectToAttribute: true,\n      },\n      threeLine: {\n        type: Boolean,\n        value: false,\n      }\n    };\n  }\n}\n\ncustomElements.define('ha-settings-row', HaSettingsRow);\n","import '@polymer/paper-icon-button/paper-icon-button.js';\nimport '@polymer/paper-tooltip/paper-tooltip.js';\n\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport EventsMixin from '../../mixins/events-mixin.js';\nimport LocalizeMixin from '../../mixins/localize-mixin.js';\nimport formatDateTime from '../../common/datetime/format_date_time.js';\n\nimport './ha-settings-row.js';\n\n/*\n * @appliesMixin EventsMixin\n * @appliesMixin LocalizeMixin\n */\nclass HaRefreshTokens extends LocalizeMixin(EventsMixin(PolymerElement)) {\n  static get template() {\n    return html`\n    <style>\n      paper-card {\n        display: block;\n      }\n      paper-icon-button {\n        color: var(--primary-text-color);\n      }\n      paper-icon-button[disabled] {\n        color: var(--disabled-text-color);\n      }\n    </style>\n    <paper-card heading=\"[[localize('ui.panel.profile.refresh_tokens.header')]]\">\n      <div class=\"card-content\">[[localize('ui.panel.profile.refresh_tokens.description')]]</div>\n      <template is='dom-repeat' items='[[_computeTokens(refreshTokens)]]'>\n        <ha-settings-row three-line>\n          <span slot='heading'>[[_formatTitle(item.client_id)]]</span>\n          <div slot='description'>[[_formatCreatedAt(item.created_at)]]</div>\n          <div slot='description'>[[_formatLastUsed(item)]]</div>\n          <div>\n            <template is='dom-if' if='[[item.is_current]]'>\n              <paper-tooltip\n                position=\"left\"\n              >[[localize('ui.panel.profile.refresh_tokens.current_token_tooltip')]]</paper-tooltip>\n            </template>\n            <paper-icon-button\n              icon=\"hass:delete\"\n              on-click='_handleDelete'\n              disabled=\"[[item.is_current]]\"\n            ></paper-icon-button>\n          </div>\n        </ha-settings-row>\n      </template>\n    </paper-card>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      refreshTokens: Array,\n    };\n  }\n\n  _computeTokens(refreshTokens) {\n    return refreshTokens.filter(tkn => tkn.type === 'normal').reverse();\n  }\n\n  _formatTitle(clientId) {\n    return this.localize(\n      'ui.panel.profile.refresh_tokens.token_title',\n      'clientId', clientId\n    );\n  }\n\n  _formatCreatedAt(created) {\n    return this.localize(\n      'ui.panel.profile.refresh_tokens.created_at',\n      'date', formatDateTime(new Date(created))\n    );\n  }\n\n  _formatLastUsed(item) {\n    return item.last_used_at ? this.localize(\n      'ui.panel.profile.refresh_tokens.last_used',\n      'date', formatDateTime(new Date(item.last_used_at)),\n      'location', item.last_used_ip\n    ) : this.localize('ui.panel.profile.refresh_tokens.not_used');\n  }\n\n  async _handleDelete(ev) {\n    if (!confirm(this.localize('ui.panel.profile.refresh_tokens.confirm_delete', 'name', ev.model.item.client_id))) {\n      return;\n    }\n    try {\n      await this.hass.callWS({\n        type: 'auth/delete_refresh_token',\n        refresh_token_id: ev.model.item.id,\n      });\n      this.fire('hass-refresh-tokens');\n    } catch (err) {\n      // eslint-disable-next-line\n      console.error(err);\n      alert(this.localize('ui.panel.profile.refresh_tokens.delete_failed'));\n    }\n  }\n}\n\ncustomElements.define('ha-refresh-tokens-card', HaRefreshTokens);\n","import '@polymer/paper-button/paper-button.js';\n\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport EventsMixin from '../../mixins/events-mixin.js';\nimport LocalizeMixin from '../../mixins/localize-mixin.js';\nimport formatDateTime from '../../common/datetime/format_date_time.js';\n\nimport '../../resources/ha-style.js';\n\nimport './ha-settings-row.js';\n\n/*\n * @appliesMixin EventsMixin\n * @appliesMixin LocalizeMixin\n */\nclass HaLongLivedTokens extends LocalizeMixin(EventsMixin(PolymerElement)) {\n  static get template() {\n    return html`\n    <style include=\"ha-style\">\n      paper-card {\n        display: block;\n      }\n      .card-content {\n        margin: -1em 0;\n      }\n      a {\n        color: var(--primary-color);\n      }\n      paper-icon-button {\n        color: var(--primary-text-color);\n      }\n    </style>\n    <paper-card heading=\"[[localize('ui.panel.profile.long_lived_access_tokens.header')]]\">\n      <div class=\"card-content\">\n        <p>\n          [[localize('ui.panel.profile.long_lived_access_tokens.description')]]\n          <a href='https://developers.home-assistant.io/docs/en/auth_api.html#making-authenticated-requests' target='_blank'>\n            [[localize('ui.panel.profile.long_lived_access_tokens.learn_auth_requests')]]\n          </a>\n        </p>\n        <template is='dom-if' if='[[!_tokens.length]]'>\n          <p>[[localize('ui.panel.profile.long_lived_access_tokens.empty_state')]]</p>\n        </template>\n      </div>\n      <template is='dom-repeat' items='[[_tokens]]'>\n        <ha-settings-row three-line>\n          <span slot='heading'>[[item.client_name]]</span>\n          <div slot='description'>[[_formatCreatedAt(item.created_at)]]</div>\n          <div slot='description'>[[_formatLastUsed(item)]]</div>\n          <paper-icon-button icon=\"hass:delete\" on-click='_handleDelete'></paper-icon-button>\n        </ha-settings-row>\n      </template>\n      <div class='card-actions'>\n        <paper-button on-click='_handleCreate'>\n          [[localize('ui.panel.profile.long_lived_access_tokens.create')]]\n        </paper-button>\n      </div>\n    </paper-card>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      refreshTokens: Array,\n      _tokens: {\n        type: Array,\n        computed: '_computeTokens(refreshTokens)'\n      }\n    };\n  }\n\n  _computeTokens(refreshTokens) {\n    return refreshTokens.filter(tkn => tkn.type === 'long_lived_access_token').reverse();\n  }\n\n  _formatTitle(name) {\n    return this.localize(\n      'ui.panel.profile.long_lived_access_tokens.token_title',\n      'name', name\n    );\n  }\n\n  _formatCreatedAt(created) {\n    return this.localize(\n      'ui.panel.profile.long_lived_access_tokens.created_at',\n      'date', formatDateTime(new Date(created))\n    );\n  }\n\n  _formatLastUsed(item) {\n    return item.last_used_at ? this.localize(\n      'ui.panel.profile.refresh_tokens.last_used',\n      'date', formatDateTime(new Date(item.last_used_at)),\n      'location', item.last_used_ip\n    ) : this.localize('ui.panel.profile.refresh_tokens.not_used');\n  }\n\n  async _handleCreate() {\n    const name = prompt(this.localize('ui.panel.profile.long_lived_access_tokens.prompt_name'));\n    if (!name) return;\n    try {\n      const token = await this.hass.callWS({\n        type: 'auth/long_lived_access_token',\n        lifespan: 3650,\n        client_name: name,\n      });\n      prompt(this.localize('ui.panel.profile.long_lived_access_tokens.prompt_copy_token'), token);\n      this.fire('hass-refresh-tokens');\n    } catch (err) {\n      // eslint-disable-next-line\n      console.error(err);\n      alert(this.localize('ui.panel.profile.long_lived_access_tokens.create_failed'));\n    }\n  }\n\n  async _handleDelete(ev) {\n    if (!confirm(this.localize('ui.panel.profile.long_lived_access_tokens.confirm_delete', 'name', ev.model.item.client_name))) {\n      return;\n    }\n    try {\n      await this.hass.callWS({\n        type: 'auth/delete_refresh_token',\n        refresh_token_id: ev.model.item.id,\n      });\n      this.fire('hass-refresh-tokens');\n    } catch (err) {\n      // eslint-disable-next-line\n      console.error(err);\n      alert(this.localize('ui.panel.profile.long_lived_access_tokens.delete_failed'));\n    }\n  }\n}\n\ncustomElements.define('ha-long-lived-access-tokens-card', HaLongLivedTokens);\n","import '@polymer/paper-card/paper-card.js';\nimport '@polymer/paper-dropdown-menu/paper-dropdown-menu.js';\nimport '@polymer/paper-item/paper-item.js';\nimport '@polymer/paper-listbox/paper-listbox.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport EventsMixin from '../../mixins/events-mixin.js';\nimport LocalizeMixin from '../../mixins/localize-mixin.js';\n\nimport './ha-settings-row.js';\n\n/*\n * @appliesMixin LocalizeMixin\n * @appliesMixin EventsMixin\n */\nclass HaPickLanguageRow extends\n  LocalizeMixin(EventsMixin(PolymerElement)) {\n  static get template() {\n    return html`\n    <style>\n      a { color: var(--primary-color); }\n    </style>\n    <ha-settings-row narrow='[[narrow]]'>\n      <span slot='heading'>[[localize('ui.panel.profile.language.header')]]</span>\n      <span slot='description'>\n        <a\n          href='https://developers.home-assistant.io/docs/en/internationalization_translation.html'\n          target='_blank'>[[localize('ui.panel.profile.language.link_promo')]]</a>\n      </span>\n      <paper-dropdown-menu label=\"[[localize('ui.panel.profile.language.dropdown_label')]]\" dynamic-align=\"\">\n        <paper-listbox slot=\"dropdown-content\" attr-for-selected=\"language-tag\" selected=\"{{languageSelection}}\">\n          <template is=\"dom-repeat\" items=\"[[languages]]\">\n            <paper-item language-tag$=\"[[item.tag]]\">[[item.nativeName]]</paper-item>\n          </template>\n        </paper-listbox>\n      </paper-dropdown-menu>\n    </ha-settings-row>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      narrow: Boolean,\n      languageSelection: {\n        type: String,\n        observer: 'languageSelectionChanged',\n      },\n      languages: {\n        type: Array,\n        computed: 'computeLanguages(hass)',\n      },\n    };\n  }\n  static get observers() { return ['setLanguageSelection(language)']; }\n\n  computeLanguages(hass) {\n    if (!hass || !hass.translationMetadata) {\n      return [];\n    }\n    return Object.keys(hass.translationMetadata.translations).map(key => ({\n      tag: key,\n      nativeName: hass.translationMetadata.translations[key].nativeName,\n    }));\n  }\n\n  setLanguageSelection(language) {\n    this.languageSelection = language;\n  }\n\n  languageSelectionChanged(newVal) {\n    // Only fire event if language was changed. This prevents select updates when\n    // responding to hass changes.\n    if (newVal !== this.language) {\n      this.fire('hass-language-select', { language: newVal });\n    }\n  }\n}\n\ncustomElements.define('ha-pick-language-row', HaPickLanguageRow);\n","import '@polymer/paper-card/paper-card.js';\nimport '@polymer/paper-dropdown-menu/paper-dropdown-menu.js';\nimport '@polymer/paper-item/paper-item.js';\nimport '@polymer/paper-listbox/paper-listbox.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\n\nimport EventsMixin from '../../mixins/events-mixin.js';\nimport LocalizeMixin from '../../mixins/localize-mixin.js';\n\n/*\n * @appliesMixin LocalizeMixin\n * @appliesMixin EventsMixin\n */\nclass HaPickThemeRow extends\n  LocalizeMixin(EventsMixin(PolymerElement)) {\n  static get template() {\n    return html`\n    <style>\n      a { color: var(--primary-color); }\n    </style>\n    <ha-settings-row narrow='[[narrow]]'>\n      <span slot='heading'>[[localize('ui.panel.profile.themes.header')]]</span>\n      <span slot='description'>\n        <template is='dom-if' if='[[!_hasThemes]]'>\n        [[localize('ui.panel.profile.themes.error_no_theme')]]\n        </template>\n        <a\n          href='https://www.home-assistant.io/components/frontend/#defining-themes'\n          target='_blank'>[[localize('ui.panel.profile.themes.link_promo')]]</a>\n      </span>\n      <paper-dropdown-menu\n        label=\"[[localize('ui.panel.profile.themes.dropdown_label')]]\"\n        dynamic-align\n        disabled='[[!_hasThemes]]'\n      >\n        <paper-listbox slot=\"dropdown-content\" selected=\"{{selectedTheme}}\">\n          <template is=\"dom-repeat\" items=\"[[themes]]\" as=\"theme\">\n            <paper-item>[[theme]]</paper-item>\n          </template>\n        </paper-listbox>\n      </paper-dropdown-menu>\n    </ha-settings-row>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      narrow: Boolean,\n      _hasThemes: {\n        type: Boolean,\n        computed: '_compHasThemes(hass)',\n      },\n      themes: {\n        type: Array,\n        computed: '_computeThemes(hass)',\n      },\n      selectedTheme: {\n        type: Number,\n      },\n    };\n  }\n\n  static get observers() {\n    return [\n      'selectionChanged(hass, selectedTheme)',\n    ];\n  }\n\n  _compHasThemes(hass) {\n    return hass.themes && hass.themes.themes &&\n      Object.keys(hass.themes.themes).length;\n  }\n\n  ready() {\n    super.ready();\n    if (this.hass.selectedTheme && this.themes.indexOf(this.hass.selectedTheme) > 0) {\n      this.selectedTheme = this.themes.indexOf(this.hass.selectedTheme);\n    } else if (!this.hass.selectedTheme) {\n      this.selectedTheme = 0;\n    }\n  }\n\n  _computeThemes(hass) {\n    if (!hass) return [];\n    return ['Backend-selected', 'default'].concat(Object.keys(hass.themes.themes).sort());\n  }\n\n  selectionChanged(hass, selection) {\n    if (selection > 0 && selection < this.themes.length) {\n      if (hass.selectedTheme !== this.themes[selection]) {\n        this.fire('settheme', this.themes[selection]);\n      }\n    } else if (selection === 0 && hass.selectedTheme !== '') {\n      this.fire('settheme', '');\n    }\n  }\n}\n\ncustomElements.define('ha-pick-theme-row', HaPickThemeRow);\n","import '@polymer/paper-toggle-button/paper-toggle-button.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport EventsMixin from '../mixins/events-mixin.js';\n\nexport const pushSupported = (\n  'serviceWorker' in navigator && 'PushManager' in window &&\n  (document.location.protocol === 'https:' ||\n    document.location.hostname === 'localhost' ||\n    document.location.hostname === '127.0.0.1'));\n\n/*\n * @appliesMixin EventsMixin\n */\nclass HaPushNotificationsToggle extends EventsMixin(PolymerElement) {\n  static get template() {\n    return html`\n    <paper-toggle-button\n      disabled=\"[[_compDisabled(disabled, loading)]]\"\n      checked=\"{{pushChecked}}\"\n    ></paper-toggle-button>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: { type: Object, value: null },\n      disabled: {\n        type: Boolean,\n        value: false,\n      },\n      pushChecked: {\n        type: Boolean,\n        value: 'Notification' in window && Notification.permission === 'granted',\n        observer: 'handlePushChange',\n      },\n      loading: {\n        type: Boolean,\n        value: true,\n      }\n    };\n  }\n\n  async connectedCallback() {\n    super.connectedCallback();\n\n    if (!pushSupported) return;\n\n    try {\n      const reg = await navigator.serviceWorker.ready;\n      if (!reg.pushManager) {\n        return;\n      }\n      reg.pushManager.getSubscription().then((subscription) => {\n        this.loading = false;\n        this.pushChecked = !!subscription;\n      });\n    } catch (err) {\n      // We don't set loading to `false` so we remain disabled\n    }\n  }\n\n  handlePushChange(pushChecked) {\n    // Somehow this is triggered on Safari on page load causing\n    // it to get into a loop and crash the page.\n    if (!pushSupported) return;\n\n    if (pushChecked) {\n      this.subscribePushNotifications();\n    } else {\n      this.unsubscribePushNotifications();\n    }\n  }\n\n  async subscribePushNotifications() {\n    const reg = await navigator.serviceWorker.ready;\n\n    try {\n      const sub = await reg.pushManager.subscribe({ userVisibleOnly: true });\n\n      let browserName;\n      if (navigator.userAgent.toLowerCase().indexOf('firefox') > -1) {\n        browserName = 'firefox';\n      } else {\n        browserName = 'chrome';\n      }\n\n      await this.hass.callApi('POST', 'notify.html5', {\n        subscription: sub,\n        browser: browserName\n      });\n    } catch (err) {\n      const message = err.message || 'Notification registration failed.';\n\n      // eslint-disable-next-line\n      console.error(err);\n\n      this.fire('hass-notification', { message });\n      this.pushChecked = false;\n    }\n  }\n\n  async unsubscribePushNotifications() {\n    const reg = await navigator.serviceWorker.ready;\n\n    try {\n      const sub = await reg.pushManager.getSubscription();\n\n      if (!sub) return;\n\n      await this.hass.callApi('DELETE', 'notify.html5', { subscription: sub });\n      await sub.unsubscribe();\n    } catch (err) {\n      const message = err.message || 'Failed unsubscribing for push notifications.';\n\n      // eslint-disable-next-line\n      console.error('Error in unsub push', err);\n\n      this.fire('hass-notification', { message });\n      this.pushChecked = true;\n    }\n  }\n\n  _compDisabled(disabled, loading) {\n    return disabled || loading;\n  }\n}\n\ncustomElements.define('ha-push-notifications-toggle', HaPushNotificationsToggle);\n","import '@polymer/iron-flex-layout/iron-flex-layout-classes.js';\nimport '@polymer/iron-label/iron-label.js';\nimport '@polymer/paper-card/paper-card.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport isComponentLoaded from '../../common/config/is_component_loaded.js';\nimport { pushSupported } from '../../components/ha-push-notifications-toggle.js';\n\nimport LocalizeMixin from '../../mixins/localize-mixin.js';\n\nimport './ha-settings-row.js';\n\n/*\n * @appliesMixin LocalizeMixin\n */\nclass HaPushNotificationsRow extends LocalizeMixin(PolymerElement) {\n  static get template() {\n    return html`\n    <style>\n      a { color: var(--primary-color); }\n    </style>\n    <ha-settings-row narrow='[[narrow]]'>\n      <span slot='heading'>[[localize('ui.panel.profile.push_notifications.header')]]</span>\n      <span\n        slot='description'\n      >\n        [[_description(_platformLoaded, _pushSupported)]]\n        <a\n          href='https://www.home-assistant.io/components/notify.html5/'\n          target='_blank'>[[localize('ui.panel.profile.push_notifications.link_promo')]]</a>\n      </span>\n      <ha-push-notifications-toggle\n        hass=\"[[hass]]\"\n        disabled='[[_error]]'\n      ></ha-push-notifications-toggle>\n    </ha-settings-row>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      narrow: Boolean,\n      _platformLoaded: {\n        type: Boolean,\n        computed: '_compPlatformLoaded(hass)'\n      },\n      _pushSupported: {\n        type: Boolean,\n        value: pushSupported,\n      },\n      _error: {\n        type: Boolean,\n        computed: '_compError(_platformLoaded, _pushSupported)',\n      },\n    };\n  }\n\n  _compPlatformLoaded(hass) {\n    return isComponentLoaded(hass, 'notify.html5');\n  }\n\n  _compError(platformLoaded, pushSupported_) {\n    return !platformLoaded || !pushSupported_;\n  }\n\n  _description(platformLoaded, pushSupported_) {\n    let key;\n    if (!pushSupported_) {\n      key = 'error_use_https';\n    } else if (!platformLoaded) {\n      key = 'error_load_platform';\n    } else {\n      key = 'description';\n    }\n    return this.localize(`ui.panel.profile.push_notifications.${key}`);\n  }\n}\n\ncustomElements.define('ha-push-notifications-row', HaPushNotificationsRow);\n","import '@polymer/app-layout/app-header-layout/app-header-layout.js';\nimport '@polymer/app-layout/app-header/app-header.js';\nimport '@polymer/paper-card/paper-card.js';\nimport '@polymer/paper-item/paper-item-body.js';\nimport '@polymer/paper-item/paper-item.js';\nimport '@polymer/paper-button/paper-button.js';\nimport '@polymer/app-layout/app-toolbar/app-toolbar.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport '../../components/ha-menu-button.js';\nimport '../../resources/ha-style.js';\n\nimport EventsMixin from '../../mixins/events-mixin.js';\n\nimport './ha-change-password-card.js';\nimport './ha-mfa-modules-card.js';\nimport './ha-refresh-tokens-card.js';\nimport './ha-long-lived-access-tokens-card.js';\n\nimport './ha-pick-language-row.js';\nimport './ha-pick-theme-row.js';\nimport './ha-push-notifications-row.js';\n\n/*\n * @appliesMixin EventsMixin\n */\nclass HaPanelProfile extends EventsMixin(PolymerElement) {\n  static get template() {\n    return html`\n    <style include=\"ha-style\">\n      :host {\n        -ms-user-select: initial;\n        -webkit-user-select: initial;\n        -moz-user-select: initial;\n      }\n\n      .content {\n        display: block;\n        max-width: 600px;\n        margin: 0 auto;\n      }\n\n      .content > * {\n        display: block;\n        margin: 24px 0;\n      }\n    </style>\n\n    <app-header-layout has-scrolling-region>\n      <app-header slot=\"header\" fixed>\n        <app-toolbar>\n          <ha-menu-button narrow='[[narrow]]' show-menu='[[showMenu]]'></ha-menu-button>\n          <div main-title>Profile</div>\n        </app-toolbar>\n      </app-header>\n\n      <div class='content'>\n        <paper-card heading='[[hass.user.name]]'>\n          <div class='card-content'>\n            You are currently logged in as [[hass.user.name]].\n            <template is='dom-if' if='[[hass.user.is_owner]]'>You are an owner.</template>\n          </div>\n\n          <ha-pick-language-row\n            narrow=\"[[narrow]]\"\n            hass=\"[[hass]]\"\n          ></ha-pick-language-row>\n          <ha-pick-theme-row\n            narrow=\"[[narrow]]\"\n            hass=\"[[hass]]\"\n          ></ha-pick-theme-row>\n          <ha-push-notifications-row\n            narrow=\"[[narrow]]\"\n            hass=\"[[hass]]\"\n          ></ha-push-notifications-row>\n\n          <div class='card-actions'>\n            <paper-button\n              class='warning'\n              on-click='_handleLogOut'\n            >Log out</paper-button>\n          </div>\n        </paper-card>\n\n        <template is=\"dom-if\" if=\"[[_canChangePassword(hass.user)]]\">\n          <ha-change-password-card hass=\"[[hass]]\"></ha-change-password-card>\n        </template>\n\n        <ha-mfa-modules-card\n          hass='[[hass]]'\n          mfa-modules='[[hass.user.mfa_modules]]'\n        ></ha-mfa-modules-card>\n\n        <ha-refresh-tokens-card\n          hass='[[hass]]'\n          refresh-tokens='[[_refreshTokens]]'\n          on-hass-refresh-tokens='_refreshRefreshTokens'\n        ></ha-refresh-tokens-card>\n\n        <ha-long-lived-access-tokens-card\n          hass='[[hass]]'\n          refresh-tokens='[[_refreshTokens]]'\n          on-hass-refresh-tokens='_refreshRefreshTokens'\n        ></ha-long-lived-access-tokens-card>\n      </div>\n    </app-header-layout>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      narrow: Boolean,\n      showMenu: Boolean,\n      _refreshTokens: Array,\n    };\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this._refreshRefreshTokens();\n  }\n\n  async _refreshRefreshTokens() {\n    this._refreshTokens = await this.hass.callWS({\n      type: 'auth/refresh_tokens'\n    });\n  }\n\n  _handleLogOut() {\n    this.fire('hass-logout');\n  }\n\n  _canChangePassword(user) {\n    return user.credentials.some(cred => cred.auth_provider_type === 'homeassistant');\n  }\n}\n\ncustomElements.define('ha-panel-profile', HaPanelProfile);\n"],"sourceRoot":""}