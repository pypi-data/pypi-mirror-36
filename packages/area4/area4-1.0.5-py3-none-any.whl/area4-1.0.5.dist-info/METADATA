Metadata-Version: 2.1
Name: area4
Version: 1.0.5
Summary: Dividers in Python, the easy way! Multiple different divider looks.
Home-page: https://rdil.github.io/area4
Author: RDIL
Author-email: contactspaceboom@gmail.com
License: UNKNOWN
Project-URL: Bug Tracker, https://github.com/RDIL/area4/issues
Project-URL: Documentation, https://github.com/RDIL/area4/blob/master/README.md#area4
Project-URL: Source Code, https://github.com/RDIL/area4
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: End Users/Desktop
Classifier: Topic :: Software Development :: Libraries
Classifier: Topic :: Utilities
Classifier: Natural Language :: English
Description-Content-Type: text/markdown

# area4
Dividers in Python, the easy way!  Four different types.  [(As seen on PyPI!)](https://pypi.org/project/area4)  
*Version: 1.0.5*  
<span style="text-align: center;">[![Vulnerabilities Badge](https://snyk.io/test/github/RDIL/area4/badge.svg?targetFile=requirements.txt)](https://snyk.io/test/github/RDIL/area4?targetFile=requirements.txt) ![Travis Build](https://travis-ci.com/RDIL/area4.svg?branch=master) ![](https://img.shields.io/badge/license-MIT-orange.svg) [![](https://img.shields.io/badge/pypi-1.0.5-purple.svg)](https://pypi.org/project/area4) [![CodeFactor](https://www.codefactor.io/repository/github/rdil/area4/badge)](https://www.codefactor.io/repository/github/rdil/area4)</span>  

## *[View on GitHub](https://github.com/RDIL/area4)* <-------  

## Example  
If you don't understand what we mean by dividers, fear not.  We mean dividers that divide text in the Python console, or anything you use the library for.  An example can be found [here](https://repl.it/@jumbocakeyumyum/area4tests).  

## Divider looks  
*The number before it is the number used in calling it, so for example if you want divider 1, it would be area4.divider1 or area4.div1().*  
1- Dashed  
2- Solid  
3- Dotted  
4- Black Squares  
5- Up arrow emojis  
6- Down arrow emojis  
7- Equal signs  
And more coming soon!  

## Installing  
*You may install in one of the following ways:*  
* Through pip  
* Through requirements.txt  

### To install via pip  
To install via pip, open a terminal, and type the following command:  
```  
pip install area4  
```  
It should install.  

### To install via requirements.txt  
To use area4 as a dependency for your project, you can add the following line:  
```  
area4  
```  
You must have prior knowledge with using a requirements.txt file to take this path.  

## Using  
After you install the package (instructions above), you need to import it into any Python file that you will use it in.  You can do this by adding the following line to the top:  
```  
import area4  
```  
After doing so, you can use any of these methods to get a divider in your console:  

Just using plain print commands:  
```  
print(area4.divider1)  
print(area4.divider2)  
print(area4.divider3)  
print(area4.divider4)  
print(area4.divider5)  
print(area4.divider6)  
print(area4.divider7)  
```  
Using functions:  
```  
area4.div1()  
area4.div2()  
area4.div3()  
area4.div4()  
area4.div5()  
area4.div6()  
area4.div7()  
```  
And if you want to you can check to make sure the library is working:  
```  
area4.area4info()  
```  

### Custom Dividers  
In version 1.0.3, custom dividers were added.  They can't be saved, but will stay applied until the Python script ends.  
They can be called/used/updated this way:  
```   
# Setting:  
area4.custom_div = str("dividertexthere")   

# Using:  
area4.customdiv()  
# or...  
print(area4.custom_div)  
```   



