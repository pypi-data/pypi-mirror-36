Metadata-Version: 2.1
Name: pydigitalstrom
Version: 0.1.1
Summary: python api client for digitalSTROM
Home-page: https://github.com/lociii/pydigitalstrom
Author: Jens Nistler
Author-email: opensource@jensnistler.de
License: MIT
Description: [![PyPI version](https://badge.fury.io/py/pydigitalstrom.svg)](https://pypi.org/project/pydigitalstrom)
        [![Travis CI build status](https://travis-ci.org/lociii/pydigitalstrom.svg)](https://travis-ci.org/lociii/pydigitalstrom)
        [![Coverage Status](https://coveralls.io/repos/github/lociii/pydigitalstrom/badge.svg?branch=master)](https://coveralls.io/github/lociii/pydigitalstrom?branch=master)
        [![MIT Licence](https://badges.frapsoft.com/os/mit/mit.svg?v=103)](https://opensource.org/licenses/mit-license.php)
        
        # pydigitalstrom
        
        Run bundled docker
        ```bash
        $ docker-compose build
        
        $ docker-compose up -d
        
        $ docker-compose exec python bash
        ```
        
        ## Status
        
        Tested devices
        
        <table>
            <tr>
                <th>Device name</th>
                <th>Color group / device type</th>
                <th>Features</th>
            </tr>
            <tr>
                <td>GE-KL200</td>
                <td>Yellow (light)</td>
                <td>
                    get status, turn on, turn off, toggle, identify, update status
                </td>
            </tr>
            <tr>
                <td>GE-KM200</td>
                <td>Yellow (light)</td>
                <td>
                    get status, get brightness, turn on, turn off, toggle, identify, set brightness (if output mode permits), update status/brightness
                </td>
            </tr>
                <tr>
                <td>GR-KL200</td>
                <td>Grey (blinds)</td>
                <td>
                    set position, get position, update position
                </td>
            </tr>
            </tr>
                <tr>
                <td>SW-ZW200-F</td>
                <td>Black (joker)</td>
                <td>
                    (adaptor plug) get status, turn on, turn off, toggle, update status
                </td>
            </tr>
            </tr>
                <tr>
                <td>SW-TKM200</td>
                <td>Black (joker)</td>
                <td>
                    (push button) get status, update status
                </td>
            </tr>
            </tr>
                <tr>
                <td>dSM12</td>
                <td>Meter</td>
                <td>
                    get metadata, get current power consumption, get overall power consumption, update metadata/power consumption
                </td>
            </tr>
            </tr>
                <tr>
                <td>dSS IP</td>
                <td>Server</td>
                <td>
                    get metadata, update metadata
                </td>
            </tr>
            </tr>
                <tr>
                <td>Scene</td>
                <td>Meta</td>
                <td>
                    turn on, turn off
                </td>
            </tr>
        </table>
        
        ## Example usage
        
        ```python
        # -*- coding: UTF-8 -*-
        import urllib3
        
        from pydigitalstrom.client import DSClient
        
        # disable certificate warnings - dss uses self signed
        urllib3.disable_warnings()
        config_path = os.path.join(os.path.dirname(os.path.abspath(__file__)), 'config', 'auth.json')
        client = DSClient(host='https://dss.local:8080', username='dssadmin', password='mySuperSecretPassword',
                          config_path=config_path, apartment_name='Apartment')
        lights = client.get_lights()
        for light in lights.values():
            print(light.name)
            print(light.unique_id)
            light.turn_on()
        ```
        
        
        # Changelog
        All notable changes to this project will be documented in this file.
        
        The format is based on [Keep a Changelog](http://keepachangelog.com/en/1.0.0/)
        and this project adheres to [Semantic Versioning](http://semver.org/spec/v2.0.0.html).
        
        ## [Unreleased]
        
        ## [0.1.1] - 2018-09-10
        ### Added
        - Tests for blind, light, meter and scene
        - Add move_up, move_down and stop to blind
        ### Changed
        - DSDevice and DSTerminal signature of request now allows for responses without result node
        
        ## [0.1.0] - 2018-09-09
        ### Changed
        - Complete rewrite
        
        ### Added
        - (yellow) Support for GE-KL200, GE-KM200
        - (grey) Support for GR-KL200
        - (black) Support for SW-ZW200-F, SW-TKM200
        - (meter) Support for dSM12
        - (server) Support for dSS IP
        - Support for scenes
        
        ## [0.0.1] - 2016-11-23
        ### Added
        - Initial release
        
Keywords: digitalstrom,dss,ds
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Console
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Topic :: Home Automation
Requires-Python: >=3.5
Description-Content-Type: text/markdown
