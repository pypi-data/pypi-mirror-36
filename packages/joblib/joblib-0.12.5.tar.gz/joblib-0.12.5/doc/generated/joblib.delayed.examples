

Examples using ``joblib.delayed``
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="This example illustrates how to cache intermediate computing results using :class:`joblib.Memor...">

.. only:: html

    .. figure:: /auto_examples/images/thumb/sphx_glr_nested_parallel_memory_thumb.png

        :ref:`sphx_glr_auto_examples_nested_parallel_memory.py`

.. raw:: html

    </div>

.. only:: not html

    * :ref:`sphx_glr_auto_examples_nested_parallel_memory.py`

.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="Randomness is affected by parallel execution differently by the different backends.">

.. only:: html

    .. figure:: /auto_examples/images/thumb/sphx_glr_parallel_random_state_thumb.png

        :ref:`sphx_glr_auto_examples_parallel_random_state.py`

.. raw:: html

    </div>

.. only:: not html

    * :ref:`sphx_glr_auto_examples_parallel_random_state.py`

.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="This example illustrates some features enabled by using a memory map (:class:`numpy.memmap`) wi...">

.. only:: html

    .. figure:: /auto_examples/images/thumb/sphx_glr_parallel_memmap_thumb.png

        :ref:`sphx_glr_auto_examples_parallel_memmap.py`

.. raw:: html

    </div>

.. only:: not html

    * :ref:`sphx_glr_auto_examples_parallel_memmap.py`
