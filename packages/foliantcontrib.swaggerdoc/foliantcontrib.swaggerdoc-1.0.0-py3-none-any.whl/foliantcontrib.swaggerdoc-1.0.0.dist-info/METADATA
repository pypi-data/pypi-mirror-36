Metadata-Version: 2.1
Name: foliantcontrib.swaggerdoc
Version: 1.0.0
Summary: Documentation generator for Swagger API
Home-page: UNKNOWN
Author: Daniil Minukhin
Author-email: ddddsa@gmail.com
License: MIT
Platform: any
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Topic :: Documentation
Classifier: Topic :: Utilities
Description-Content-Type: text/markdown
Requires-Dist: foliant (>=1.0.5)

# Swagger API Docs Generator for Foliant

This preprocessor generates Markdown documentation from JSON generated by [Swagger](https://swagger.io/). It uses [Jinja2](http://jinja.pocoo.org/) templating engine for customizing the layout.

## Installation

```bash
$ pip install foliantcontrib.swaggerdoc
```

## Config

To enable the preprocessor, add `pgsqldoc` to `preprocessors` section in the project config:

```yaml
preprocessors:
    - swaggerdoc
```

The preprocessor has a number of options:

```yaml
preprocessors:
    - swaggerdoc:
        swagger_json_urls: http://localhost/swagger.json
        swagger_json_paths: swagger.json
        template: swagger.j2
```

`swagger_json_urls`
:    URL to JSON generated by Swagger or several such urls (in this case use yaml list format).

`swagger_json_paths`
:    path to JSON generated by Swagger relative to project dir or several such paths (in this case use yaml list format).

> Important notice about those json files. Preprocessor would start parsing JSONS from the first url, subsequently merging data from following JSONS in the same order they are declared in config. First URLs, then paths.

`template`
:   Path to jinja-template for rendering the generated documentation. Path is relative to the project directory. Default: `swagger.j2`

## Usage

Add a `<<swaggerdoc></swaggerdoc>` tag at the position in the document where the generated documentation should be inserted:

```markdown
# Introduction

This document contains the automatically generated documentation of our API.

<<swaggerdoc></swaggerdoc>
```

Each time the preprocessor encounters the tag `<<swaggerdoc></swaggerdoc>` it inserts the whole generated documentation text instead of it. The paths or urls to swagger.json are taken from the config-file.

You can also specify some parameters (or all of them) in the tag options:

```markdown
# Introduction

Introduction text for API documentation.

<swaggerdoc swagger_json_urls="http://localhost/swagger.json"
            template="swagger.j2">
</swaggerdoc>
```

Tag parameters have the highest priority.

Use comma to have several urls\paths in tag options.

This way you can have documentation from several different JSON files in one foliant project (even in one md-file if you like it so).


