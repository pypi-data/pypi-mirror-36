Metadata-Version: 2.1
Name: winmltools
Version: 1.2.0.912
Summary: Converts Machine Learning models to ONNX for use in Windows ML
Home-page: https://microsoft.com
Author: Microsoft Corporation
Author-email: winml@microsoft.com
License: MIT License
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Operating System :: Microsoft :: Windows
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: License :: OSI Approved :: MIT License
Requires-Dist: numpy
Requires-Dist: protobuf
Requires-Dist: onnx (==1.2.3)
Requires-Dist: onnxmltools



Introduction 
============

WinMLTools enables you to convert models from different machine 
learning toolkits into `ONNX <https://onnx.ai>`_ for use with Windows ML. 
Currently the following toolkits are supported:

* Apple Core ML
* scikit-learn
  (subset of models convertible to ONNX)
* xgboost
* libSVM
* Keras

Install
=======

::

    pip install winmltools

Dependencies
============

`scikit-learn <http://scikit-learn.org/stable/>`_ is needed to convert
a scikit-learn model, `coremltools <https://pypi.python.org/pypi/coremltools>`_
for Apple Core ML.

Example
=======

Here is a simple example to convert a Core ML model:


::

    import winmltools
    import coremltools

    model_coreml = coremltools.utils.load_spec("image_recognition.mlmodel")
    model_onnx = winmltools.convert.convert_coreml(model_coreml, "Image_Reco")

    # Save as text
    winmltools.utils.save_text(model_onnx, "image_recognition.json")

    # Save as protobuf
    winmltools.utils.save_model(model_onnx, "image_recognition.onnx")

License
=======

MIT License


